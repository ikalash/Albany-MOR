-------------------Priorities (meeting with Erik 7/31/17)----------------------
1.) Everything ported to Tpetra for Poisson - DONE!
2.) Schrodinger ported to Tpetra - Irina thinks is done; double check (SaveEigenData)
3.) Multi-Problem ported to Tpetra - TODO (Irina)
4.) Write test for Poisson-Schrodinger (Epetra) - TODO (Irina)
5.) Test CI compilation, move to Albany, write tests (Epetra) - TODO (Erik, Dan)
6.) Convert 5.) to Tpetra.
7.) Convert 4.) to Tpetra.

------------------------------------------------------------------------------------

This files summarizes what is / is not being tested in QCAD, and also what is / is not converted to Tpetra/Thyra from Epetra/EpetraExt.

-------------------------------------------------------------
TESTING
-------------------------------------------------------------

- Tested Solution Method: Poisson, Schrodiner, Multi-Problem; Poisson-Schrodinger NOT tested (though input files exist)
	=> QCAD::Solver class is tested
	=> QCAD::CoupledPoissonSchrodinger, QCAD::CoupledPSJacobian, QCAD::CoupledPSObserver NOT tested i
	=> QCAD::GenEigensolver is tested
        => QCAD::MultiSolutionObserver is tested  
- Tested responses: Saddle Values; Greens Function Tunneling NOT tested (and no input files exist)
- Valid problem names: Poisson (tested), Schrodinger (tested), Schrodinger CI (NOT tested), Poisson Schrodinger (tested), Poisson Schrodinger CI (NOT tested)
	=> Question for Erik: how to build with ALBANY_CI?  Need some extra include dirs to build.  If that's enabled, some CI tests _will_ be run.  Is CI being tested anywhere?  Do we know it is not broken?

-------------------------------
SUMMARY - NOT TESTED
-------------------------------
- QCAD::CoupledPoissonSchrodinger
- QCAD::CoupledPSJacobian
- QCAD::CoupledPSObserver 
- QCAD::GreensFunctionTunnelingResponse
- Within QCAD::Solver - Schrodinger CI and Poisson Schrodinger CI (is this tested somewhere by Erik or other QCAD folks?)

-----------------tests/small/QCAD directory------------------
QCAD Multi-Problem input files

*Schrodinger/input_parabolic2D_qcad.xml   
*Schrodinger/input_formula2D_qcad.xml    
*Poisson/input_mosdot_2D_qcad.xml    
*PoissonSchrodinger/input_ps_mosdot_2D.xml    
*PoissonSchrodinger/input_ps_moscap_1D.xml    
PoissonSchrodingerCI/input_psci_mosdot_2D.xml    
SchrodingerCI/input_parabolic3D_nm.xml    
SchrodingerCI/input_parabolic3D_um.xml    
SchrodingerCI/input_parabolic2D.xml    

QCAD Poisson-Schrodinger input files

PoissonSchrodinger/input_ps_integrated_test.xml    
PoissonSchrodinger/input_ps_mosdot_2D.xml - I have tried running this input file by hand and the syntax in it is not up-to-date!  This suggest to me that no one has run this test in a long time....


-----------------tests/large/QCAD directory------------------
QCAD Multi-Problem input files

SchrodingerCI/input_doubledonor.xml 


*Indicates that the test specified by input file is run by ctest.



-------------------------------------------------------------------
CONVERSIONS TO TPETRA/THYRA STATUS
-------------------------------------------------------------------
- Albany::SaveEigenData class needs to be converted to not use NOX::Epetra::Observer. 
I believe NOX::Epetra::Observer does not have a Thyra/Tpetra analog and needs to be
implemented in nox, for SaveEigenDataConstructor and NOXObserverConstructor functions to work
in Albany::SolverFactory class.
- QCAD::Solver and QCAD::CoupledPoissonSchrodinger have been partially but not completely converted to Thyra.
	=> QCADT::Solver class is missing some implementations, so there is compilation error when compiling with this
	sort of object constructed in Albany::SolverFactory about certain expected virtual methods being pure in the class.
- QCAD::GreensFunctionTunnelingResponse has not been converted to Thyra/Tpetra. 
- Basic QCAD/Poisson problems have Tpetra version and are tested with the AlbanyT executable.
- Helper functions in QCAD directory based on EpetraExt::ModelEvaluator / Epetra::Operator still largely 
need to be converted (some have been partially converted, but were not tested).
