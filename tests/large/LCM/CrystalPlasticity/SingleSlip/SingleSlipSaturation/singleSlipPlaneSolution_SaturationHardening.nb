(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    495978,       9842]
NotebookOptionsPosition[    487082,       9577]
NotebookOutlinePosition[    487526,       9596]
CellTagsIndexPosition[    487483,       9593]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Testing singleSlipPlaneSolution.xml with Saturation Hardening\
\>", "Title",
 CellChangeTimes->{{3.6361189492461967`*^9, 3.636118963678875*^9}, {
  3.656258822816071*^9, 3.6562588245525217`*^9}, {3.690038130939653*^9, 
  3.690038134941131*^9}, {3.692562752871172*^9, 3.69256275463342*^9}}],

Cell[TextData[{
 "In this notebook, we examine slip along a plane that is rotated to the \
global axes.\n\n",
 StyleBox["<!-- \
==============================================================================\
============= -->\n\n     <ParameterList \
name=\[CloseCurlyDoubleQuote]Materials\[CloseCurlyDoubleQuote]>\n\n          \
<ParameterList \
name=\[CloseCurlyDoubleQuote]metal_fcc\[CloseCurlyDoubleQuote]>\n\n\n<!-- \
~~~~~~~~~ Specify material model \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n\n            \
   <ParameterList name=\[CloseCurlyDoubleQuote]Material Model\
\[CloseCurlyDoubleQuote]>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Model Name\[CloseCurlyDoubleQuote]\n                  \
             type=\[CloseCurlyDoubleQuote]string\[CloseCurlyDoubleQuote]\n    \
                           value=\[CloseCurlyDoubleQuote]CrystalPlasticity\
\[CloseCurlyDoubleQuote]/>\n\n               </ParameterList>\n\n\n<!-- \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
~~~~~~~~~~~~~ -->\n<!-- ~~~~~~~~~ Set program controls \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<!-- \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
~~~~~~~~~~~~~ -->\n\n               <Parameter \
name=\[CloseCurlyDoubleQuote]Integration Scheme\[CloseCurlyDoubleQuote]\n     \
                     type=\[CloseCurlyDoubleQuote]string\
\[CloseCurlyDoubleQuote]\n                          value=\
\[CloseCurlyDoubleQuote]Implicit\[CloseCurlyDoubleQuote]/>\n\n               \
<Parameter name=\[CloseCurlyDoubleQuote]Implicit Integration Relative \
Tolerance\[CloseCurlyDoubleQuote]\n                          type=\
\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n                      \
    value=\[CloseCurlyDoubleQuote]1.0e-35\[CloseCurlyDoubleQuote]/>\n\n       \
        <Parameter name=\[CloseCurlyDoubleQuote]Implicit Integration Absolute \
Tolerance\[CloseCurlyDoubleQuote]\n                          type=\
\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n                      \
    value=\[CloseCurlyDoubleQuote]1.0e-10\[CloseCurlyDoubleQuote]/>\n\n       \
        <Parameter name=\[CloseCurlyDoubleQuote]Implicit Integration Max \
Iterations\[CloseCurlyDoubleQuote]\n                          type=\
\[CloseCurlyDoubleQuote]int\[CloseCurlyDoubleQuote]\n                         \
 value=\[CloseCurlyDoubleQuote]100\[CloseCurlyDoubleQuote]/>\n\n       \
<ParameterList name=\[CloseCurlyDoubleQuote]Crystal Elasticity\
\[CloseCurlyDoubleQuote]>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]C11\[CloseCurlyDoubleQuote]\n                         \
      type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n           \
                    value=\[CloseCurlyDoubleQuote]204.6e3\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]C12\[CloseCurlyDoubleQuote]\n                         \
      type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n           \
                    value=\[CloseCurlyDoubleQuote]137.7e3\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]C44\[CloseCurlyDoubleQuote]\n                         \
      type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n           \
                    value=\[CloseCurlyDoubleQuote]126.2e3\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Basis Vector 1\[CloseCurlyDoubleQuote]\n              \
                 type=\[CloseCurlyDoubleQuote]Array(double)\
\[CloseCurlyDoubleQuote]\n                               value=\
\[CloseCurlyDoubleQuote]{",
  FontSize->10],
 Cell[BoxData[GridBox[{
    {
     RowBox[{
      RowBox[{"-", "0.09175170953613698363378598754902977856`16."}], ","}], 
     RowBox[{"0.90824829046386301636621401245097022144`16.", ","}], 
     "0.40824829046386301636621401245097022144`16."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]],
  CellChangeTimes->{{3.657286694391081*^9, 3.657286723716302*^9}, 
    3.6572904344488573`*^9, 3.6573013191745653`*^9, 3.657307681255314*^9, 
    3.657360860235388*^9, 3.657360893383852*^9, 3.657362300766039*^9, 
    3.657364306410516*^9, 3.6573644068430767`*^9, 3.657367047924333*^9, 
    3.657387249515235*^9},
  FontSize->10],
 StyleBox["}\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter \
name=\[CloseCurlyDoubleQuote]Basis Vector 2\[CloseCurlyDoubleQuote]\n         \
                      type=\[CloseCurlyDoubleQuote]Array(double)\
\[CloseCurlyDoubleQuote]\n                               value=\
\[CloseCurlyDoubleQuote]{",
  FontSize->10],
 Cell[BoxData[GridBox[{
    {
     RowBox[{"0.90824829046386301636621401245097022144`16.", ","}], 
     RowBox[{
      RowBox[{"-", "0.09175170953613698363378598754902977856`16."}], ","}], 
     "0.40824829046386301636621401245097022144`16."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]],
  CellChangeTimes->{{3.657286694391081*^9, 3.657286723716302*^9}, 
    3.6572904344488573`*^9, 3.6573013191745653`*^9, 3.657307681255314*^9, 
    3.657360860235388*^9, 3.657360893383852*^9, 3.657362300766039*^9, 
    3.657364306410516*^9, 3.6573644068430767`*^9, 3.657367047924333*^9, 
    3.657387249515235*^9},
  FontSize->10],
 StyleBox["}\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter \
name=\[CloseCurlyDoubleQuote]Basis Vector 3\[CloseCurlyDoubleQuote]\n         \
                      type=\[CloseCurlyDoubleQuote]Array(double)\
\[CloseCurlyDoubleQuote]\n                               value=\
\[CloseCurlyDoubleQuote]{",
  FontSize->10],
 Cell[BoxData[GridBox[{
    {
     RowBox[{"0.40824829046386301636621401245097022144`16.", ","}], 
     RowBox[{"0.40824829046386301636621401245097022144`16.", ","}], 
     RowBox[{"-", "0.81649658092772603273242802490196379732`16."}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]],
  CellChangeTimes->{{3.657286694391081*^9, 3.657286723716302*^9}, 
    3.6572904344488573`*^9, 3.6573013191745653`*^9, 3.657307681255314*^9, 
    3.657360860235388*^9, 3.657360893383852*^9, 3.657362300766039*^9, 
    3.657364306410516*^9, 3.6573644068430767`*^9, 3.657367047924333*^9, 
    3.657387249515235*^9},
  FontSize->10],
 StyleBox["}\[CloseCurlyDoubleQuote]/>\n\n               </ParameterList>\n   \
            \n        <!-- \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
~~~~~~~~~~~~~ -->\n<!-- ~~~~~~~~~ Set crystal plasticity parameters \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n<!-- \
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
~~~~~~~~~~~~~ -->\n\n               <Parameter \
name=\[CloseCurlyDoubleQuote]Number of Slip Systems\[CloseCurlyDoubleQuote]\n \
                         type=\[CloseCurlyDoubleQuote]int\
\[CloseCurlyDoubleQuote]\n                         value=\
\[CloseCurlyDoubleQuote]1\[CloseCurlyDoubleQuote]/>\n\n<!-- ~~~~~~~~~ Specify \
slip system 1 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\
\n\n               <ParameterList name=\[CloseCurlyDoubleQuote]Slip System 1\
\[CloseCurlyDoubleQuote]>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Slip Direction\[CloseCurlyDoubleQuote]\n              \
                 type=\[CloseCurlyDoubleQuote]Array(double)\
\[CloseCurlyDoubleQuote]\n                               value=\
\[CloseCurlyDoubleQuote]{-1.0, 1.0, 0.0}\[CloseCurlyDoubleQuote]/>\n\n        \
            <Parameter name=\[CloseCurlyDoubleQuote]Slip Normal\
\[CloseCurlyDoubleQuote]\n                               type=\
\[CloseCurlyDoubleQuote]Array(double)\[CloseCurlyDoubleQuote]\n               \
                value=\[CloseCurlyDoubleQuote]{1.0, 1.0, 1.0}\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Tau Critical\[CloseCurlyDoubleQuote]\n                \
               type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n  \
                             value=\[CloseCurlyDoubleQuote]122.0\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Gamma Dot\[CloseCurlyDoubleQuote]\n                   \
            type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n     \
                          value=\[CloseCurlyDoubleQuote]1.0\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Gamma Exponent\[CloseCurlyDoubleQuote]\n              \
                 type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n\
                               value=\[CloseCurlyDoubleQuote]50.0\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Hardening\[CloseCurlyDoubleQuote]\n                   \
            type=\[CloseCurlyDoubleQuote]double\[CloseCurlyDoubleQuote]\n     \
                          value=\[CloseCurlyDoubleQuote]0.0\
\[CloseCurlyDoubleQuote]/>\n\n                    <Parameter name=\
\[CloseCurlyDoubleQuote]Hardening Exponent\[CloseCurlyDoubleQuote]\n          \
                     type=\[CloseCurlyDoubleQuote]double\
\[CloseCurlyDoubleQuote]\n                               value=\
\[CloseCurlyDoubleQuote]0.0\[CloseCurlyDoubleQuote]/>\n\n               \
</ParameterList>       ",
  FontSize->10]
}], "Text",
 CellChangeTimes->{{3.63611897049667*^9, 3.636119037134677*^9}, {
  3.636119106848078*^9, 3.6361193524250603`*^9}, {3.656258763669532*^9, 
  3.656258809415811*^9}, {3.656878030429708*^9, 3.656878033406632*^9}, {
  3.65728691274312*^9, 3.657286919232417*^9}, {3.657286967587533*^9, 
  3.6572870468419237`*^9}, {3.657288106694275*^9, 3.657288116620426*^9}, {
  3.657387343548175*^9, 3.6573873836199827`*^9}, {3.657449621992638*^9, 
  3.6574496784468307`*^9}, {3.657920454760728*^9, 3.6579205101963243`*^9}, {
  3.657930372734489*^9, 3.6579303728362627`*^9}}],

Cell[CellGroupData[{

Cell["State basis for material coordinate system", "Section",
 CellChangeTimes->{{3.636115656444985*^9, 3.63611566587757*^9}}],

Cell["\<\
Looking at a basis derived to simplify Schmid tensor and E3 (for debugging)\
\>", "Text",
 CellChangeTimes->{{3.657448869332717*^9, 3.657448899264811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basis", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "6", "]"}]}], "-", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "6", "]"}]}], "+", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "6", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "6", "]"}]}], "+", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "6", "]"}]}], "-", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "6", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "6", "]"}]}], ",", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "6", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2"}], "/", 
        RowBox[{"Sqrt", "[", "6", "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "basis", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"N", "[", 
   RowBox[{"basis", ",", "16"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkBasis", " ", "=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"basis", " ", ".", " ", 
       RowBox[{"Transpose", "[", "basis", "]"}]}], "-", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDot12", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All"}], "]"}], "]"}], " ", ".", " ", 
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDot13", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All"}], "]"}], "]"}], " ", ".", " ", 
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDot23", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "All"}], "]"}], "]"}], " ", ".", " ", 
     RowBox[{"basis", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkCross12", "=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"basis", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkCross23", " ", "=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "All"}], "]"}], "]"}], ",", 
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"basis", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "All"}], "]"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkCross31", " ", "=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "All"}], "]"}], "]"}], ",", 
        RowBox[{"basis", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All"}], "]"}], "]"}]}], "]"}], "-", 
      RowBox[{"basis", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"checkDet", "=", 
   RowBox[{
    RowBox[{"Det", "[", "basis", "]"}], "-", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.657376468464896*^9, 3.6573765203122177`*^9}, {
   3.657376560744875*^9, 3.6573766526188307`*^9}, {3.6573767015167723`*^9, 
   3.6573767344536343`*^9}, {3.657376820674857*^9, 3.657376860400419*^9}, {
   3.6573872421230993`*^9, 3.657387244740759*^9}, {3.657446482332389*^9, 
   3.657446539730073*^9}, {3.657446791357387*^9, 3.657446829089869*^9}, {
   3.657448823083806*^9, 3.657448849463604*^9}, {3.657448911043339*^9, 
   3.6574489114151287`*^9}, 3.657897758406869*^9, {3.657897798183449*^9, 
   3.657897802150069*^9}, {3.657897863602592*^9, 3.6578978802082977`*^9}, {
   3.657897921779479*^9, 3.657898048746069*^9}, {3.657899051623867*^9, 
   3.657899062608035*^9}, {3.657899219958531*^9, 3.657899336979411*^9}, {
   3.6578993947960253`*^9, 3.657899441070158*^9}, {3.65790267475404*^9, 
   3.65790271710217*^9}, {3.657902767342894*^9, 3.6579028030214663`*^9}, {
   3.6579030366010017`*^9, 3.657903065153583*^9}, {3.657903109471109*^9, 
   3.657903117181662*^9}, {3.65790334618216*^9, 3.6579033533324213`*^9}, 
   3.6579204318095913`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.09175170953613698363378598754902977856`16."}], 
      "0.90824829046386301636621401245097022144`16.", 
      "0.40824829046386301636621401245097022144`16."},
     {"0.90824829046386301636621401245097022144`16.", 
      RowBox[{"-", "0.09175170953613698363378598754902977856`16."}], 
      "0.40824829046386301636621401245097022144`16."},
     {"0.40824829046386301636621401245097022144`16.", 
      "0.40824829046386301636621401245097022144`16.", 
      RowBox[{"-", "0.81649658092772603273242802490196379732`16."}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.685448864996065*^9, 3.685448888787681*^9}, 
   3.685455288989883*^9, 3.685456209458008*^9, 3.6854565965494537`*^9, 
   3.685458024404995*^9, 3.685463862661913*^9, 3.685464088575287*^9, 
   3.685466561654612*^9, 3.685651440149356*^9, 3.685651787827139*^9, 
   3.685654820094998*^9, 3.685654880843852*^9, 3.685748714669024*^9, 
   3.6857488632735453`*^9, 3.685749419441009*^9, 3.685749978304599*^9, 
   3.685750198284511*^9, 3.6857503947744093`*^9, 3.685751050450265*^9, 
   3.6857970353578033`*^9, 3.68579916651672*^9, 3.685799751928135*^9, 
   3.685800412830464*^9, 3.685800652252983*^9, 3.68580078150008*^9, 
   3.685801612395616*^9, 3.685802025261952*^9, 3.685802663965034*^9, 
   3.685994178825924*^9, 3.688818247319375*^9, 3.688819287288877*^9, 
   3.688819376023649*^9, 3.6888413888293343`*^9, 3.688845145373787*^9, 
   3.688845439326365*^9, 3.688846122523591*^9, {3.6888462011499043`*^9, 
   3.6888462277833357`*^9}, 3.688846387617631*^9, 3.688846528783956*^9, 
   3.688846568068609*^9, 3.688850505495735*^9, 3.688850627656474*^9, 
   3.688850704734991*^9, {3.689428666122567*^9, 3.689428685151897*^9}, 
   3.68943052105779*^9, 3.689433859973091*^9, 3.689433892247672*^9, 
   3.689434106445883*^9, 3.689435610080263*^9, {3.6894357169969387`*^9, 
   3.689435744962719*^9}, 3.689435779040691*^9, 3.689437197426241*^9, {
   3.689438332737303*^9, 3.689438348612351*^9}, 3.689438482580037*^9, 
   3.689438553505921*^9, {3.6894386742990837`*^9, 3.689438692054034*^9}, 
   3.6894387360751753`*^9, 3.6894388161791477`*^9, 3.689438872833858*^9, 
   3.689438963554475*^9, 3.689460154145439*^9, 3.690040506704286*^9, 
   3.690040763752495*^9, 3.690040835801845*^9, 3.690040870966214*^9, {
   3.6900410871461077`*^9, 3.690041130919829*^9}, {3.6900412508525333`*^9, 
   3.690041268043151*^9}, 3.6900415932889547`*^9, 3.69004171753162*^9, 
   3.690041965270978*^9, 3.690042112086473*^9, 3.690042162260539*^9, 
   3.690042258586977*^9, 3.690042302807478*^9, 3.690042338987998*^9, 
   3.690042398349757*^9, 3.69004246647857*^9, {3.690042507065302*^9, 
   3.690042550716845*^9}, 3.690042580946042*^9, 3.690044396492922*^9, 
   3.69004447577757*^9, 3.690058107838293*^9, 3.690068446962697*^9, 
   3.6900685725476522`*^9, 3.690068770342967*^9, 3.690068811321137*^9, 
   3.690068870550127*^9, 3.690069084128584*^9, 3.690208870579328*^9, 
   3.6902089489801188`*^9, 3.690209073072562*^9, 3.69021069372075*^9, {
   3.69021073560666*^9, 3.690210742488361*^9}, 3.690210784711214*^9, {
   3.690211252318263*^9, 3.690211342484021*^9}, 3.690211402262663*^9, 
   3.690211483615003*^9, 3.690212123131914*^9, {3.690212642066555*^9, 
   3.690212656267548*^9}, 3.6902127791384478`*^9, 3.690212840370278*^9, 
   3.690213107126615*^9, 3.690213308544408*^9, 3.690213445505417*^9, 
   3.690213629236684*^9, 3.690213740018079*^9, 3.690213795004285*^9, 
   3.690214160456276*^9, {3.690214218226521*^9, 3.690214226634218*^9}, 
   3.690214302262648*^9, 3.6902143431639013`*^9, 3.6902146304591637`*^9, 
   3.690214707642736*^9, 3.6902147427085342`*^9, 3.690215065201936*^9, 
   3.69022043456594*^9, 3.690221760093525*^9, {3.690223824482769*^9, 
   3.690223837534432*^9}, 3.690226151661124*^9, 3.690226367662668*^9, 
   3.6902271708318167`*^9, 3.6902275088356113`*^9, 3.690227597989715*^9, {
   3.690227641406642*^9, 3.690227690395198*^9}, 3.690227769198185*^9, 
   3.690227805862404*^9, 3.690227838382036*^9, 3.690227974170024*^9, 
   3.6902280079451637`*^9, 3.690228042039687*^9, 3.690228142747745*^9, 
   3.690228796040394*^9, 3.690229009430724*^9, 3.6902291370945044`*^9, 
   3.690229185747323*^9, 3.6902292476397*^9, 3.690229296529566*^9, 
   3.6902293418838167`*^9, {3.6902294165289497`*^9, 3.690229444577838*^9}, 
   3.690229543202641*^9, 3.690229664588449*^9, 3.6902300170179853`*^9, 
   3.69023036772653*^9, {3.69023064389567*^9, 3.690230670452613*^9}, 
   3.690230796681306*^9, 3.690230968881761*^9, 3.690231117935533*^9, {
   3.6902313185351562`*^9, 3.690231340267724*^9}, 3.690232264334159*^9, {
   3.690232391589724*^9, 3.690232418879529*^9}, 3.6902324509941*^9, 
   3.690232487398046*^9, 3.690232545453456*^9, 3.690232587122864*^9, 
   3.69023263994489*^9, {3.6902329421202993`*^9, 3.690232994552423*^9}, 
   3.690233078140787*^9, 3.6902331590070868`*^9, 3.690233440589149*^9, 
   3.690233473748354*^9, {3.6902340421177464`*^9, 3.690234059025764*^9}, 
   3.690237414046558*^9, 3.690670657358989*^9, 3.6925693748532457`*^9, 
   3.6926306393583527`*^9, 3.692630704688693*^9, {3.692630913814784*^9, 
   3.692630942326646*^9}, 3.692631031906479*^9, {3.692631128852768*^9, 
   3.692631147800396*^9}, 3.692631844428857*^9, 3.6926455501265097`*^9, {
   3.6926460883846493`*^9, 3.692646117580927*^9}, 3.6926465526766367`*^9, 
   3.692647338339836*^9, 3.692647476445731*^9, 3.6926477007519903`*^9, 
   3.692647767134014*^9, 3.692650335385309*^9, 3.692650594385957*^9, {
   3.692650720174521*^9, 3.6926507406212606`*^9}, 3.692652456462819*^9, 
   3.692652523097509*^9, 3.692657612876285*^9, 3.692657799204525*^9, 
   3.692658223576345*^9, 3.693256793912715*^9, 3.6932633994974127`*^9, 
   3.694980116963756*^9, 3.694980173876193*^9, 3.7329931469280987`*^9, 
   3.7329943727571173`*^9, {3.732996397203024*^9, 3.732996416798086*^9}, 
   3.7329974388917294`*^9, 3.732998206245243*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Derive direction cosine matrix for coordinate transformations\
\>", "Section",
 CellChangeTimes->{{3.63611567454386*^9, 3.636115699865148*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"orientation", " ", "=", " ", 
   RowBox[{"Transpose", "[", "basis", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "orientation", "]"}]}], "Input",
 CellChangeTimes->{{3.6357898374565477`*^9, 3.635789860216152*^9}, {
   3.657447164041284*^9, 3.657447171978177*^9}, {3.657448688510984*^9, 
   3.6574486887086906`*^9}, {3.657448951399926*^9, 3.65744895168723*^9}, {
   3.657898069577387*^9, 3.657898069830387*^9}, 3.6579033602289886`*^9, {
   3.6579203503196707`*^9, 3.65792035882209*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", 
       FractionBox["1", 
        SqrtBox["6"]]}], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["6"]]}], 
      FractionBox["1", 
       SqrtBox["6"]]},
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       FractionBox["1", 
        SqrtBox["6"]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "+", 
       FractionBox["1", 
        SqrtBox["6"]]}], 
      FractionBox["1", 
       SqrtBox["6"]]},
     {
      FractionBox["1", 
       SqrtBox["6"]], 
      FractionBox["1", 
       SqrtBox["6"]], 
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.657920360310536*^9, 3.657930611077745*^9, 3.657935457974375*^9, 
   3.6579355001360197`*^9, 3.657936794324366*^9, 3.65793966297155*^9, 
   3.65795778876149*^9, 3.657977560125218*^9, 3.657977673708852*^9, 
   3.664561693107296*^9, 3.6645652991117563`*^9, 3.6645659670653467`*^9, 
   3.6645662166792717`*^9, 3.6645686803360777`*^9, 3.6645688639858007`*^9, 
   3.664568958759433*^9, 3.6645690014257517`*^9, 3.6645691320721827`*^9, 
   3.6645692016813917`*^9, 3.6645694409273252`*^9, 3.664569488592835*^9, 
   3.664570430747305*^9, 3.664570521256358*^9, 3.664570609752442*^9, 
   3.664570700771595*^9, 3.664570811308935*^9, 3.664570921037393*^9, {
   3.6645711180345287`*^9, 3.664571147289968*^9}, 3.664571441476097*^9, 
   3.664571679182485*^9, 3.664572328889989*^9, 3.6645723902017508`*^9, 
   3.664572581103821*^9, 3.66457266614998*^9, 3.664573783998114*^9, 
   3.6645739068851137`*^9, 3.6645743427652893`*^9, 3.6645745614797573`*^9, 
   3.664574619480055*^9, 3.6645746940065117`*^9, 3.6645760340590153`*^9, 
   3.6645763362379103`*^9, 3.664576466519771*^9, 3.6645772145084677`*^9, 
   3.664577686453022*^9, {3.6645839840438623`*^9, 3.664584009425132*^9}, 
   3.6645883503505993`*^9, 3.66458843950548*^9, 3.664737801261921*^9, 
   3.664746243652051*^9, 3.664751011111062*^9, 3.6647517479572163`*^9, 
   3.664751881230897*^9, 3.664751989643238*^9, 3.664752274087879*^9, 
   3.664752467875646*^9, 3.664814586419422*^9, 3.664814939698653*^9, 
   3.6648310751799107`*^9, 3.6648311763618937`*^9, 3.664831267502554*^9, 
   3.664831374587947*^9, 3.664831478616761*^9, 3.6648320504934464`*^9, 
   3.66483260012471*^9, 3.664833134766438*^9, 3.664922339374538*^9, 
   3.6649225774513283`*^9, 3.665323949441074*^9, 3.6742963132374897`*^9, 
   3.685282421731318*^9, 3.6852915223383093`*^9, 3.685292672786994*^9, 
   3.685293130136455*^9, 3.685297445854945*^9, 3.6852977486442127`*^9, 
   3.685387585531042*^9, 3.6853884334218683`*^9, {3.6853885705943823`*^9, 
   3.6853885932362947`*^9}, 3.685389208444542*^9, 3.6853893299622917`*^9, 
   3.685389584868404*^9, 3.685389649700424*^9, {3.6854488650357*^9, 
   3.685448888828271*^9}, 3.685455289019342*^9, 3.685456209498714*^9, 
   3.685456596586585*^9, 3.6854580244371843`*^9, 3.6854638626845407`*^9, 
   3.685464088608014*^9, 3.685466561694087*^9, 3.685651440269868*^9, 
   3.685651787889402*^9, 3.685654820135795*^9, 3.685654880875347*^9, 
   3.685748715049342*^9, 3.6857488633613873`*^9, 3.68574941950629*^9, 
   3.685749978416003*^9, 3.685750198342309*^9, 3.685750394816423*^9, 
   3.685751050515748*^9, 3.685797035458989*^9, 3.685799169163574*^9, 
   3.685799752061729*^9, 3.685800412871421*^9, 3.685800652289402*^9, 
   3.685800781538464*^9, 3.685801612431787*^9, 3.685802025307397*^9, 
   3.6858026640167007`*^9, 3.685994179010027*^9, 3.688818247455871*^9, 
   3.688819287330181*^9, 3.6888193760602827`*^9, 3.688841389018456*^9, 
   3.688845145446104*^9, 3.688845439399753*^9, 3.6888461225780363`*^9, {
   3.688846201227221*^9, 3.68884622786124*^9}, 3.688846387690299*^9, 
   3.688846528837468*^9, 3.6888465681395283`*^9, 3.6888505055962343`*^9, 
   3.688850627739294*^9, 3.688850704822669*^9, {3.689428666235092*^9, 
   3.689428685236719*^9}, 3.689430521148823*^9, 3.689433860042197*^9, 
   3.689433892332881*^9, 3.689434106545261*^9, 3.689435610152556*^9, {
   3.689435717083436*^9, 3.6894357450469303`*^9}, 3.68943577912484*^9, 
   3.689437197515853*^9, {3.689438332810196*^9, 3.689438348678495*^9}, 
   3.689438482662277*^9, 3.689438553589411*^9, {3.689438674379086*^9, 
   3.689438692138103*^9}, 3.6894387361518307`*^9, 3.689438816260888*^9, 
   3.689438872920005*^9, 3.6894389636421213`*^9, 3.689460154218604*^9, 
   3.690040506796287*^9, 3.690040763839407*^9, 3.690040835870619*^9, 
   3.690040871036993*^9, {3.690041087232216*^9, 3.6900411309921722`*^9}, {
   3.690041250937633*^9, 3.690041268111454*^9}, 3.690041593356698*^9, 
   3.6900417177179193`*^9, 3.6900419653389072`*^9, 3.690042112154592*^9, 
   3.690042162348805*^9, 3.69004225864629*^9, 3.690042302889781*^9, 
   3.690042339072063*^9, 3.690042398406928*^9, 3.690042466536787*^9, {
   3.690042507136897*^9, 3.690042550800316*^9}, 3.690042581049053*^9, 
   3.690044396545238*^9, 3.6900444758353453`*^9, 3.690058107926779*^9, 
   3.69006844702783*^9, 3.690068572635852*^9, 3.690068770423596*^9, 
   3.690068811390609*^9, 3.690068870624466*^9, 3.6900690842190323`*^9, 
   3.6902088708567677`*^9, 3.690208949071529*^9, 3.690209073157082*^9, 
   3.690210693810287*^9, {3.6902107356987877`*^9, 3.690210742575848*^9}, 
   3.690210784810841*^9, {3.690211252402377*^9, 3.690211342563745*^9}, 
   3.690211402338105*^9, 3.6902114836907454`*^9, 3.690212123203918*^9, {
   3.690212642167078*^9, 3.690212656334757*^9}, 3.690212779244331*^9, 
   3.690212840470894*^9, 3.6902131072123127`*^9, 3.6902133086450987`*^9, 
   3.6902134456050377`*^9, 3.690213629336865*^9, 3.6902137401079187`*^9, 
   3.690213795077649*^9, 3.690214160544816*^9, {3.6902142183308153`*^9, 
   3.6902142267342253`*^9}, 3.6902143023686666`*^9, 3.6902143432369003`*^9, 
   3.6902146305640907`*^9, 3.690214707747654*^9, 3.6902147428142767`*^9, 
   3.6902150652742043`*^9, 3.690220434652269*^9, 3.6902217601782303`*^9, {
   3.690223824589491*^9, 3.690223837640867*^9}, 3.690226151762354*^9, 
   3.6902263677630157`*^9, 3.690227170913311*^9, 3.690227508920043*^9, 
   3.690227598072957*^9, {3.6902276415116463`*^9, 3.6902276904891653`*^9}, 
   3.690227769292371*^9, 3.690227805934751*^9, 3.690227838477661*^9, 
   3.690227974276081*^9, 3.690228008031345*^9, 3.6902280421351357`*^9, 
   3.690228142841097*^9, 3.690228796136842*^9, 3.690229009536497*^9, 
   3.6902291371821957`*^9, 3.690229185843177*^9, 3.690229247887682*^9, 
   3.690229296619627*^9, 3.690229341962191*^9, {3.690229416624771*^9, 
   3.690229444669492*^9}, 3.690229543302054*^9, 3.690229664694317*^9, 
   3.690230017118187*^9, 3.6902303678142157`*^9, {3.690230643996174*^9, 
   3.690230670537408*^9}, 3.69023079677661*^9, 3.690230968963832*^9, 
   3.690231118041247*^9, {3.690231318689226*^9, 3.690231340352686*^9}, 
   3.690232264428631*^9, {3.690232391690668*^9, 3.6902324189634933`*^9}, 
   3.6902324510776443`*^9, 3.690232487499592*^9, 3.690232545574706*^9, 
   3.69023258721764*^9, 3.690232640016514*^9, {3.690232942207638*^9, 
   3.690232994652636*^9}, 3.690233078245511*^9, 3.690233159092965*^9, 
   3.690233440679775*^9, 3.690233474232051*^9, {3.690234042200542*^9, 
   3.69023405913064*^9}, 3.69023741414828*^9, 3.690670657534477*^9, 
   3.692569374959435*^9, 3.692630639439438*^9, 3.69263070487391*^9, {
   3.6926309138990097`*^9, 3.692630942410939*^9}, 3.692631032069354*^9, {
   3.692631129061233*^9, 3.692631147941265*^9}, 3.692631844513242*^9, 
   3.692645550211986*^9, {3.692646088502215*^9, 3.692646117663724*^9}, 
   3.692646552768598*^9, 3.692647338459998*^9, 3.692647476622203*^9, 
   3.692647700872101*^9, 3.692647767217145*^9, 3.692650335447228*^9, 
   3.692650594464076*^9, {3.692650720253738*^9, 3.6926507407063007`*^9}, 
   3.692652456551745*^9, 3.692652523169469*^9, 3.6926576129283943`*^9, 
   3.692657799253684*^9, 3.692658223624892*^9, 3.693256794034491*^9, 
   3.693263399587061*^9, 3.69498011707401*^9, 3.69498017401307*^9, 
   3.732993147128446*^9, 3.732994372985478*^9, {3.732996397315675*^9, 
   3.7329964168770742`*^9}, 3.732997439026806*^9, 3.7329982063446693`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Transform slip and normal directions to global coordinate system\
\>", "Section",
 CellChangeTimes->{{3.63611572098882*^9, 3.636115740973625*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slipdirectionGlobal", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"orientation", " ", ".", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}], ",", 
       RowBox[{"{", "0", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slipnormalGlobal", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"orientation", " ", ".", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "slipdirectionGlobal", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "slipnormalGlobal", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6357898885624933`*^9, 3.635789987508301*^9}, {
   3.635790034022601*^9, 3.635790036266567*^9}, {3.635790093410112*^9, 
   3.635790152246921*^9}, {3.6357901977299633`*^9, 3.63579023102853*^9}, {
   3.63579232958016*^9, 3.635792330369482*^9}, {3.636115705443233*^9, 
   3.636115713141172*^9}, 3.6361157466677637`*^9, {3.636115809095271*^9, 
   3.636115844770842*^9}, 3.63611602149758*^9, {3.656953978380205*^9, 
   3.6569539864434557`*^9}, 3.656954699051358*^9, {3.656965329389598*^9, 
   3.656965377610897*^9}, {3.657900591429964*^9, 3.657900593075355*^9}, {
   3.657903364157382*^9, 3.657903365045333*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Schmid tensor", "Section",
 CellChangeTimes->{{3.636115755920566*^9, 3.636115768736586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"projection", " ", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{
      RowBox[{"Transpose", "[", "slipdirectionGlobal", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Transpose", "[", "slipnormalGlobal", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"symmProjection", " ", "=", " ", 
   RowBox[{"0.5", " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{"projection", " ", "+", " ", 
      RowBox[{"Transpose", "[", "projection", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projFactor", " ", "=", " ", 
   RowBox[{"2", " ", "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{"symmProjection", ",", " ", "\"\<Frobenius\>\""}], "]"}], "^", 
      "2"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "symmProjection", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "projFactor", "]"}]}], "Input",
 CellChangeTimes->{{3.6357898885624933`*^9, 3.635789987508301*^9}, {
   3.635790034022601*^9, 3.635790036266567*^9}, {3.635790093410112*^9, 
   3.635790152246921*^9}, {3.6357901977299633`*^9, 3.63579023102853*^9}, {
   3.63579232958016*^9, 3.635792330369482*^9}, {3.636115705443233*^9, 
   3.636115713141172*^9}, {3.636115885861971*^9, 3.636115900031671*^9}, {
   3.636115950146565*^9, 3.636115955121624*^9}, {3.636115996435721*^9, 
   3.63611600338275*^9}, {3.6361160783565807`*^9, 3.636116083051546*^9}, {
   3.636116177687525*^9, 3.636116178057152*^9}, 3.657903368909052*^9, 
   3.65792036674124*^9, {3.692567664070241*^9, 3.692567694466436*^9}, {
   3.6925692617542067`*^9, 3.692569366360116*^9}, {3.692569647737513*^9, 
   3.692569655560918*^9}, 3.692655582897341*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "0.5`"}], "0.`"},
     {"0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.65792036762849*^9, 3.657930611120904*^9, 3.657935458020452*^9, 
   3.657935500194373*^9, 3.657936794382493*^9, 3.657939663054635*^9, 
   3.657957788832594*^9, 3.6579775601911383`*^9, 3.657977673763062*^9, 
   3.6645616931572847`*^9, 3.664565299166852*^9, 3.66456597759713*^9, 
   3.664566216726221*^9, 3.6645686803900146`*^9, 3.6645688640348253`*^9, 
   3.664568958814604*^9, 3.664569001505307*^9, 3.6645691321474867`*^9, 
   3.6645692017375507`*^9, 3.664569440985976*^9, 3.66456948864501*^9, 
   3.664570430806224*^9, 3.664570521314186*^9, 3.6645706098065863`*^9, 
   3.664570700811441*^9, 3.664570811357272*^9, 3.6645709210761642`*^9, {
   3.664571118085968*^9, 3.66457114734251*^9}, 3.6645714415268717`*^9, 
   3.664571679238121*^9, 3.6645723289418297`*^9, 3.664572390239719*^9, 
   3.6645725811562967`*^9, 3.6645726661990967`*^9, 3.664573784069147*^9, 
   3.664573906937172*^9, 3.664574342804689*^9, 3.6645745615389967`*^9, 
   3.664574619529215*^9, 3.664574694046283*^9, 3.66457603411224*^9, 
   3.664576336284444*^9, 3.664576466578533*^9, 3.664577214564542*^9, 
   3.664577686547275*^9, {3.6645839841218367`*^9, 3.6645840095086718`*^9}, 
   3.664588350450279*^9, 3.6645884395915947`*^9, 3.664737801291006*^9, 
   3.664746243706326*^9, 3.664751011154254*^9, 3.6647517480015*^9, 
   3.66475188127985*^9, 3.664751989694785*^9, 3.664752274133911*^9, 
   3.664752467917799*^9, 3.664814586437643*^9, 3.664814939749716*^9, 
   3.664831075239379*^9, 3.664831176421364*^9, 3.664831267563991*^9, 
   3.664831374647478*^9, 3.664831478676919*^9, 3.664832050555031*^9, 
   3.664832600180592*^9, 3.6648331348290462`*^9, 3.664922339415781*^9, 
   3.664922577488158*^9, 3.66532394949323*^9, 3.674296313278862*^9, 
   3.685282425326296*^9, 3.685291527241748*^9, 3.6852926728150787`*^9, 
   3.685293130186243*^9, 3.6852974458924*^9, 3.685297748680316*^9, 
   3.685387585569913*^9, 3.685388433469241*^9, {3.6853885706545973`*^9, 
   3.685388593275869*^9}, 3.685389208494871*^9, 3.685389330038121*^9, 
   3.685389584907679*^9, 3.6853896497509937`*^9, {3.685448865069249*^9, 
   3.68544888887514*^9}, 3.685455289058587*^9, 3.685456209539028*^9, 
   3.685456596625499*^9, 3.685458024468383*^9, 3.6854638627241383`*^9, 
   3.685464088649366*^9, 3.6854665617347527`*^9, 3.685651440329698*^9, 
   3.685651787943399*^9, 3.685654820182508*^9, 3.6856548809121103`*^9, 
   3.6857487151332693`*^9, 3.6857488634477787`*^9, 3.6857494195820417`*^9, 
   3.685749978489502*^9, 3.685750198393537*^9, 3.685750394889482*^9, 
   3.685751050554556*^9, 3.685797035498604*^9, 3.6857991745966673`*^9, 
   3.685799752108056*^9, 3.68580041291337*^9, 3.685800652325205*^9, 
   3.685800781580764*^9, 3.685801612475802*^9, 3.6858020253479233`*^9, 
   3.6858026640493193`*^9, 3.685994179063205*^9, 3.688818247516942*^9, 
   3.688819287384527*^9, 3.6888193761082077`*^9, 3.688841389087419*^9, 
   3.6888451455129757`*^9, 3.688845439464952*^9, 3.68884612263102*^9, {
   3.688846201301146*^9, 3.688846227926517*^9}, 3.688846387747493*^9, 
   3.688846528919489*^9, 3.688846568221836*^9, 3.688850505678412*^9, 
   3.688850627804668*^9, 3.68885070490775*^9, {3.6894286663056*^9, 
   3.689428685302766*^9}, 3.6894305212474833`*^9, 3.689433860105337*^9, 
   3.689433892432591*^9, 3.689434106645008*^9, 3.6894356102221947`*^9, {
   3.689435717155657*^9, 3.689435745113933*^9}, 3.6894357792081223`*^9, 
   3.689437197588675*^9, {3.689438332876055*^9, 3.6894383487457943`*^9}, 
   3.689438482728427*^9, 3.68943855367152*^9, {3.689438674440792*^9, 
   3.689438692195158*^9}, 3.689438736223866*^9, 3.689438816328101*^9, 
   3.689438872982382*^9, 3.689438963712034*^9, 3.689460154289928*^9, 
   3.690040506870783*^9, 3.690040763901679*^9, 3.6900408359382877`*^9, 
   3.6900408711027517`*^9, {3.69004108729595*^9, 3.690041131067645*^9}, {
   3.6900412510022078`*^9, 3.690041268178452*^9}, 3.6900415934226627`*^9, 
   3.6900417177949543`*^9, 3.6900419654062777`*^9, 3.690042112219596*^9, 
   3.690042162410079*^9, 3.690042258721566*^9, 3.6900423029565268`*^9, 
   3.690042339138422*^9, 3.6900423984831142`*^9, 3.690042466614152*^9, {
   3.6900425071969767`*^9, 3.690042550864911*^9}, 3.69004258113698*^9, 
   3.690044396626066*^9, 3.690044475911942*^9, 3.690058108026352*^9, 
   3.6900684470949078`*^9, 3.6900685726973143`*^9, 3.690068770488289*^9, 
   3.690068811455976*^9, 3.69006887070397*^9, 3.690069084278338*^9, 
   3.690208870951536*^9, 3.6902089491478863`*^9, 3.690209073217744*^9, 
   3.6902106939276867`*^9, {3.690210735769877*^9, 3.690210742655561*^9}, 
   3.6902107848766003`*^9, {3.690211252462943*^9, 3.690211342641686*^9}, 
   3.690211402418358*^9, 3.6902114837488613`*^9, 3.690212123286586*^9, {
   3.69021264225062*^9, 3.690212656401784*^9}, 3.6902127793272867`*^9, 
   3.6902128405486317`*^9, 3.690213107287443*^9, 3.690213308728118*^9, 
   3.690213445684979*^9, 3.690213629419303*^9, 3.6902137401840677`*^9, 
   3.6902137951555433`*^9, 3.690214160621026*^9, {3.690214218413204*^9, 
   3.690214226813601*^9}, 3.690214302447447*^9, 3.690214343297559*^9, 
   3.690214630643927*^9, 3.6902147078282757`*^9, 3.690214742896901*^9, 
   3.69021506533538*^9, 3.6902204347611933`*^9, 3.690221760244506*^9, {
   3.690223824699917*^9, 3.690223837751212*^9}, 3.6902261518648*^9, 
   3.690227170980648*^9, 3.690227508999199*^9, 3.690227598137487*^9, {
   3.690227641591693*^9, 3.6902276905794287`*^9}, 3.69022776936333*^9, 
   3.6902278060134277`*^9, 3.690227838577784*^9, 3.690227974340798*^9, 
   3.690228008106782*^9, 3.690228042240019*^9, 3.690228142916731*^9, 
   3.690228796207119*^9, 3.6902290096324053`*^9, 3.6902291372600193`*^9, 
   3.690229185931321*^9, 3.690229248037204*^9, 3.690229296691288*^9, 
   3.690229342028043*^9, {3.690229416729211*^9, 3.690229444759762*^9}, 
   3.69022954337493*^9, 3.69022966477372*^9, 3.69023001720014*^9, 
   3.690230367890298*^9, {3.690230644091138*^9, 3.690230670621118*^9}, 
   3.690230796877446*^9, 3.690230969037644*^9, 3.690231118119894*^9, {
   3.690231318776229*^9, 3.690231340418133*^9}, 3.6902322645334806`*^9, {
   3.69023239179006*^9, 3.69023241902901*^9}, 3.690232451143896*^9, 
   3.690232487615898*^9, 3.6902325457533417`*^9, 3.6902325872889357`*^9, 
   3.690232640081789*^9, {3.690232942279786*^9, 3.6902329947518663`*^9}, 
   3.690233078361415*^9, 3.690233159169594*^9, 3.690233440755596*^9, 
   3.6902334749165792`*^9, {3.690234042268392*^9, 3.69023405920962*^9}, 
   3.690237414252696*^9, 3.690670657594015*^9, {3.69256930638666*^9, 
   3.69256937499854*^9}, {3.692569648344554*^9, 3.692569655880122*^9}, 
   3.692630639512404*^9, 3.692630704938738*^9, {3.6926309139660673`*^9, 
   3.692630942477724*^9}, 3.692631032185966*^9, {3.692631129127556*^9, 
   3.692631148019339*^9}, 3.692631844578329*^9, 3.692645550278452*^9, {
   3.6926460885843287`*^9, 3.692646117747209*^9}, 3.6926465528437757`*^9, 
   3.6926473385269947`*^9, 3.6926474766873503`*^9, 3.692647700955266*^9, 
   3.692647767285295*^9, 3.6926503355043716`*^9, 3.692650594522085*^9, {
   3.6926507202978897`*^9, 3.692650740779502*^9}, 3.692652456604642*^9, 
   3.692652523242958*^9, 3.692657799320999*^9, 3.692658223693635*^9, 
   3.693256794110824*^9, 3.693263399659773*^9, 3.694980117171363*^9, 
   3.694980174097101*^9, 3.732993147246313*^9, 3.732994373081738*^9, {
   3.7329963973945093`*^9, 3.732996416954444*^9}, 3.7329974391431093`*^9, 
   3.732998206469672*^9}],

Cell[BoxData["1.0000000000000002`"], "Print",
 CellChangeTimes->{{3.692569338943247*^9, 3.692569375006156*^9}, {
   3.692569648352736*^9, 3.692569655890026*^9}, 3.692630639522728*^9, 
   3.692630704948936*^9, {3.692630913976907*^9, 3.6926309424896297`*^9}, 
   3.692631032197671*^9, {3.692631129138404*^9, 3.692631148030044*^9}, 
   3.692631844589841*^9, 3.6926455502897453`*^9, {3.6926460885951433`*^9, 
   3.6926461177563877`*^9}, 3.6926465528554373`*^9, 3.692647338537725*^9, 
   3.6926474766963043`*^9, 3.692647700964099*^9, 3.692647767295199*^9, 
   3.692650335516632*^9, 3.692650594531971*^9, {3.6926507203062973`*^9, 
   3.692650740790433*^9}, 3.6926524566159477`*^9, 3.692652523254471*^9, 
   3.692657799330956*^9, 3.692658223705639*^9, 3.693256794126145*^9, 
   3.693263399673485*^9, 3.694980117188346*^9, 3.694980174112342*^9, 
   3.732993147256909*^9, 3.732994373094273*^9, {3.732996397405776*^9, 
   3.732996416964964*^9}, 3.732997439156863*^9, 3.7329982064844513`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define velocity gradient Lp_{n+1}", "Section",
 CellChangeTimes->{{3.636116743658478*^9, 3.636116750585844*^9}, {
  3.636117194121257*^9, 3.636117197154028*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Lpnplus1", " ", "=", " ", 
   RowBox[{"gammaDot", "*", "projection"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Lpnplus1", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6361167587833548`*^9, 3.6361168320779133`*^9}, {
   3.636116894374782*^9, 3.636116900266634*^9}, {3.636116935628626*^9, 
   3.636116935838599*^9}, {3.6410417535862713`*^9, 3.641041764891643*^9}, 
   3.657903372685955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Fp_{n+1} through the exponential map", "Section",
 CellChangeTimes->{{3.636116716031857*^9, 3.636116725303093*^9}, {
  3.636117201050562*^9, 3.636117213707531*^9}, {3.656179950928899*^9, 
  3.656179963705063*^9}}],

Cell["This is the form of Fp. ", "Text",
 CellChangeTimes->{{3.6361174050010138`*^9, 3.6361174122168617`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fpnplus1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{"\[CapitalDelta]t", "*", "Lpnplus1"}], "]"}], " ", ".", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Fpn11", ",", "Fpn12", ",", "Fpn13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Fpn21", ",", "Fpn22", ",", "Fpn23"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Fpn31", ",", "Fpn32", ",", "Fpn33"}], "}"}]}], "}"}]}], " ", 
    "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalDelta]t", "*", "gammaDot"}], " ", "\[Rule]", " ", 
      RowBox[{"\[Gamma]np1", " ", "-", " ", "\[Gamma]n"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Fpnplus1", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.636116669411125*^9, 3.6361166880119467`*^9}, {
   3.636116847215077*^9, 3.636116860734631*^9}, {3.636116908136538*^9, 
   3.636117182116485*^9}, {3.656179083996561*^9, 3.6561791272264967`*^9}, 
   3.656179178368704*^9, {3.656179210292369*^9, 3.656179214028479*^9}, {
   3.656179406594447*^9, 3.656179414864419*^9}, {3.6579034004346046`*^9, 
   3.6579034008350143`*^9}, {3.664566685584291*^9, 3.664566753918235*^9}, 
   3.68547349805447*^9, 3.685799126166052*^9, 3.6857991865116997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Impose uniaxial strain and find Fe_{nplus1} and Ee_{nplus1}", "Section",
 CellChangeTimes->{{3.655572828888435*^9, 3.655572834256517*^9}, {
  3.6555728692524233`*^9, 3.655572886830379*^9}, {3.655573197468143*^9, 
  3.6555732180103893`*^9}, {3.655676621278137*^9, 3.655676637070692*^9}, {
  3.655728610983037*^9, 3.655728634329289*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fapplied", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"c", "*", "t"}]}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.655572889929145*^9, 3.655572917442648*^9}, 
   3.6562759038059196`*^9, 3.657301197236026*^9, 3.6573013484140244`*^9, {
   3.657447699402619*^9, 3.657447704595763*^9}, {3.657447837494062*^9, 
   3.657447843636154*^9}, {3.657448476124229*^9, 3.657448477447583*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fenplus1", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Fapplied", " ", ".", " ", 
     RowBox[{"Inverse", "[", "Fpnplus1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cenplus1", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "Fenplus1", "]"}], " ", ".", " ", "Fenplus1"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Id3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eenplus1", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{"Cenplus1", " ", "-", " ", "Id3"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Eenplus1", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.655573223540743*^9, 3.655573323633747*^9}, {
   3.6555733690768013`*^9, 3.655573458029628*^9}, {3.655573512780918*^9, 
   3.655573590745573*^9}, {3.655577231300461*^9, 3.655577329347939*^9}, {
   3.655577390132389*^9, 3.655577511242797*^9}, {3.655577542428931*^9, 
   3.6555775485174093`*^9}, {3.6557285453185043`*^9, 3.655728549612405*^9}, {
   3.655839401946252*^9, 3.655839414052511*^9}, {3.656179451768293*^9, 
   3.6561794585529327`*^9}, 3.6561798557812243`*^9, 3.656273681082898*^9, 
   3.656273712848782*^9, {3.6562737708531017`*^9, 3.6562738593511667`*^9}, {
   3.6562744163177767`*^9, 3.656274417406608*^9}, 3.65627590218969*^9, {
   3.657301130947997*^9, 3.6573011380759983`*^9}, 3.65730118314153*^9, {
   3.657301357671318*^9, 3.6573013870102987`*^9}, {3.657977635067113*^9, 
   3.657977640227858*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and rotate the elasticity tensor", "Section",
 CellChangeTimes->{{3.6557285568510437`*^9, 3.655728564698978*^9}, {
  3.655831922683041*^9, 3.655831922985744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"elasTensor", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", "j", "*", "k", "*", "l", "*", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"elasTensor", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "i", ",", "i", ",", "i"}], "]"}], "]"}], " ", "=", 
     " ", "c11"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i", ",", "j", ",", "j"}], "]"}], "]"}], " ", "=",
         " ", "c12"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "j", ",", "i", ",", "i"}], "]"}], "]"}], " ", "=",
         " ", "c12"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "i", ",", "j"}], "]"}], "]"}], " ", "=",
         " ", "c44"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "j", ",", "i"}], "]"}], "]"}], " ", "=",
         " ", "c44"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "j", ",", "i"}], "]"}], "]"}], " ", "=",
         " ", "c44"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"elasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "i", ",", "j"}], "]"}], "]"}], " ", "=",
         " ", "c44"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"i", "+", "1"}], ",", "3"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "elasTensor", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.655729073508367*^9, 3.655729234108728*^9}, {
   3.655730746829212*^9, 3.655730763544558*^9}, {3.6557308370236197`*^9, 
   3.6557308712021933`*^9}, {3.6557309773753777`*^9, 3.655730989590807*^9}, {
   3.655829466649685*^9, 3.655829469783677*^9}, {3.655829550249261*^9, 
   3.655829578467493*^9}, {3.655830392606271*^9, 3.6558303926859207`*^9}, {
   3.655830427434712*^9, 3.6558304306901617`*^9}, {3.6558305929975243`*^9, 
   3.65583062346283*^9}, {3.655830661147911*^9, 3.6558307184645967`*^9}, {
   3.655830749949692*^9, 3.655830799001683*^9}, {3.655830863689842*^9, 
   3.65583093743228*^9}, {3.6558310386995373`*^9, 3.655831048180282*^9}, {
   3.655831257300683*^9, 3.655831258627049*^9}, {3.655831352286924*^9, 
   3.65583140189837*^9}, {3.656272644583256*^9, 3.656272685560081*^9}, 
   3.656275890980451*^9, 3.688853201561687*^9, {3.688853242221868*^9, 
   3.688853247556788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"transformElasTensor", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", "j", "*", "k", "*", "l", "*", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", " ", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"transformElasTensor", "[", 
        RowBox[{"[", 
         RowBox[{"w", ",", "v", ",", "u", ",", "t"}], "]"}], "]"}], "=", " ", 
       
       RowBox[{
        RowBox[{"transformElasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"w", ",", "v", ",", "u", ",", "t"}], "]"}], "]"}], " ", "+",
         " ", 
        RowBox[{
         RowBox[{"elasTensor", "[", 
          RowBox[{"[", 
           RowBox[{"p", ",", "q", ",", "r", ",", "s"}], "]"}], "]"}], "*", 
         RowBox[{"orientation", "[", 
          RowBox[{"[", 
           RowBox[{"p", ",", "w"}], "]"}], "]"}], "*", "\[IndentingNewLine]", 
         
         RowBox[{"orientation", "[", 
          RowBox[{"[", 
           RowBox[{"q", ",", "v"}], "]"}], "]"}], "*", 
         RowBox[{"orientation", "[", 
          RowBox[{"[", 
           RowBox[{"r", ",", "u"}], "]"}], "]"}], "*", 
         RowBox[{"orientation", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "t"}], "]"}], "]"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", "1", ",", "3"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "transformElasTensor", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.655831873374064*^9, 3.655831927758254*^9}, {
   3.655832639377389*^9, 3.655832864256723*^9}, 3.6558329868874483`*^9, {
   3.655833027970016*^9, 3.655833191915689*^9}, {3.655833392263844*^9, 
   3.6558334353250103`*^9}, {3.655833493889062*^9, 3.655833523168727*^9}, {
   3.655833573584579*^9, 3.6558335900863132`*^9}, 3.656275889556512*^9, {
   3.657508124218588*^9, 3.657508127112088*^9}, {3.688853257772682*^9, 
   3.68885326431719*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get 2nd PK stress in the intermediate configuration ", "Section",
 CellChangeTimes->{{3.655833834216962*^9, 3.655833843672556*^9}, {
  3.656182499855506*^9, 3.656182503166831*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Snplus1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "*", "j", "*", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Snplus1", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"Snplus1", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"transformElasTensor", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], "*", 
        RowBox[{"Eenplus1", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "l"}], "]"}], "]"}]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "Snplus1", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.655573223540743*^9, 3.655573323633747*^9}, {
   3.6555733690768013`*^9, 3.655573458029628*^9}, {3.655573512780918*^9, 
   3.655573590745573*^9}, {3.655577231300461*^9, 3.655577329347939*^9}, {
   3.655577390132389*^9, 3.655577511242797*^9}, {3.655577542428931*^9, 
   3.6555775485174093`*^9}, {3.6557285453185043`*^9, 3.655728549612405*^9}, {
   3.6558336201965103`*^9, 3.6558337016212463`*^9}, {3.655833816560751*^9, 
   3.65583381839953*^9}, {3.6558338961444798`*^9, 3.6558339612615957`*^9}, {
   3.6558361176822433`*^9, 3.655836202504418*^9}, {3.655836279977941*^9, 
   3.6558362936176453`*^9}, {3.655838208050927*^9, 3.655838360222054*^9}, {
   3.655839464154159*^9, 3.655839469601095*^9}, {3.655839536830379*^9, 
   3.655839564231923*^9}, {3.656180560266871*^9, 3.6561805765338793`*^9}, {
   3.656190189361341*^9, 3.656190205538975*^9}, {3.6562735730026493`*^9, 
   3.6562736042932568`*^9}, {3.656273666378384*^9, 3.656273668130435*^9}, 
   3.656273718943603*^9, 3.6562739115312643`*^9, 3.6562758779955587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Form residuals as a function of material parameters and state\
\>", "Section",
 CellChangeTimes->{{3.656183909881859*^9, 3.65618395134873*^9}, {
   3.656197513009956*^9, 3.656197517703734*^9}, 3.6852750274827957`*^9}],

Cell["\<\
There are now two residuals
R - this is the standard, power law residual for slip
Rhard - this is a residual that reflects an ODE to evolve the hardening. We \
must solve both residuals to obtain an solution.
g - slip resistance that is obtained from the solution of the dislocation \
densities (hardening equation)\
\>", "Text",
 CellChangeTimes->{{3.688819568878456*^9, 3.6888196326521883`*^9}, {
  3.68881978401297*^9, 3.688819793976244*^9}, {3.688819830386887*^9, 
  3.688819865049491*^9}, {3.690038625405156*^9, 3.6900386498024807`*^9}, {
  3.6926300255471687`*^9, 3.6926300258837147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slipRate", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Gamma]np1", " ", "-", " ", "\[Gamma]n"}], ")"}], "/", 
    "\[CapitalDelta]t"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gs", " ", "=", " ", 
   RowBox[{"gs0", " ", "*", " ", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"slipRate", "/", " ", "gammaDot0"}], "]"}], "^", 
     "\[Omega]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tau1", " ", "=", " ", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Cenplus1", ".", "Snplus1"}], "]"}], " ", ".", " ", 
     "projection"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partR", " ", "=", " ", 
   RowBox[{"\[CapitalDelta]t", "*", "gammaDot0", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", "tau1", "]"}], "/", 
       RowBox[{"(", "gnp1", ")"}]}], ")"}], "^", "k"}], "*", "signtau1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"partRhard", " ", "=", "  ", 
   RowBox[{"\[CapitalDelta]t", "*", "g0Dot", "*", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"gs", " ", "-", " ", "gnp1"}], ")"}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"gs", " ", "-", " ", "g0"}], ")"}]}], " ", "*", " ", 
    "projFactor", " ", "*", " ", 
    RowBox[{"Abs", "[", "slipRate", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Gamma]np1", " ", "-", " ", "\[Gamma]n"}], ")"}], " ", "-", 
     " ", "partR"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rhard", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"gnp1", " ", "-", " ", "gn"}], ")"}], " ", "-", " ", 
     "partRhard"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]init", " ", "=", " ", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ginit", " ", "=", " ", "90"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.655577837153472*^9, 3.655577837721146*^9}, {
   3.655577987191774*^9, 3.6555780183161087`*^9}, {3.655578599467043*^9, 
   3.655578673957705*^9}, {3.6555792350616302`*^9, 3.6555792674716597`*^9}, {
   3.655579334408099*^9, 3.655579351762314*^9}, {3.6555793883183727`*^9, 
   3.6555794278497868`*^9}, {3.6555806432938757`*^9, 3.655580678864406*^9}, {
   3.6556737688427067`*^9, 3.655673774643083*^9}, 3.6556740179672527`*^9, {
   3.6556741506923037`*^9, 3.655674173757195*^9}, {3.655675945220215*^9, 
   3.655675977299045*^9}, {3.6556760244352283`*^9, 3.655676028876045*^9}, {
   3.655676244597031*^9, 3.655676251123667*^9}, {3.656177810101774*^9, 
   3.6561778143641653`*^9}, {3.656180623615903*^9, 3.6561806502665462`*^9}, 
   3.656182518609803*^9, {3.656183245038642*^9, 3.656183251614099*^9}, 
   3.656188370400462*^9, {3.656190352728609*^9, 3.656190354376327*^9}, {
   3.6561958431712103`*^9, 3.656195865996903*^9}, {3.656196338428482*^9, 
   3.656196345403738*^9}, {3.656208075760131*^9, 3.6562080797406883`*^9}, 
   3.65620893756608*^9, {3.6562089975375643`*^9, 3.656208998961495*^9}, {
   3.656209031603373*^9, 3.656209053102977*^9}, {3.656209099626676*^9, 
   3.656209100874457*^9}, {3.656210367579529*^9, 3.6562103728829737`*^9}, 
   3.6562737490031023`*^9, 3.6562742389649363`*^9, {3.656274746642269*^9, 
   3.656274748273699*^9}, {3.6562758698425817`*^9, 3.656275876355114*^9}, 
   3.65628114262875*^9, 3.656281249741467*^9, {3.656281290200301*^9, 
   3.656281311026278*^9}, 3.6562813423035507`*^9, {3.656281382323666*^9, 
   3.656281442217691*^9}, {3.656281487590358*^9, 3.6562814878362093`*^9}, {
   3.6562816369893227`*^9, 3.656281666744632*^9}, {3.6563359754416943`*^9, 
   3.6563359842510843`*^9}, {3.656336016363242*^9, 3.6563360205761414`*^9}, 
   3.6563360874556303`*^9, {3.656336134260544*^9, 3.6563361390027122`*^9}, 
   3.656336844482872*^9, {3.656878617762681*^9, 3.656878666472357*^9}, {
   3.6568787241452417`*^9, 3.6568787261759357`*^9}, {3.656967917225503*^9, 
   3.656967925225918*^9}, {3.65704753710089*^9, 3.657047540708639*^9}, 
   3.657048638034161*^9, {3.657367041903344*^9, 3.657367041972186*^9}, {
   3.6574498295036907`*^9, 3.65744982962904*^9}, {3.65744993833393*^9, 
   3.657449938409582*^9}, {3.6575081399515333`*^9, 3.657508143693048*^9}, {
   3.664561818723405*^9, 3.6645618417440033`*^9}, {3.664562648431974*^9, 
   3.66456265795129*^9}, {3.6645660290491343`*^9, 3.6645660716221943`*^9}, {
   3.664566815164093*^9, 3.664566832052383*^9}, {3.664566870514222*^9, 
   3.66456688383388*^9}, {3.6645669381377153`*^9, 3.664566954272653*^9}, {
   3.664576778935631*^9, 3.66457680732633*^9}, 3.664583978608458*^9, 
   3.6647383984817543`*^9, 3.664751966821267*^9, {3.66492231289459*^9, 
   3.66492231904747*^9}, {3.664922569283503*^9, 3.664922574017043*^9}, {
   3.685275037842762*^9, 3.6852751001243553`*^9}, {3.685281276480842*^9, 
   3.685281277798321*^9}, {3.685281382753325*^9, 3.685281404939542*^9}, {
   3.685281790750308*^9, 3.685281920011314*^9}, {3.6852819794515877`*^9, 
   3.685281989803707*^9}, {3.685282044803833*^9, 3.6852821036158543`*^9}, {
   3.685282169263425*^9, 3.685282172710936*^9}, {3.685282594817181*^9, 
   3.6852826091998253`*^9}, {3.685283245457946*^9, 3.6852832503040447`*^9}, {
   3.68528339194526*^9, 3.685283397129459*^9}, {3.685293611168157*^9, 
   3.685293682318839*^9}, {3.685449034060841*^9, 3.685449042196607*^9}, 
   3.685449099549279*^9, {3.6854491651795273`*^9, 3.685449188582223*^9}, {
   3.6854493288703117`*^9, 3.6854493304616117`*^9}, {3.68545488386696*^9, 
   3.685454884697843*^9}, 3.6857498130042143`*^9, 3.685749973166767*^9, {
   3.68884280817695*^9, 3.688842818677417*^9}, 3.6900382930727167`*^9, {
   3.6900383528595457`*^9, 3.690038437431416*^9}, {3.690038661274311*^9, 
   3.6900386814258204`*^9}, {3.6900387221702423`*^9, 3.690038764665001*^9}, {
   3.69003879545242*^9, 3.690038812769665*^9}, {3.690038868896143*^9, 
   3.6900389426934643`*^9}, {3.690039009388101*^9, 3.690039021258569*^9}, {
   3.690040064334466*^9, 3.6900400654358187`*^9}, {3.690040147517023*^9, 
   3.690040149432754*^9}, {3.6900404962626047`*^9, 3.690040502179513*^9}, {
   3.690042214261495*^9, 3.690042231589142*^9}, {3.690042299469047*^9, 
   3.69004230006787*^9}, {3.690042333092328*^9, 3.690042334507153*^9}, {
   3.690042531736081*^9, 3.690042578373914*^9}, {3.690068404414371*^9, 
   3.690068409787652*^9}, {3.690212737822275*^9, 3.690212744357126*^9}, {
   3.690226147123431*^9, 3.690226147592757*^9}, {3.690226250648777*^9, 
   3.690226250703431*^9}, {3.690227322720416*^9, 3.6902273265354977`*^9}, {
   3.690227638057778*^9, 3.690227687911422*^9}, 3.690227750695301*^9, {
   3.6902278026141157`*^9, 3.690227832356111*^9}, {3.69022797080334*^9, 
   3.690228000632025*^9}, 3.690228039432823*^9, {3.690228787134488*^9, 
   3.690228792502036*^9}, 3.690229006146853*^9, {3.690229131960285*^9, 
   3.690229134126231*^9}, 3.690229182927088*^9, {3.6902292449561567`*^9, 
   3.690229245091756*^9}, 3.690229290332611*^9, {3.690229413513392*^9, 
   3.690229441176886*^9}, 3.6902295064635973`*^9, 3.690229539886582*^9, 
   3.6902296614681273`*^9, {3.6902300056108313`*^9, 3.690230014338483*^9}, {
   3.6902305977657824`*^9, 3.6902306055860567`*^9}, {3.690230790171507*^9, 
   3.690230793297028*^9}, {3.690231111153715*^9, 3.690231114721649*^9}, {
   3.6902313122705927`*^9, 3.690231315021098*^9}, {3.690231506930283*^9, 
   3.690231529072591*^9}, {3.690232538995167*^9, 3.690232542153459*^9}, {
   3.690232634184925*^9, 3.6902326374152308`*^9}, {3.690233147269127*^9, 
   3.6902331506435757`*^9}, {3.690233468453825*^9, 3.690233470596534*^9}, 
   3.6902338919095383`*^9, {3.690237391909264*^9, 3.690237404588937*^9}, 
   3.690670653370113*^9, {3.692629414712595*^9, 3.6926294256739063`*^9}, {
   3.69262947671874*^9, 3.692629478846616*^9}, {3.692629604919237*^9, 
   3.692629606861794*^9}, {3.692629659382654*^9, 3.692629771378083*^9}, {
   3.6926298076522617`*^9, 3.692629888239669*^9}, {3.692629943510232*^9, 
   3.692630021724441*^9}, {3.692630067998033*^9, 3.692630069523267*^9}, {
   3.6926302316183043`*^9, 3.692630232783445*^9}, {3.6926302635299997`*^9, 
   3.692630291926133*^9}, 3.692630603274144*^9, {3.692630701488226*^9, 
   3.692630701613163*^9}, {3.692630905738391*^9, 3.692630911120594*^9}, {
   3.6926311236372957`*^9, 3.692631124083829*^9}, {3.6926317660387783`*^9, 
   3.692631766204761*^9}, {3.6926318377161427`*^9, 3.6926318417958603`*^9}, {
   3.692645501568404*^9, 3.692645520350156*^9}, {3.6926461115948133`*^9, 
   3.692646112640987*^9}, {3.692646548129571*^9, 3.692646548287077*^9}, {
   3.69264699408663*^9, 3.692646994805422*^9}, {3.692647211411482*^9, 
   3.692647229956716*^9}, {3.692647696999017*^9, 3.692647697253214*^9}, {
   3.692647764133565*^9, 3.69264776432342*^9}, {3.6926489600024*^9, 
   3.6926490066906424`*^9}, {3.692654382211821*^9, 3.692654382337957*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invoking scaling of the tangent ", "Section",
 CellChangeTimes->{{3.6857503048612127`*^9, 3.685750319188939*^9}, {
   3.685751040818274*^9, 3.6857510435749073`*^9}, 3.685751952418776*^9}],

Cell["\<\
Scaling by the residual is not appropriate - we need to scale with the \
tangent. Scaling R by what is blowing up, (Abs[tau1]/tau0)^k, will be \
infinity for tau1 = 0. Diagonal scaling via the tangent does not suffer this \
issue. I can put together a residual with a Piecewise statement, but \
preliminary findings indicate that this is not helpful. You have just moved \
the problem from a part of the residual that blows up to a part of the \
residual that goes to zero. Scaling the tangent is more helpful.\
\>", "Text",
 CellChangeTimes->{{3.685750920147225*^9, 3.685751034708356*^9}, {
  3.685799814543909*^9, 3.685799835296026*^9}, {3.68580135731171*^9, 
  3.685801386508852*^9}, {3.685801512239792*^9, 3.685801593962788*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RScaled", " ", "=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", "tau1", "]"}], "/", "tau0"}], ")"}], "^", 
          "k"}]}], ",", 
        RowBox[{"\[Gamma]np1", "!=", " ", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"R", ",", 
        RowBox[{"\[Gamma]np1", " ", "\[Equal]", "0"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RScaledhard", " ", "=", " ", "Rhard"}], ";"}]}], "Input",
 CellChangeTimes->{{3.685750322326209*^9, 3.6857503290879498`*^9}, {
  3.68575049131785*^9, 3.685750530130232*^9}, {3.6857509026615753`*^9, 
  3.68575091143646*^9}, {3.6857520751195908`*^9, 3.685752081330122*^9}, {
  3.685752168136331*^9, 3.6857522814701147`*^9}, {3.685752311877534*^9, 
  3.68575234254945*^9}, {3.685752793197772*^9, 3.685752796892469*^9}, {
  3.685799210369783*^9, 3.6857992341368313`*^9}, {3.685799735559976*^9, 
  3.685799744902532*^9}, {3.685800143868433*^9, 3.685800146868184*^9}, {
  3.6888502305846767`*^9, 3.688850263948965*^9}, {3.688850823059594*^9, 
  3.688850852536665*^9}, {3.6900384778718576`*^9, 3.690038478006568*^9}, {
  3.690226264091734*^9, 3.6902262661989927`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incorporating material parameters and state", "Section",
 CellChangeTimes->{{3.68574860905751*^9, 3.685748612283902*^9}, {
  3.6857486853683662`*^9, 3.685748703909761*^9}, {3.685748763024354*^9, 
  3.6857487807482433`*^9}, {3.6857497825007353`*^9, 3.685749792121501*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parameters", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c11", " ", "\[Rule]", " ", "204600"}], ",", " ", 
     RowBox[{"c12", " ", "\[Rule]", " ", "137700"}], ",", " ", 
     RowBox[{"c44", " ", "\[Rule]", " ", "126200"}], ",", 
     RowBox[{"c", " ", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"gammaDot0", " ", "\[Rule]", " ", 
      RowBox[{"1", "*", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "3"}], ")"}]}]}]}], ",", " ", 
     RowBox[{"k", " ", "\[Rule]", " ", "20"}], " ", ",", 
     RowBox[{"\[Omega]", " ", "\[Rule]", " ", "0.01"}], ",", " ", 
     RowBox[{"g0", " ", "\[Rule]", " ", "90"}], ",", " ", 
     RowBox[{"gs0", " ", "\[Rule]", " ", "202"}], ",", " ", 
     RowBox[{"g0Dot", " ", "\[Rule]", " ", "20000"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"state", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fpn11", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"Fpn12", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn13", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn21", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn22", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"Fpn23", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn31", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn32", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Fpn33", " ", "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"\[Gamma]n", " ", "\[Rule]", " ", "0.0"}], ",", " ", 
     RowBox[{"gn", " ", "\[Rule]", " ", "0.0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rparam", " ", "=", " ", 
   RowBox[{"R", " ", "/.", " ", "parameters"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RScaledparam", " ", "=", " ", 
   RowBox[{"RScaled", " ", "/.", " ", "parameters"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tau1param", " ", "=", 
   RowBox[{"tau1", " ", "/.", " ", "parameters"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rhardparam", " ", "=", " ", 
   RowBox[{"Rhard", " ", "/.", " ", "parameters"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RScaledhardparam", " ", "=", " ", 
   RowBox[{"RScaledhard", " ", "/.", " ", "parameters"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reval", " ", "=", " ", 
   RowBox[{
    RowBox[{"Rparam", " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{"signtau1", " ", "\[Rule]", " ", 
       RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], " ", "/.", " ", 
    "state"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rhardeval", " ", "=", " ", 
   RowBox[{"Rhardparam", " ", "/.", " ", "state"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.68579939674865*^9, 3.6857994561260433`*^9}, {
   3.688842828196845*^9, 3.688842836028537*^9}, 3.690038504094832*^9, {
   3.690038587477565*^9, 3.690038604620204*^9}, {3.690038655149016*^9, 
   3.690038659004958*^9}, 3.690038771835648*^9, {3.690038816466976*^9, 
   3.690038818369982*^9}, {3.690040155541194*^9, 3.690040168682266*^9}, 
   3.69004171141873*^9, {3.6900417915681562`*^9, 3.690041804773481*^9}, {
   3.6900418472143087`*^9, 3.6900418477179937`*^9}, {3.6900681812016993`*^9, 
   3.6900682248552437`*^9}, {3.6900682591120367`*^9, 3.690068376107985*^9}, {
   3.690068512891306*^9, 3.6900685365489407`*^9}, {3.690068764286434*^9, 
   3.690068766101248*^9}, {3.690208940722115*^9, 3.6902089443203573`*^9}, {
   3.690209289616317*^9, 3.6902093160787373`*^9}, 3.69022636411196*^9, 
   3.6902264606528397`*^9, {3.6902271675896473`*^9, 3.690227167739524*^9}, {
   3.690227338497271*^9, 3.690227425494693*^9}, 3.6902277644256153`*^9, 
   3.6902278358467817`*^9, 3.69022791084415*^9, {3.690233357681118*^9, 
   3.690233375191231*^9}, {3.690233616323593*^9, 3.69023362108881*^9}, {
   3.690233757441237*^9, 3.690233757630707*^9}, {3.692629648384582*^9, 
   3.6926296696203012`*^9}, {3.692630096261774*^9, 3.69263011169313*^9}, {
   3.6926301655001993`*^9, 3.6926302230964603`*^9}, {3.692630662047648*^9, 
   3.692630662566326*^9}, {3.692631817974514*^9, 3.6926318216523733`*^9}, {
   3.692647000303996*^9, 3.692647007073196*^9}, {3.69264712850945*^9, 
   3.692647133746269*^9}, {3.692647238490405*^9, 3.692647251847734*^9}, {
   3.6926498167922993`*^9, 3.692649833557418*^9}, {3.692649910205884*^9, 
   3.6926499342197104`*^9}, {3.6926499781395683`*^9, 3.692649978202485*^9}, 
   3.692650059897941*^9, {3.6926502963979177`*^9, 3.692650428017514*^9}, {
   3.692650468728374*^9, 3.692650515918447*^9}, {3.692650570927228*^9, 
   3.692650590438571*^9}, {3.692654386924925*^9, 3.692654387194138*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing the tangent ", "Section",
 CellChangeTimes->{{3.685282493467311*^9, 3.685282502467351*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Element", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Fpn11", ",", " ", "Fpn12", ",", "Fpn13", ",", "Fpn21", ",", " ", 
      "Fpn22", ",", " ", "Fpn23", ",", " ", "Fpn31", ",", " ", "Fpn32", ",", 
      " ", "Fpn33"}], "}"}], ",", "Reals"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Element", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Gamma]n", ",", "\[Gamma]np1", ",", " ", "gn", ",", " ", "gnp1"}], 
     "}"}], ",", "Reals"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Element", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[CapitalDelta]t", " ", ",", "t"}], "}"}], ",", "Reals"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tangent", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"Rparam", ",", "\[Gamma]np1"}], "]"}], ",", " ", 
       RowBox[{"D", "[", 
        RowBox[{"Rparam", ",", "gnp1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"Rhardparam", ",", "\[Gamma]np1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{"Rhardparam", ",", "gnp1"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tangentScaled", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"RScaledparam", ",", "\[Gamma]np1"}], "]"}], ",", " ", 
         RowBox[{"D", "[", 
          RowBox[{"RScaledparam", ",", "gnp1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"RScaledhardparam", ",", "\[Gamma]np1"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{"RScaledhardparam", ",", "gnp1"}], "]"}]}], "}"}]}], 
      "}"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.68528264068388*^9, 3.6852826811375*^9}, {
   3.685283460911641*^9, 3.685283504901578*^9}, {3.685283536002709*^9, 
   3.68528357274161*^9}, {3.685283641236635*^9, 3.685283735861405*^9}, {
   3.685283839614979*^9, 3.6852838736665907`*^9}, {3.685289694142601*^9, 
   3.685289874528158*^9}, {3.685290238778921*^9, 3.685290239105372*^9}, {
   3.685291480915525*^9, 3.685291481691502*^9}, {3.685388976385479*^9, 
   3.685388984672978*^9}, {3.685389077430297*^9, 3.685389100119748*^9}, 
   3.685389195986917*^9, {3.6853893010951*^9, 3.685389306997924*^9}, 
   3.685389435749289*^9, {3.685389532504773*^9, 3.685389572533618*^9}, {
   3.68538995036876*^9, 3.685389971745529*^9}, {3.685390017792138*^9, 
   3.68539007642962*^9}, {3.685390205469808*^9, 3.685390207594555*^9}, {
   3.685448877492239*^9, 3.685448878114663*^9}, {3.685449135335237*^9, 
   3.685449136262765*^9}, {3.685449340125359*^9, 3.685449359279056*^9}, {
   3.685454346893219*^9, 3.685454516152417*^9}, 3.685454557322994*^9, {
   3.685455145425099*^9, 3.685455233369355*^9}, 3.685455267796877*^9, {
   3.68545530465736*^9, 3.685455306480977*^9}, {3.685456455335167*^9, 
   3.6854564894185963`*^9}, {3.685456579965173*^9, 3.6854565910530977`*^9}, 
   3.685750270314698*^9, 3.685752599315074*^9, {3.685752930352425*^9, 
   3.685752939109192*^9}, {3.6857994993134823`*^9, 3.6857995238717937`*^9}, 
   3.68579968072803*^9, {3.6900402742033167`*^9, 3.690040284617075*^9}, {
   3.69004045712757*^9, 3.690040458526292*^9}, {3.6902093197692966`*^9, 
   3.690209321446466*^9}, {3.69023154010676*^9, 3.690231552167769*^9}, {
   3.690231585585245*^9, 3.690231593695827*^9}, {3.690231704198056*^9, 
   3.690231706740245*^9}, {3.6926304290861797`*^9, 3.692630442346923*^9}, 
   3.692631626914963*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tangentEval", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"tangent", "  ", "/.", " ", 
        RowBox[{"{", 
         RowBox[{"signtau1", " ", "\[Rule]", " ", 
          RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], "/.", " ", 
       "state"}], " ", "/.", " ", "parameters"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "0.1"}], ",", 
       RowBox[{"t", " ", "\[Rule]", " ", "0"}]}], "}"}]}], "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]np1", "\[Rule]", " ", "\[Gamma]init"}], ",", " ", 
      RowBox[{"gnp1", " ", "\[Rule]", " ", "ginit"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tangentScaledEval", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tangentScaled", " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{"signtau1", " ", "\[Rule]", " ", 
           RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], "/.", " ", 
        "state"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "0"}], ",", " ", 
         RowBox[{"t", " ", "\[Rule]", " ", "0"}]}], "}"}]}], "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]np1", "\[Rule]", " ", "\[Gamma]init"}], ",", " ", 
        RowBox[{"gnp1", " ", "\[Rule]", " ", "ginit"}], ",", " ", 
        RowBox[{"\[Gamma]n", " ", "\[Rule]", " ", "0"}]}], "}"}]}]}], ";"}], 
   "*)"}], "                                                                  \
                                                      "}]}], "Input",
 CellChangeTimes->{{3.685799586434875*^9, 3.6857996310842123`*^9}, {
   3.685799683556698*^9, 3.685799684900816*^9}, 3.6857999472113867`*^9, 
   3.685800192195037*^9, {3.688842858061318*^9, 3.6888428826756687`*^9}, {
   3.6888429588101177`*^9, 3.688842971041737*^9}, {3.69004026322752*^9, 
   3.690040267378243*^9}, 3.6900407491998262`*^9, {3.690040799877739*^9, 
   3.6900408323176403`*^9}, {3.690042235609584*^9, 3.6900422363975677`*^9}, 
   3.6900690254512672`*^9, {3.6902093246491747`*^9, 3.69020932974992*^9}, 
   3.6902094162776318`*^9, {3.69020946125646*^9, 3.6902094735958223`*^9}, {
   3.6902147503424683`*^9, 3.690214750462162*^9}, {3.690231709366411*^9, 
   3.69023173356387*^9}, {3.6902317916625757`*^9, 3.690231793693121*^9}, {
   3.690231827962837*^9, 3.690231834609378*^9}, {3.6902320052233057`*^9, 
   3.6902320071659803`*^9}, {3.690232054055903*^9, 3.69023205424551*^9}, {
   3.690232326673197*^9, 3.69023233567857*^9}, {3.692630395471354*^9, 
   3.692630406843721*^9}, {3.6926309290175*^9, 3.6926309397050037`*^9}, {
   3.692631005257208*^9, 3.69263100553456*^9}, {3.692631193427184*^9, 
   3.692631228361168*^9}, {3.6926314369982233`*^9, 3.692631439924305*^9}, {
   3.692631514476657*^9, 3.692631540626194*^9}, 3.692631604976672*^9, {
   3.692631667969062*^9, 3.692631760952138*^9}, {3.692631866221829*^9, 
   3.692631902154622*^9}, {3.692631954827763*^9, 3.692631958337801*^9}, {
   3.6926456713335752`*^9, 3.692645707802861*^9}, {3.692645765641335*^9, 
   3.692645768568899*^9}, {3.6926458435851994`*^9, 3.692645903397656*^9}, {
   3.692645987141745*^9, 3.6926459918515577`*^9}, {3.692646085339548*^9, 
   3.692646085473579*^9}, {3.6926478548909388`*^9, 3.692647895401821*^9}, {
   3.69264794995254*^9, 3.6926479725918837`*^9}, {3.692648004730356*^9, 
   3.692648010717925*^9}, {3.692648153845537*^9, 3.692648164998809*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.690232406950683*^9, {3.690233261402071*^9, 3.6902332714346724`*^9}},
 NumberMarks->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Switching between residuals and scaled residuals - brute force copy\
\>", "Section",
 CellChangeTimes->{{3.68580070337039*^9, 3.685800720465452*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Rparam", " ", "=", " ", "RScaledparam"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Rhardparam", " ", "=", " ", "RScaledhardparam"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.685800725202739*^9, 3.685800769316017*^9}, {
  3.685801605139286*^9, 3.6858016089310713`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loop through time to construct a solution", "Section",
 CellChangeTimes->{{3.656184000100862*^9, 3.656184001370838*^9}, {
   3.656184059922997*^9, 3.656184073291088*^9}, 3.656255632558448*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                 "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
          "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
   "*******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", 
     RowBox[{"**", "**"}]}], "*", " ", "INITIALIZE", " ", 
    RowBox[{"VARIABLES", "/", 
     RowBox[{"PARAMETERS", " ", "**", "**", "**", "**", "**", "**", "**"}]}], 
    "*", 
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}]}], "*******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*******)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"time", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"iloop", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tn", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"finalTime", " ", "=", " ", "0.005"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberSteps", " ", "=", " ", "10"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"times", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Set", " ", "up", " ", "parameters", " ", "for", " ", "Newton"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"absoluteTolerance", " ", "=", " ", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "12"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxIterations", " ", "=", " ", "300"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timeIncrement", " ", "=", " ", 
     RowBox[{"finalTime", "/", "numberSteps"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "up", " ", "residual", " ", "parameters"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initialResidualsNewton", " ", "=", " ", 
     RowBox[{"residualsNewton", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "*", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"numberSteps", "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"residualsNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterationsNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterationResids", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"0", "*", "i", "*", "j", "*", "k"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"maxIterations", "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "up", " ", "slip", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slips", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slipsNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slipRateNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "up", " ", "hardness", " ", "parameters"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hardNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hardRateNewton", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"taus", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"set", " ", "up", " ", "tangent"}], "-", 
     RowBox[{"scaling", " ", "parameters"}]}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"conditionNumber", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "j", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"maxIterations", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scaledconditionNumber", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "j", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"maxIterations", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"set", " ", "up", " ", 
     RowBox[{
      RowBox[{"kinematic", "/", "constitutive"}], "/", "state"}], " ", 
     "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axialStress", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", " ", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cauchy", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "j", "*", "k", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", " ", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FOut", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "j", "*", "k", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", " ", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FpOut", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "*", "j", "*", "k", "*", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", " ", 
         RowBox[{"numberSteps", " ", "+", " ", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fpn11", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"Fpn12", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn13", " ", "\[Rule]", " ", "0"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"Fpn21", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn22", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"Fpn23", " ", "\[Rule]", " ", "0"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Fpn31", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn32", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn33", " ", "\[Rule]", " ", "1"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\[Gamma]n", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"gn", " ", "\[Rule]", " ", "ginit"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stateOld", " ", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fpn11", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"Fpn12", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn13", " ", "\[Rule]", " ", "0"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"Fpn21", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn22", " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{"Fpn23", " ", "\[Rule]", " ", "0"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Fpn31", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn32", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"Fpn33", " ", "\[Rule]", " ", "1"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\[Gamma]n", " ", "\[Rule]", " ", "0"}], ",", " ", 
       RowBox[{"gn", " ", "\[Rule]", " ", "ginit"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                  "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
           "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
    "*******)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**", "**", "**", " ", "SET"}], " ", 
      "INITIAL", " ", 
      RowBox[{"VALUES", "  ", "**", "**", "**", "**"}], "*", "*", 
      RowBox[{"**", "**", "**", "**"}], "*", 
      RowBox[{"**", "**", "**", "**", "**", "**", "**"}]}], "**"}], 
    "*******)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*******)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "set", " ", "initial", " ", "condition", " ", "of", " ", "dislocation", 
     " ", "density", " ", "as", " ", "first", " ", "solution", " ", "for", 
     " ", "hardness"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"hardNewton", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "ginit"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"slipsNewton", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "\[Gamma]init"}], ";"}], 
   "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Initialize", " ", "output", " ", "for", " ", "t"}], " ", "=", 
      " ", 
      RowBox[{"0.", " ", "Everything", " ", "besides", " ", "tangent"}]}], 
     ",", " ", "F", ",", " ", 
     RowBox[{"and", " ", "Fp", " ", "is", " ", "zero"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tangentEval", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tangent", "  ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{"signtau1", " ", "\[Rule]", " ", 
           RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], "/.", " ", 
        "state"}], " ", "/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}], 
         ",", " ", 
         RowBox[{"t", " ", "\[Rule]", " ", "0"}]}], "}"}]}], "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]np1", "\[Rule]", "\[Gamma]init"}], ",", " ", 
        RowBox[{"gnp1", " ", "\[Rule]", " ", "ginit"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Calculate", " ", "eigenvalues", " ", "and", " ", "condition", " ", 
      "number", " ", "of", " ", "tangent", " ", "matrix"}], ",", " ", 
     RowBox[{"before", " ", "preconditioning"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eigsTangent", " ", "=", " ", 
     RowBox[{"Eigenvalues", "[", "tangentEval", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"conditionNumber", "[", 
      RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Max", "[", "eigsTangent", "]"}], "/", 
      RowBox[{"Min", "[", "eigsTangent", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Update", " ", "elastic", " ", "and", " ", "plastic", " ", "deformation", 
     " ", "gradients"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FOut", "[", 
      RowBox[{"[", 
       RowBox[{"iloop", ",", "All", ",", "All"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Fapplied", " ", "/.", " ", "parameters"}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{"t", " ", "\[Rule]", " ", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\[Gamma]np1", " ", "is", " ", "changed", " ", "to", " ", "non"}], "-", 
      
      RowBox[{"zero", " ", "initial", " ", "guess"}]}], ";", " ", 
     RowBox[{
     "this", " ", "prevents", " ", "initial", " ", "hardness", " ", 
      "residual", " ", "from", " ", "being", " ", "zero"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FpOut", "[", 
      RowBox[{"[", 
       RowBox[{"iloop", ",", "All", ",", "All"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Fpnplus1", " ", "/.", " ", "state"}], ")"}], " ", "/.", " ", 
      RowBox[{"\[Gamma]np1", "\[Rule]", " ", "\[Gamma]init"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Increment", " ", "time"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iloop", " ", "=", " ", 
     RowBox[{"iloop", " ", "+", " ", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tnplus1", " ", "=", " ", "timeIncrement"}], ";"}], ".", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                   "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
            "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
     "*******)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "START", " ", 
      "TIME", " ", 
      RowBox[{"LOOP", " ", "**", "**", "**", "**", "**", "**"}], "*", "*", 
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**"}]}], "*******)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
     "*******)"}], "\[IndentingNewLine]", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{"tnplus1", " ", "\[LessEqual]", " ", "finalTime"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Increment", " ", "time"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"times", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", "tnplus1"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Residuals", " ", "for", " ", "both", " ", "slip", " ", "and", " ", 
         RowBox[{"hardening", ".", " ", "Keep"}], " ", "signtau"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Reval", " ", "=", " ", 
        RowBox[{
         RowBox[{"Rparam", " ", "/.", "  ", 
          RowBox[{"{", 
           RowBox[{"signtau1", " ", "\[Rule]", " ", 
            RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], "/.", " ", 
         "state"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Rhardeval", " ", "=", " ", 
        RowBox[{"Rhardparam", " ", "/.", " ", "state"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"In", " ", "Albany"}], ",", " ", 
         RowBox[{
         "we", " ", "use", " ", "a", " ", "secant", " ", "initial", " ", 
          "guess"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"slipsNewton", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"slipsNewton", "[", 
          RowBox[{"[", 
           RowBox[{"iloop", "-", "1"}], "]"}], "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"slipRateNewton", "[", 
           RowBox[{"[", 
            RowBox[{"iloop", "-", "1"}], "]"}], "]"}], "*", 
          "timeIncrement"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hardNewton", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hardNewton", "[", 
          RowBox[{"[", 
           RowBox[{"iloop", "-", "1"}], "]"}], "]"}], " ", "+", " ", 
         RowBox[{
          RowBox[{"hardRateNewton", "[", 
           RowBox[{"[", 
            RowBox[{"iloop", "-", "1"}], "]"}], "]"}], "*", 
          "timeIncrement"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Evaluate", " ", "initial", " ", "residual"}], " ", "-", " ", 
         RowBox[{"prepare", " ", "for", " ", "N"}], "-", 
         RowBox[{"R", " ", "loop"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"RNewton", " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Reval", "}"}], ",", 
           RowBox[{"{", "Rhardeval", "}"}]}], "}"}], " ", 
         "\[IndentingNewLine]", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}],
            ",", " ", 
           RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}], ",", " ", 
           RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}], ",", 
           RowBox[{"gnp1", " ", "\[Rule]", " ", 
            RowBox[{"hardNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initialResidualsNewton", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"RNewton", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initialResidualsNewton", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"RNewton", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"iterN", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"**", "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
                    "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
               "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], "**"}], 
        "*******)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "START", " ",
          "NEWTON", " ", 
         RowBox[{
         "ITERATIONS", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**"}]}], "*******)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
         "**"}], "*******)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", "RNewton", "]"}], " ", ">", " ", 
           "absoluteTolerance"}], " ", "&&", " ", 
          RowBox[{"iterN", " ", "<", " ", "maxIterations"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "evaluate", " ", "tangent", " ", "at", " ", "current", " ", 
           "state"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tangentEval", " ", "=", " ", 
           RowBox[{"FunctionExpand", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"tangent", "\[IndentingNewLine]", "/.", "  ", 
                RowBox[{"{", 
                 RowBox[{"signtau1", " ", "\[Rule]", " ", 
                  RowBox[{"Sign", "[", "tau1param", "]"}]}], "}"}]}], 
               "\[IndentingNewLine]", "/.", " ", "state"}], " ", 
              "\[IndentingNewLine]", "/.", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}], 
                ",", " ", 
                RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}]}], "}"}]}], 
             "\[IndentingNewLine]", "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
                RowBox[{"slipsNewton", "[", 
                 RowBox[{"[", "iloop", "]"}], "]"}]}], ",", 
               RowBox[{"gnp1", " ", "\[Rule]", " ", 
                RowBox[{"hardNewton", "[", 
                 RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"calculate", " ", "eigenvalues", " ", "and", " ", "l2"}], 
            "-", 
            RowBox[{"norm", " ", "condition", " ", "number"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"eigsTangent", " ", "=", " ", 
           RowBox[{"Eigenvalues", "[", "tangentEval", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"cnTangent", " ", "=", " ", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Abs", "[", "eigsTangent", "]"}], "]"}], "/", 
            RowBox[{"Min", "[", 
             RowBox[{"Abs", "[", "eigsTangent", "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"conditionNumber", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", ",", "iterN"}], "]"}], "]"}], " ", "=", " ", 
           "cnTangent"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "compute", " ", "tangent", " ", "scaling", " ", "coefficients", 
            " ", "matrix"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ScaleEqsMatrix", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ScaleVarsMatrix", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"scale", " ", "tangent", " ", "and", " ", "residual"}], 
            ",", " ", 
            RowBox[{
            "and", " ", "compute", " ", "new", " ", "condition", " ", 
             "number"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"scaledTangent", " ", "=", " ", 
           RowBox[{
            RowBox[{"Inverse", "[", "ScaleVarsMatrix", "]"}], ".", 
            "ScaleEqsMatrix", " ", ".", " ", "tangentEval", ".", 
            "ScaleVarsMatrix"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"eigsScaledTangent", " ", "=", " ", 
           RowBox[{"Eigenvalues", "[", "scaledTangent", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"scaledconditionNumber", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", ",", "iterN"}], "]"}], "]"}], "  ", "=", " ", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"eigsScaledTangent", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
            RowBox[{"Abs", "[", 
             RowBox[{"eigsScaledTangent", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"scaledResidual", " ", "=", " ", 
           RowBox[{"ScaleEqsMatrix", " ", ".", " ", "RNewton"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"invTang", "  ", "=", " ", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], ")"}]}], "*", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"tangentEval", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"tangentEval", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{"tangentEval", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"update", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"incr", "=", " ", 
           RowBox[{"-", 
            RowBox[{"invTang", ".", " ", "scaledResidual"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "RNewton", "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"Print", "[", 
           RowBox[{"MatrixForm", "[", "tangentEval", "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"slipIncr", " ", "=", " ", 
           RowBox[{
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}], "-", 
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", 
              RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slipIncr", "<", "0"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<NO!!!! (well maybe?)\>\"", "]"}], 
             ";"}]}], " ", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "slipIncr", "]"}], ">", "1.0"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Slip Increment is too large!\>\"", ",", 
               RowBox[{"Abs", "[", "slipIncr", "]"}]}], "]"}], ";"}]}], " ", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"slipsNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}], "+=", 
           RowBox[{"incr", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"hardNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}], " ", "+=", " ", 
           RowBox[{"incr", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"RNewton", " ", "=", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "Reval", "}"}], ",", 
              RowBox[{"{", "Rhardeval", "}"}]}], "}"}], " ", 
            "\[IndentingNewLine]", "/.", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}], ",",
               " ", 
              RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}], ",", " ", 
              RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
               RowBox[{"slipsNewton", "[", 
                RowBox[{"[", "iloop", "]"}], "]"}]}], ",", 
              RowBox[{"gnp1", " ", "\[Rule]", " ", 
               RowBox[{"hardNewton", "[", 
                RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"iterN", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"iterationResids", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", ",", "iterN", ",", "1"}], "]"}], "]"}], " ", 
           "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"slipsNewton", "[", 
              RowBox[{"[", "iloop", "]"}], "]"}], ",", 
             RowBox[{"RNewton", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"iterationResids", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", ",", "iterN", ",", "2"}], "]"}], "]"}], " ", 
           "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"hardNewton", "[", 
              RowBox[{"[", "iloop", "]"}], "]"}], ",", 
             RowBox[{"RNewton", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
         "**"}], "*******)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "END", 
         " ", "NEWTON", " ", 
         RowBox[{
         "ITERATIONS", " ", "**", "**", "**", "**", "**", "**", "**", "**", "**",
           "**", "**", "**", "**", "**", "**", "**"}]}], "*******)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
         "**"}], "*******)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "RNewton", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "iterN", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"residualsNewton", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"RNewton", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"residualsNewton", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"RNewton", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"iterationsNewton", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", "iterN"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Get", " ", "shear", " ", "stress", " ", "for", " ", "post", " ", 
         "processing"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"tau1eval", " ", "=", " ", 
        RowBox[{"tau1param", "  ", "/.", " ", "state"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tau1evalTime", " ", "=", " ", 
        RowBox[{"tau1eval", " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}],
            ",", " ", 
           RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"taus", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"tau1evalTime", " ", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}], ",", 
           RowBox[{"gnp1", " ", "\[Rule]", " ", 
            RowBox[{"hardNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Get", " ", "F", " ", "for", " ", "post", " ", "processing"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FOut", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "All", ",", "All"}], "]"}], "]"}], " ", "=", 
        " ", 
        RowBox[{
         RowBox[{"Fapplied", " ", "/.", " ", "parameters"}], " ", "/.", " ", 
         RowBox[{"{", 
          RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Get", " ", "stresses", " ", "for", " ", "post", " ", "processing"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Fenplus1Eval", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Fenplus1", " ", "/.", " ", "parameters"}], " ", "/.", " ", 
          "state"}], "  ", "\[IndentingNewLine]", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}],
            ",", " ", 
           RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}], ",", " ", 
           RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Snplus1Eval", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Snplus1", " ", "/.", " ", "parameters"}], " ", "/.", " ", 
          "state"}], " ", "\[IndentingNewLine]", "/.", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}],
            ",", " ", 
           RowBox[{"t", " ", "\[Rule]", " ", "tnplus1"}], ",", " ", 
           RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
            RowBox[{"slipsNewton", "[", 
             RowBox[{"[", "iloop", "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cauchy", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "All", ",", "All"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Det", "[", "Fenplus1Eval", "]"}]}], "*", " ", 
         RowBox[{"Fenplus1Eval", " ", ".", "  ", "Snplus1Eval", " ", ".", " ", 
          RowBox[{"Transpose", "[", "Fenplus1Eval", "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"axialStress", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"cauchy", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Get", " ", "ready", " ", "for", " ", "next", " ", "step", " ", "and",
          " ", "save", " ", "Fpnplus1"}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"Fpnplus1Eval", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Fpnplus1", " ", "/.", " ", "state"}], ")"}], " ", "/.", 
         " ", 
         RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
          RowBox[{"slipsNewton", "[", 
           RowBox[{"[", "iloop", "]"}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FpOut", "[", 
         RowBox[{"[", 
          RowBox[{"iloop", ",", "All", ",", "All"}], "]"}], "]"}], " ", "=", 
        " ", "Fpnplus1Eval"}], ";", "\[IndentingNewLine]", 
       RowBox[{"stateOld", " ", "=", " ", "state"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"state", " ", "=", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Fpn11", " ", "\[Rule]", " ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn12", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn13", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Fpn21", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn22", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn23", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Fpn31", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn32", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", " ", 
          RowBox[{"Fpn33", " ", "\[Rule]", "  ", 
           RowBox[{"Fpnplus1Eval", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Gamma]n", " ", "\[Rule]", " ", 
           RowBox[{"slipsNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}]}], ",", 
          RowBox[{"gn", " ", "\[Rule]", " ", 
           RowBox[{"hardNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
         "}"}]}], ";", "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"slipRateNewton", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"slipsNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"slipsNewton", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}], ")"}], "/", 
         "timeIncrement"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hardRateNewton", "[", 
         RowBox[{"[", "iloop", "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"hardNewton", "[", 
            RowBox[{"[", "iloop", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"hardNewton", "[", 
            RowBox[{"[", 
             RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}], ")"}], "/", 
         "timeIncrement"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"iloop", " ", "=", " ", 
        RowBox[{"iloop", " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tnplus1", " ", "=", " ", 
        RowBox[{"tnplus1", " ", "+", " ", "timeIncrement"}]}]}]}], " ", 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*******)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
       "**", "**", "**", "**", "**", "**", "**"}], "*", " ", "END", " ", 
     "TIME", " ", 
     RowBox[{"LOOP", " ", "**", "**", "**", "**", "**", "**"}], "*", "*", 
     RowBox[{
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
      "**"}]}], "*******)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*******)"}]}]}]], "Input",
 CellChangeTimes->{{3.655580689360695*^9, 3.655580929677595*^9}, {
   3.6555810171264067`*^9, 3.6555810268565474`*^9}, 3.6555810879241657`*^9, {
   3.6556734329348593`*^9, 3.6556734499072533`*^9}, {3.655674264019371*^9, 
   3.655674265401812*^9}, {3.6556749061088057`*^9, 3.655674950176861*^9}, {
   3.6556750487121696`*^9, 3.655675129937319*^9}, {3.655675479793281*^9, 
   3.655675511292636*^9}, {3.6556769267944*^9, 3.655676926904648*^9}, {
   3.655677000225623*^9, 3.655677003841309*^9}, {3.655677073552761*^9, 
   3.6556770735846777`*^9}, {3.655838489844882*^9, 3.655838490051222*^9}, {
   3.655839981814333*^9, 3.6558399820524063`*^9}, {3.6558400419327393`*^9, 
   3.6558400420911493`*^9}, {3.6561839862748413`*^9, 
   3.6561839889559937`*^9}, {3.656184154456388*^9, 3.6561842234860783`*^9}, {
   3.656184398139968*^9, 3.656184561541999*^9}, {3.6561846403208513`*^9, 
   3.65618466007483*^9}, {3.6561847273857737`*^9, 3.656184871210602*^9}, {
   3.656184914475027*^9, 3.656184920665373*^9}, {3.6561850162444077`*^9, 
   3.656185022303235*^9}, {3.656185070162223*^9, 3.656185139236689*^9}, {
   3.6561881034827023`*^9, 3.656188173681718*^9}, {3.65618825739538*^9, 
   3.656188349660194*^9}, {3.656188472004065*^9, 3.65618858653743*^9}, {
   3.6561886433354483`*^9, 3.656188894395749*^9}, {3.656189293755528*^9, 
   3.656189331133561*^9}, {3.656189396510633*^9, 3.6561894060544252`*^9}, {
   3.656189760095624*^9, 3.6561897744108877`*^9}, {3.656189870988205*^9, 
   3.656189989514885*^9}, {3.656190056810915*^9, 3.656190074995957*^9}, {
   3.656190619969328*^9, 3.656190735366021*^9}, {3.656191301945517*^9, 
   3.656191337725978*^9}, {3.656191401670825*^9, 3.656191519104392*^9}, {
   3.656191733336398*^9, 3.656191744977487*^9}, {3.6561918261974154`*^9, 
   3.6561918561500607`*^9}, {3.6561949667932568`*^9, 3.656194978516799*^9}, {
   3.65619503096303*^9, 3.656195053514739*^9}, {3.65619510012151*^9, 
   3.656195208516726*^9}, 3.6561952710055943`*^9, 3.656208418199212*^9, 
   3.6562084565721617`*^9, {3.656208494739417*^9, 3.656208517225523*^9}, {
   3.6562085535868187`*^9, 3.656208616780571*^9}, {3.656209140890998*^9, 
   3.65620917237435*^9}, {3.6562092196625*^9, 3.656209285022361*^9}, {
   3.656209316161201*^9, 3.656209322129457*^9}, {3.656209360922246*^9, 
   3.656209363522538*^9}, {3.656209420654714*^9, 3.6562094425377703`*^9}, {
   3.65620956479786*^9, 3.65620958390788*^9}, {3.656209791452297*^9, 
   3.656209849287282*^9}, {3.656210063319848*^9, 3.656210068806121*^9}, {
   3.656210110213435*^9, 3.656210110852028*^9}, 3.656210153818223*^9, {
   3.656274357730207*^9, 3.656274359153586*^9}, {3.656274464311129*^9, 
   3.656274466094611*^9}, {3.656274574336512*^9, 3.6562745776735477`*^9}, {
   3.6562758421968184`*^9, 3.656275844987138*^9}, {3.65627630500349*^9, 
   3.656276312852202*^9}, {3.656277134168789*^9, 3.656277148900866*^9}, {
   3.6562773917458897`*^9, 3.656277437682497*^9}, {3.6562778758782387`*^9, 
   3.65627788358505*^9}, {3.656277986001383*^9, 3.656278009857484*^9}, {
   3.656278330719254*^9, 3.656278341168063*^9}, {3.656278660079853*^9, 
   3.656278661774181*^9}, {3.656278765620575*^9, 3.656278767355061*^9}, {
   3.6562788035127974`*^9, 3.6562788486916037`*^9}, {3.656278968361836*^9, 
   3.656279011228025*^9}, {3.656279419998035*^9, 3.6562794315992823`*^9}, {
   3.656279539908436*^9, 3.656279614159848*^9}, {3.656279717606339*^9, 
   3.656279740315545*^9}, 3.656279775952675*^9, {3.6562798289847307`*^9, 
   3.656279878412096*^9}, 3.6562799141903143`*^9, {3.6562804076884003`*^9, 
   3.6562804203224382`*^9}, 3.6562805173169003`*^9, {3.656280618886218*^9, 
   3.6562806206525297`*^9}, {3.6562806648514633`*^9, 3.656280698967246*^9}, 
   3.6562807296681013`*^9, {3.656280771327999*^9, 3.65628080770572*^9}, {
   3.6562808604805517`*^9, 3.656280878113017*^9}, 3.656280923008136*^9, {
   3.656281199932374*^9, 3.656281233780407*^9}, {3.6562815321496143`*^9, 
   3.656281582623756*^9}, {3.656281643479542*^9, 3.656281647182744*^9}, 
   3.656335899583424*^9, {3.656336061311266*^9, 3.656336061444804*^9}, {
   3.6563361791957817`*^9, 3.6563361813767443`*^9}, {3.6563362406170692`*^9, 
   3.6563362991588087`*^9}, 3.6563363836071033`*^9, {3.6563364480460587`*^9, 
   3.65633645109604*^9}, {3.6563367111754217`*^9, 3.656336711589157*^9}, {
   3.656336787059698*^9, 3.6563368153272753`*^9}, {3.656336865071013*^9, 
   3.656336865156498*^9}, {3.656337714114833*^9, 3.656337714576537*^9}, 
   3.65633775424697*^9, {3.6563396449038258`*^9, 3.656339696843644*^9}, {
   3.656339858610415*^9, 3.65633988221805*^9}, {3.656339979622984*^9, 
   3.656339993045723*^9}, 3.656340094851871*^9, 3.656341241466526*^9, {
   3.656341294208468*^9, 3.656341299492737*^9}, {3.656341488713294*^9, 
   3.6563415108008347`*^9}, 3.656341592995425*^9, {3.656341635167671*^9, 
   3.656341635700429*^9}, {3.656341666546237*^9, 3.6563417742496777`*^9}, {
   3.6568787888361483`*^9, 3.656878795114418*^9}, {3.656939893549048*^9, 
   3.656939894723435*^9}, {3.6569413351519127`*^9, 3.656941336126395*^9}, 
   3.6569676637857656`*^9, 3.656967963273731*^9, {3.656968036898717*^9, 
   3.656968039250435*^9}, {3.657047462286784*^9, 3.6570474641167927`*^9}, {
   3.6570476271385117`*^9, 3.65704762862649*^9}, {3.657290329524187*^9, 
   3.6572903890501966`*^9}, {3.657290499581832*^9, 3.657290505557911*^9}, {
   3.6572905686690893`*^9, 3.657290604841731*^9}, {3.657291134601226*^9, 
   3.657291155161858*^9}, {3.657291226376734*^9, 3.657291253761649*^9}, {
   3.657291389922243*^9, 3.657291527511849*^9}, {3.6572915712230263`*^9, 
   3.657291590351222*^9}, {3.65729162901071*^9, 3.6572916878908587`*^9}, {
   3.657291970896235*^9, 3.657292063121768*^9}, {3.657292404524705*^9, 
   3.657292471395568*^9}, 3.65729265695534*^9, {3.657292725631546*^9, 
   3.657292727056624*^9}, {3.657292909045306*^9, 3.6572930285284758`*^9}, 
   3.657293063811005*^9, {3.657293120241191*^9, 3.6572935068085423`*^9}, {
   3.657293542560198*^9, 3.65729359807325*^9}, {3.65729411016184*^9, 
   3.6572941230989647`*^9}, {3.6572998850888243`*^9, 3.657299888235345*^9}, {
   3.657299973884811*^9, 3.657300010888153*^9}, {3.657301505875785*^9, 
   3.6573015064680433`*^9}, 3.6573015913210983`*^9, {3.6573027369628077`*^9, 
   3.6573027856133537`*^9}, {3.6573028380289593`*^9, 3.657302838330399*^9}, {
   3.6573030522507668`*^9, 3.657303063657292*^9}, {3.657303392869796*^9, 
   3.657303413399844*^9}, {3.657307660419704*^9, 3.657307667119628*^9}, {
   3.6573606128014402`*^9, 3.657360773515635*^9}, {3.657362172319216*^9, 
   3.657362193375511*^9}, {3.657449922971526*^9, 3.657449927730186*^9}, {
   3.664561808172202*^9, 3.664561811945713*^9}, {3.664565867525299*^9, 
   3.6645658684357033`*^9}, {3.664567006049399*^9, 3.664567006239564*^9}, {
   3.664567040176565*^9, 3.6645670663767223`*^9}, 3.664567131974977*^9, {
   3.664567209156921*^9, 3.664567214746539*^9}, {3.6645688497483892`*^9, 
   3.664568850755245*^9}, {3.664568932898798*^9, 3.664568933504525*^9}, 
   3.664568996272629*^9, 3.664569195388791*^9, {3.6645694312239933`*^9, 
   3.6645694331888123`*^9}, {3.664569481374825*^9, 3.664569482427532*^9}, {
   3.664569596258677*^9, 3.664569640088685*^9}, {3.6645698318446083`*^9, 
   3.664569863932912*^9}, {3.6645709086352987`*^9, 3.6645709128337727`*^9}, {
   3.664571075271188*^9, 3.66457107866153*^9}, {3.664571436496398*^9, 
   3.664571436548908*^9}, {3.664571582082079*^9, 3.664571592594429*^9}, {
   3.664571673489531*^9, 3.664571673783494*^9}, {3.664572091239215*^9, 
   3.664572102223804*^9}, {3.664572165805773*^9, 3.664572181724419*^9}, {
   3.664572358063179*^9, 3.664572386063485*^9}, {3.664572574978847*^9, 
   3.6645725764579487`*^9}, {3.6645738875020943`*^9, 3.664573901018506*^9}, {
   3.664574596427511*^9, 3.6645745982247*^9}, {3.664575677528363*^9, 
   3.6645757001998053`*^9}, 3.664575850911357*^9, {3.664576440312566*^9, 
   3.6645764532139387`*^9}, {3.664751978708974*^9, 3.664751984051876*^9}, {
   3.664752462208552*^9, 3.66475246232761*^9}, {3.6648145699309387`*^9, 
   3.664814571879986*^9}, {3.6648310619024878`*^9, 3.664831062678303*^9}, {
   3.664831167796678*^9, 3.664831171929888*^9}, {3.664831245464096*^9, 
   3.66483125578753*^9}, {3.664831356572547*^9, 3.6648313682183933`*^9}, {
   3.6648314723938417`*^9, 3.664831473943609*^9}, {3.66483154325217*^9, 
   3.664831582828588*^9}, {3.664831680212492*^9, 3.664831825497469*^9}, {
   3.6648325846876*^9, 3.664832585630323*^9}, {3.664832984429184*^9, 
   3.6648329848275557`*^9}, {3.6852842402455463`*^9, 3.68528424330952*^9}, {
   3.685284801084668*^9, 3.685284801307654*^9}, {3.685288565264185*^9, 
   3.6852886422542057`*^9}, {3.685288673468788*^9, 3.6852886901333447`*^9}, {
   3.685288882133155*^9, 3.685288920121296*^9}, {3.6852895180045547`*^9, 
   3.6852895185224857`*^9}, 3.685289925779626*^9, {3.685290262391021*^9, 
   3.685290262845294*^9}, {3.6852911374800873`*^9, 3.6852911425583687`*^9}, {
   3.685291191997836*^9, 3.685291192364643*^9}, {3.6852915951845303`*^9, 
   3.6852916007777157`*^9}, 3.68529311188284*^9, {3.6852935054478493`*^9, 
   3.685293519689426*^9}, {3.685293854566866*^9, 3.6852938686566887`*^9}, {
   3.685294424741687*^9, 3.6852944254371433`*^9}, {3.6852944834009237`*^9, 
   3.685294484005995*^9}, {3.685297058927606*^9, 3.68529706589203*^9}, {
   3.685297116678689*^9, 3.685297184630864*^9}, {3.68529723137871*^9, 
   3.685297234946322*^9}, {3.685297322909801*^9, 3.685297328444763*^9}, {
   3.685297494769898*^9, 3.685297495297059*^9}, {3.685297717527925*^9, 
   3.685297743865437*^9}, 3.68529794168192*^9, {3.6852980127861567`*^9, 
   3.685298015810554*^9}, {3.685298064153091*^9, 3.68529806423971*^9}, {
   3.685298140121626*^9, 3.685298150913945*^9}, {3.6852981911819077`*^9, 
   3.68529819311823*^9}, {3.685299002266801*^9, 3.685299075056057*^9}, {
   3.685299305061376*^9, 3.685299313788652*^9}, {3.685299348845375*^9, 
   3.6852993635802097`*^9}, {3.685299410633222*^9, 3.6852994278486023`*^9}, 
   3.685299467711841*^9, {3.685299570019189*^9, 3.6852995795292664`*^9}, {
   3.685299707107171*^9, 3.685299708098269*^9}, {3.685299765642185*^9, 
   3.6852997744332733`*^9}, {3.6852998731679363`*^9, 3.685299918883637*^9}, {
   3.685387516252936*^9, 3.685387576784848*^9}, {3.685387654862318*^9, 
   3.685387682486587*^9}, {3.6853877299755993`*^9, 3.685387799948947*^9}, {
   3.685387880510478*^9, 3.6853878874863462`*^9}, {3.685387991355165*^9, 
   3.68538800243536*^9}, {3.685388225728195*^9, 3.685388241799365*^9}, {
   3.685388370022293*^9, 3.685388419947864*^9}, {3.685388522407648*^9, 
   3.685388527407296*^9}, {3.685456196587688*^9, 3.685456202546743*^9}, {
   3.6854563216672897`*^9, 3.685456324433319*^9}, {3.685456651487969*^9, 
   3.68545671784593*^9}, {3.6854567547855663`*^9, 3.685456776084796*^9}, {
   3.685456908587269*^9, 3.685456910124381*^9}, {3.6854569432892942`*^9, 
   3.685456950480772*^9}, 3.685457067882519*^9, {3.685457120078102*^9, 
   3.685457148135062*^9}, {3.685457579915717*^9, 3.685457614181815*^9}, {
   3.685457982055153*^9, 3.685458019091851*^9}, {3.6854583033012543`*^9, 
   3.685458441310151*^9}, 3.685458767593502*^9, {3.685463751453743*^9, 
   3.6854638564670553`*^9}, {3.685463899084569*^9, 3.6854639048880177`*^9}, {
   3.685464026483654*^9, 3.685464068683289*^9}, {3.685464174871963*^9, 
   3.685464179983509*^9}, {3.6854642692961187`*^9, 3.685464351433511*^9}, {
   3.6854644505643044`*^9, 3.685464530564863*^9}, {3.685464750195113*^9, 
   3.685464776765929*^9}, {3.685465312401558*^9, 3.685465373818252*^9}, {
   3.6854673272974997`*^9, 3.685467403444281*^9}, {3.685467456553545*^9, 
   3.6854674572337523`*^9}, {3.68546750133121*^9, 3.685467529945809*^9}, {
   3.6854681070488367`*^9, 3.685468164050419*^9}, {3.685468338464929*^9, 
   3.6854684182660007`*^9}, {3.685469194215781*^9, 3.685469269644733*^9}, {
   3.685472070447751*^9, 3.685472099964964*^9}, {3.6854726091254587`*^9, 
   3.6854726368759117`*^9}, {3.685472692947523*^9, 3.68547280681534*^9}, {
   3.685472840883749*^9, 3.685472856265264*^9}, {3.685472894103264*^9, 
   3.685472897796076*^9}, {3.685472938580534*^9, 3.685472958523929*^9}, {
   3.6854732159310913`*^9, 3.6854732367067833`*^9}, {3.685473294282382*^9, 
   3.6854733456405163`*^9}, {3.6854734806863537`*^9, 3.685473483376112*^9}, {
   3.685473549556563*^9, 3.685473551143711*^9}, {3.6854735851403313`*^9, 
   3.685473588083214*^9}, {3.6854736456489363`*^9, 3.6854736496363792`*^9}, {
   3.68547551465843*^9, 3.685475514751886*^9}, {3.685476078205852*^9, 
   3.68547610967876*^9}, {3.685476265633616*^9, 3.68547627926836*^9}, {
   3.6854763398534203`*^9, 3.685476351002853*^9}, {3.685651782647292*^9, 
   3.6856517832672787`*^9}, {3.6856543771361*^9, 3.6856544051194267`*^9}, {
   3.685654604363902*^9, 3.685654649474945*^9}, {3.68565471660452*^9, 
   3.685654745890849*^9}, {3.6856548738014708`*^9, 3.6856548744686527`*^9}, {
   3.6857489161157217`*^9, 3.6857489190603027`*^9}, {3.685748965941938*^9, 
   3.685748998982604*^9}, {3.685749997173808*^9, 3.6857499996840143`*^9}, {
   3.6857500768098087`*^9, 3.6857501102428017`*^9}, {3.6857501761849546`*^9, 
   3.685750180449696*^9}, {3.685800292866994*^9, 3.685800311084427*^9}, {
   3.685800366157584*^9, 3.6858004019983263`*^9}, {3.6858006145826283`*^9, 
   3.6858006490141363`*^9}, {3.685802014323113*^9, 3.685802020395176*^9}, {
   3.685802286795354*^9, 3.685802291981071*^9}, {3.685802348686531*^9, 
   3.685802375909852*^9}, {3.685802586154167*^9, 3.685802654798184*^9}, {
   3.68599415101891*^9, 3.6859941695890503`*^9}, {3.68599443940351*^9, 
   3.685994470169239*^9}, {3.688819116994309*^9, 3.688819122108288*^9}, {
   3.688819155596418*^9, 3.688819158820009*^9}, {3.68881924553924*^9, 
   3.688819280104995*^9}, {3.688819365408021*^9, 3.6888193686864243`*^9}, {
   3.688843601502198*^9, 3.688843643945395*^9}, {3.688844844686018*^9, 
   3.688844844913615*^9}, {3.688844909641058*^9, 3.6888449122881613`*^9}, 
   3.688844998348455*^9, {3.6888451387242737`*^9, 3.688845141851346*^9}, 
   3.6888451980373287`*^9, {3.688845392030534*^9, 3.688845434859665*^9}, {
   3.688846110360034*^9, 3.6888461182707148`*^9}, {3.688846188887084*^9, 
   3.6888461890051394`*^9}, {3.6888462228839703`*^9, 3.68884622517199*^9}, {
   3.68884627348807*^9, 3.688846341649637*^9}, {3.688846373216359*^9, 
   3.688846384848793*^9}, {3.688846431158286*^9, 3.688846480164991*^9}, {
   3.688846524490679*^9, 3.6888465630284863`*^9}, {3.688846649558711*^9, 
   3.688846649657813*^9}, {3.688847384335684*^9, 3.688847401531142*^9}, 
   3.688848059409692*^9, {3.6888481398259697`*^9, 3.6888483795967293`*^9}, {
   3.688848419867413*^9, 3.68884849060207*^9}, 3.68884998469683*^9, {
   3.688850327363326*^9, 3.688850366339682*^9}, {3.688850414162876*^9, 
   3.688850426296958*^9}, {3.688850475836768*^9, 3.68885050179128*^9}, 
   3.688850553945513*^9, {3.6888505913037033`*^9, 3.6888506121144857`*^9}, {
   3.6888506705639133`*^9, 3.688850700954299*^9}, 3.6888507835758553`*^9, {
   3.6888508687649918`*^9, 3.688851026701908*^9}, {3.689428642823357*^9, 
   3.6894287601571627`*^9}, {3.689428817852934*^9, 3.689428819842753*^9}, {
   3.689433849133396*^9, 3.689433889154217*^9}, {3.689433924502715*^9, 
   3.689433925323922*^9}, {3.6894340264992647`*^9, 3.689434102007806*^9}, 
   3.689435261704956*^9, {3.689435510490409*^9, 3.6894356017674227`*^9}, {
   3.6894357089669456`*^9, 3.689435776066621*^9}, 3.689437193870037*^9, {
   3.689438239339652*^9, 3.6894382835164747`*^9}, {3.689438324403144*^9, 
   3.689438346000119*^9}, {3.689438443490711*^9, 3.68943847817367*^9}, {
   3.689438543615522*^9, 3.6894385483266687`*^9}, {3.689438585219993*^9, 
   3.689438623284628*^9}, {3.689438655318886*^9, 3.689438733032745*^9}, {
   3.689438778913369*^9, 3.689438864414136*^9}, {3.689439365819137*^9, 
   3.689439451312791*^9}, {3.689460129669348*^9, 3.689460142894342*^9}, {
   3.6894604669767237`*^9, 3.689460481564489*^9}, {3.690040348673131*^9, 
   3.690040431229911*^9}, 3.6900408530547113`*^9, {3.690040917576915*^9, 
   3.690040946954088*^9}, 3.690041003039838*^9, {3.6900410756722097`*^9, 
   3.6900410844544353`*^9}, {3.6900411220921392`*^9, 
   3.6900411257343063`*^9}, {3.6900412196044397`*^9, 3.690041231067436*^9}, 
   3.690041264593913*^9, {3.690041572940782*^9, 3.690041586828939*^9}, {
   3.690041941797111*^9, 3.690041962544029*^9}, {3.69004206661098*^9, 
   3.690042102007324*^9}, 3.6900421559995832`*^9, {3.690042243944539*^9, 
   3.690042252246933*^9}, {3.690042391768579*^9, 3.690042395614831*^9}, {
   3.690042451507577*^9, 3.690042464116774*^9}, 3.6900425037887917`*^9, {
   3.690044384239422*^9, 3.690044393782057*^9}, {3.690044445060335*^9, 
   3.6900444732981577`*^9}, {3.690055660473566*^9, 3.690055775925342*^9}, {
   3.690055819631342*^9, 3.690055884501349*^9}, {3.690055929435369*^9, 
   3.690055991439521*^9}, {3.69005629630907*^9, 3.690056369226748*^9}, {
   3.690056404127878*^9, 3.690056482607452*^9}, {3.690056522421781*^9, 
   3.6900566167294807`*^9}, {3.690056667970581*^9, 3.690056759069364*^9}, {
   3.690056791264865*^9, 3.690056805724925*^9}, {3.690056846059751*^9, 
   3.690057104646796*^9}, {3.690057145335471*^9, 3.6900572084444647`*^9}, {
   3.6900572426218557`*^9, 3.69005733269363*^9}, {3.690058052869578*^9, 
   3.6900581042263117`*^9}, {3.690058142414819*^9, 3.690058143017757*^9}, {
   3.690068797747725*^9, 3.6900688076832123`*^9}, {3.6900688554928083`*^9, 
   3.690068866322009*^9}, {3.6900690726773357`*^9, 3.690069074434808*^9}, {
   3.690208857346718*^9, 3.690208865686742*^9}, {3.690209065133339*^9, 
   3.690209069627507*^9}, {3.690210678908266*^9, 3.690210683745447*^9}, 
   3.690210730790032*^9, 3.6902107820437803`*^9, {3.690211143362533*^9, 
   3.6902111546481323`*^9}, {3.6902111862480927`*^9, 
   3.6902113387910547`*^9}, {3.690211394249323*^9, 3.690211398964287*^9}, {
   3.6902114619880953`*^9, 3.690211474665976*^9}, {3.6902121021404753`*^9, 
   3.690212118466806*^9}, {3.690212490441279*^9, 3.6902125286167*^9}, {
   3.690212759193899*^9, 3.690212776208955*^9}, {3.690212831900136*^9, 
   3.690212837330398*^9}, {3.6902130443632183`*^9, 3.690213096764249*^9}, {
   3.690213296611454*^9, 3.690213305349176*^9}, {3.690213421302979*^9, 
   3.6902134429917393`*^9}, {3.690213512434903*^9, 3.6902135380251093`*^9}, {
   3.690213572730241*^9, 3.690213626648147*^9}, {3.690213725839518*^9, 
   3.690213788972616*^9}, {3.6902141301302834`*^9, 3.690214155827924*^9}, {
   3.690214215042547*^9, 3.690214215436822*^9}, {3.690214292374242*^9, 
   3.690214299800359*^9}, {3.690214337078534*^9, 3.690214340144576*^9}, {
   3.6902146187939796`*^9, 3.690214626993227*^9}, {3.6902146816864157`*^9, 
   3.6902147050512543`*^9}, 3.690214739570881*^9, {3.690215015433213*^9, 
   3.690215056479063*^9}, 3.6902204253671217`*^9, {3.690221716948782*^9, 
   3.690221730661872*^9}, {3.690227434053803*^9, 3.690227500388481*^9}, {
   3.6902275747569513`*^9, 3.690227592748189*^9}, 3.690228138613224*^9, 
   3.690229336219089*^9, 3.690229533882792*^9, {3.690230363719592*^9, 
   3.690230363955018*^9}, {3.6902306243107443`*^9, 3.690230666923719*^9}, 
   3.690230780686841*^9, {3.69023085235079*^9, 3.690230878265525*^9}, {
   3.690230933151684*^9, 3.6902309639895487`*^9}, {3.6902313335367393`*^9, 
   3.690231337629395*^9}, {3.6902323716942863`*^9, 3.690232388053488*^9}, 
   3.6902324476370773`*^9, {3.690232574480657*^9, 3.690232581992587*^9}, {
   3.6902328339550257`*^9, 3.690232842266646*^9}, {3.69023292069445*^9, 
   3.690232990943658*^9}, {3.6902330443091173`*^9, 3.690233074613929*^9}, {
   3.69023342475067*^9, 3.690233435326075*^9}, {3.690233517323977*^9, 
   3.69023351783818*^9}, 3.690234054953442*^9, {3.6907275895452642`*^9, 
   3.690727615444955*^9}, {3.690727648822693*^9, 3.690727718463161*^9}, {
   3.6926304620064*^9, 3.6926305483882217`*^9}, {3.692632059764366*^9, 
   3.6926320612678947`*^9}, {3.692646450322215*^9, 3.6926464559126167`*^9}, {
   3.6926465373036957`*^9, 3.6926465388148623`*^9}, {3.692647461208186*^9, 
   3.692647472713709*^9}, 3.692649440549527*^9, {3.692650669603119*^9, 
   3.692650670714698*^9}, {3.69265070653906*^9, 3.692650737305278*^9}, {
   3.6926524535509253`*^9, 3.692652453599702*^9}, 3.6926525209944477`*^9, {
   3.692657569681366*^9, 3.692657606946486*^9}, {3.692657720720285*^9, 
   3.692657726193084*^9}, {3.692657782243557*^9, 3.6926577961539593`*^9}, {
   3.692657827030675*^9, 3.6926578295261593`*^9}, {3.69265821574137*^9, 
   3.6926582196496897`*^9}, {3.692658436521433*^9, 3.6926584608046293`*^9}, 
   3.694980158241823*^9, 3.732993142330564*^9, {3.732994330286537*^9, 
   3.732994368850131*^9}, {3.732996378504483*^9, 3.732996411605461*^9}, {
   3.732996442132743*^9, 3.732996449998578*^9}, {3.732996858641107*^9, 
   3.73299685897898*^9}, {3.732996959927986*^9, 3.732996969302558*^9}, {
   3.7329971879219513`*^9, 3.73299719673818*^9}, {3.7329973316208897`*^9, 
   3.732997372824333*^9}, {3.732997427270363*^9, 3.7329974285737333`*^9}, 
   3.732998199680834*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "6.121729984959845`*^-16"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208006837*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982080152903`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "6.723250731251783`*^-10"}], "}"}], ",", 
   RowBox[{"{", "0.`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982082250233`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.000013453296401`", "1.4940557180559517`*^-10"},
     {"0.`", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208236833*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "5.801069334622668`*^-20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.000013446320565167503`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982083696213`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.0000134531244627`", "1.4940356184808572`*^-10"},
     {
      RowBox[{"-", "20000.000000000004`"}], "1.0000001357166377`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208380754*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.5045381366573882`*^-21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.4025726492316906`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208391316*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208401765*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "2.340701525145637`*^-6"}], "}"}], ",", 
   RowBox[{"{", "1.8194757935810924`*^-12", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982086014137`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.031242133448916`", "5.20305142121838`*^-7"},
     {
      RowBox[{"-", "19999.994674950918`"}], "1.0000001357162398`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208612948*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.8007547180803454`*^-9"}], "}"}], ",", 
   RowBox[{"{", "0.000017552190062906925`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982087644672`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.0300624345834448`", "4.996584088913741`*^-7"},
     {
      RowBox[{"-", "19992.322612409767`"}], "1.000390718155526`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982087755423`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "7.949120453944278`*^-16"}], "}"}], ",", 
   RowBox[{"{", "5.0271870000173635`*^-12", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208918448*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.030061655562054`", "4.996447846117404`*^-7"},
     {
      RowBox[{"-", "19992.31977678901`"}], "1.0003910151896307`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208929926*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2.710505431213761`*^-19", "}"}], ",", 
   RowBox[{"{", "5.599687380453133`*^-15", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998208940742*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982089513693`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.0007222571377270869`"}], "}"}], ",", 
   RowBox[{"{", "0.000017585093862293455`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209175538*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"8.268835248342668`", "0.0001608407127494472`"},
     {
      RowBox[{"-", "19984.64184916846`"}], "1.0003910151897615`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209186829*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.0002240628989527835`"}], "}"}], ",", 
   RowBox[{"{", "0.012880446560606273`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209335672*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.996193447947499`", "0.00006332290990206486`"},
     {
      RowBox[{"-", "19783.229641624283`"}], "1.0106738647870077`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209347389*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00004586538154904665`"}], "}"}], ",", 
   RowBox[{"{", "0.005653673694290262`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299820948253*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.6313557692364133`", "0.00003340801429425487`"},
     {
      RowBox[{"-", "19652.981814637656`"}], "1.0175552862265433`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209493536*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3.0117192155311`*^-6"}], "}"}], ",", 
   RowBox[{"{", "0.0005905030003541256`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209646263*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.336165696049763`", "0.000027081067332521964`"},
     {
      RowBox[{"-", "19611.36641685048`"}], "1.0197957549218333`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299820965688*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.4804890818360039`*^-8"}], "}"}], ",", 
   RowBox[{"{", "3.3102508436577693`*^-6", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982097943783`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.316230164014198`", "0.000026656222410098212`"},
     {
      RowBox[{"-", "19608.271532945033`"}], "1.0199644920501945`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982098036537`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3.608028318387996`*^-13"}], "}"}], ",", 
   RowBox[{"{", "8.135492279848222`*^-11", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209942902*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.316131967105681`", "0.000026654130558919615`"},
     {
      RowBox[{"-", "19608.256222430136`"}], "1.0199653302800398`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998209952813*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4.391018798566293`*^-18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2.220446049250313`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982099620523`*^9}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982099712763`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.002875517880077448`"}], "}"}], ",", 
   RowBox[{"{", "0.048222827272423885`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210185904*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"27.67773219290823`", "0.0006321412432443981`"},
     {
      RowBox[{"-", "19223.67540109526`"}], "1.0199653303004699`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210195609*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.0009708499594634205`"}], "}"}], ",", 
   RowBox[{"{", "0.01529600463597891`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982103402433`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"11.736492423658486`", "0.00024268548149884302`"},
     {
      RowBox[{"-", "19018.86638676619`"}], "1.0315995779923355`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210349771*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00027492733869888145`"}], "}"}], ",", 
   RowBox[{"{", "0.010216861141435274`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210490795*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6.028238536368823`", "0.00010927407797910252`"},
     {
      RowBox[{"-", "18851.405779020435`"}], "1.0410719257745638`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982105002937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00004625561103013549`"}], "}"}], ",", 
   RowBox[{"{", "0.003282723976638202`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982106506243`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.244383062134132`", "0.0000689227877823777`"},
     {
      RowBox[{"-", "18757.48022148877`"}], "1.0464859503707091`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982106612663`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.9943088469343635`*^-6"}], "}"}], ",", 
   RowBox[{"{", "0.00019544835757567824`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210809123*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.912238001547998`", "0.00006152104787695508`"},
     {
      RowBox[{"-", "18734.742056798957`"}], "1.0478162248397753`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982108187838`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4.1078434384524826`*^-9"}], "}"}], ",", 
   RowBox[{"{", "4.3155936069183554`*^-7", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982109629927`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8974476424917572`", "0.00006119243057473175`"},
     {
      RowBox[{"-", "18733.678047662266`"}], "1.047878981141018`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998210970675*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.7116353907137283`*^-14"}], "}"}], ",", 
   RowBox[{"{", "1.84297022087776`*^-12", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982111233597`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8974171315538606`", "0.00006119175276130231`"},
     {
      RowBox[{"-", "18733.67585041172`"}], "1.0478791109915528`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211131218*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "5.567378155713065`*^-17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.329070518200751`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211138825*^9}],

Cell[BoxData["8"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982111460857`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00034690752789966965`"}], "}"}], ",", 
   RowBox[{"{", "0.26882963592937603`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211362849*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6.700663857996997`", "0.0001247907920822183`"},
     {
      RowBox[{"-", "17853.175567244332`"}], "1.047879110992094`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211370351*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00006004859687981266`"}], "}"}], ",", 
   RowBox[{"{", "0.0030856683547213493`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982115236063`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.619792537682353`", "0.00007738641889750576`"},
     {
      RowBox[{"-", "17783.767603428587`"}], "1.0546033046172196`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211531331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "2.8972480218016333`*^-6"}], "}"}], ",", 
   RowBox[{"{", "0.0002627067684999318`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211685479*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.2125552302780225`", "0.00006825598614374636`"},
     {
      RowBox[{"-", "17758.500182561016`"}], "1.0561946577164751`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211694592*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "7.574183423194377`*^-9"}], "}"}], ",", 
   RowBox[{"{", "7.400858246242592`*^-7", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211844613*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.192171845444233`", "0.00006780049593013438`"},
     {
      RowBox[{"-", "17757.168307237458`"}], "1.0562796793906728`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211852785*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "5.186183513888887`*^-14"}], "}"}], ",", 
   RowBox[{"{", "5.099032307498419`*^-12", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998211998296*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.192118451322685`", "0.00006779930297351126`"},
     {
      RowBox[{"-", "17757.16481335754`"}], "1.0562799029250944`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212005926*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.5298092653770468`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.329070518200751`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299821201344*^9}],

Cell[BoxData["6"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212020973*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.00005678115467130343`"}], "}"}], ",", 
   RowBox[{"{", "0.3527146545851094`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212237706*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.477565207350415`", "0.00007422474943017176`"},
     {
      RowBox[{"-", "16777.10851783448`"}], "1.0562799029266252`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212246414*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.9771127156835867`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0002523541493495429`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212393417*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.154715473668993`", "0.00006698616174965868`"},
     {
      RowBox[{"-", "16795.69218735644`"}], "1.0585341224541205`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212401025*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3.375814748671647`*^-9"}], "}"}], ",", 
   RowBox[{"{", "3.5384755747713825`*^-7", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212544533*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.141599058053827`", "0.00006669322388552814`"},
     {
      RowBox[{"-", "16794.77863061193`"}], "1.0585928607931339`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212552951*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.0201962972328227`*^-14"}], "}"}], ",", 
   RowBox[{"{", "1.0009770790020411`*^-12", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212692841*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.141576725613081`", "0.00006669272515655776`"},
     {
      RowBox[{"-", "16794.77715939883`"}], "1.0585929629192001`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299821270162*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "2.9024092157436954`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.329070518200751`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212709182*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982127165737`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "0.000015005976061891314`"}], "}"}], ",", 
   RowBox[{"{", "0.3614293480133126`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998212934787*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.0983429714146045`", "0.00006573905864742606`"},
     {
      RowBox[{"-", "15830.824563396449`"}], "1.0585929629195086`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982129437323`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "5.6911109559503164`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00027144172197424155`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213092198*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.046182676981814`", "0.00006456789682912216`"},
     {
      RowBox[{"-", "15868.34893386922`"}], "1.059744503511794`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213099976*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "3.173759649185981`*^-12"}], "}"}], ",", 
   RowBox[{"{", "4.679066023527412`*^-10", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982132521973`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.045796755117623`", "0.00006455929721027209`"},
     {
      RowBox[{"-", "15868.29158896699`"}], "1.0597457616299604`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213261297*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "4.63659059063426`*^-16"}], "}"}], ",", 
   RowBox[{"{", "1.7763568394002505`*^-15", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299821326892*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982132763987`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "7.887968479283302`*^-6"}], "}"}], ",", 
   RowBox[{"{", "0.3547492284701734`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213495564*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.963277864744813`", "0.00006271618612395363`"},
     {
      RowBox[{"-", "14940.724195551458`"}], "1.0597457617297614`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213503273*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "6.613175583319517`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.000237405517023781`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213653722*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.955179503024319`", "0.00006252904602538692`"},
     {
      RowBox[{"-", "14981.239677252972`"}], "1.0606764130665267`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.73299821366199*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "1.9700820835799604`*^-14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "8.043876675856154`*^-11"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213822839*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.9551499054934793`", "0.00006252839178149288`"},
     {
      RowBox[{"-", "14981.210183702784`"}], "1.0606759826539782`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213830805*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1.1329912702473521`*^-17", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "5.329070518200751`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213838464*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998213845821*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "6.48409369810349`*^-6"}], "}"}], ",", 
   RowBox[{"{", "0.3450693631668953`", "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214052308*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8764752297503797`", "0.00006076092307214448`"},
     {
      RowBox[{"-", "14093.023082937641`"}], "1.0606759826544612`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214061552*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "7.784285619523088`*^-10", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.00022367365369646564`"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214203453*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8759249620349663`", "0.00006074242164658159`"},
     {
      RowBox[{"-", "14133.657001529684`"}], "1.0615511998455613`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982142125263`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "8.56704030632871`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "7.896261422501993`*^-11"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214351481*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.8759061345480177`", "0.00006074200736773782`"},
     {
      RowBox[{"-", "14133.629380524604`"}], "1.0615507473261232`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214359253*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "5.693145607721384`*^-16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1.7763568394002505`*^-15"}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.732998214366856*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.732996418702318*^9, 3.7329964509275417`*^9, 
  3.7329969701246147`*^9, 3.73299719757831*^9, 3.732997440834773*^9, 
  3.7329982143742847`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Null", ".", "Null"}]], "Output",
 CellChangeTimes->{3.732996422319777*^9, 3.732996453873077*^9, 
  3.732996971793934*^9, 3.7329971994678783`*^9, 3.732997451660008*^9, 
  3.732998214463129*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.692658625098879*^9, 3.6926586274726458`*^9}, {
  3.6930715655566187`*^9, 3.693071567312873*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6888436737581377`*^9, 3.6888436748742313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sampling residual to confirm character", "Section",
 CellChangeTimes->{{3.664892703454237*^9, 3.664892710177496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"slipsSample", " ", "=", " ", 
   RowBox[{"slipsNewton", "[", 
    RowBox[{"[", 
     RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardSample", " ", "=", " ", 
   RowBox[{"hardNewton", "[", 
    RowBox[{"[", 
     RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplingslipPoints", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"slipsSample", "*", "0.98"}], ",", 
     RowBox[{"slipsSample", "*", "1.1"}], ",", 
     RowBox[{"slipsSample", "/", "n"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplinghardPoints", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"hardSample", "*", "0.98"}], ",", 
     RowBox[{"hardSample", "*", "1.1"}], ",", 
     RowBox[{"hardSample", "/", "n"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"count", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "samplinghardPoints", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residSample", "  ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"0", "*", "i", "*", "j"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"m", "^", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"residSample", "[", 
        RowBox[{"[", 
         RowBox[{"count", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{"samplingslipPoints", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"residSample", "[", 
        RowBox[{"[", 
         RowBox[{"count", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{"samplinghardPoints", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"residSample", "[", 
        RowBox[{"[", 
         RowBox[{"count", ",", "3"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"{", 
           RowBox[{"Reval", ",", "Rhardeval"}], "}"}], "]"}], "^", "2"}], " ",
         "/.", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]t", " ", "\[Rule]", " ", "timeIncrement"}], 
          ",", " ", 
          RowBox[{"t", " ", "\[Rule]", " ", "finalTime"}], ",", 
          RowBox[{"gnp1", "\[Rule]", " ", 
           RowBox[{"samplinghardPoints", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
          RowBox[{"\[Gamma]np1", " ", "\[Rule]", " ", 
           RowBox[{"samplingslipPoints", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}], ";"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "m"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"samplingPoints", ",", "residSample"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPointPlot3D", "[", "residSample", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{"slipsNewton", "[", 
     RowBox[{"[", 
      RowBox[{"iloop", "-", "1"}], "]"}], "]"}], ",", "\"\<,\>\"", ",", 
    RowBox[{"hardNewton", "[", 
     RowBox[{"[", 
      RowBox[{"iloop", "-", "1"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.664892715948429*^9, 3.664892849565834*^9}, {
   3.6648929109817142`*^9, 3.664892958523363*^9}, {3.664892988683778*^9, 
   3.664892992458643*^9}, {3.664894094360045*^9, 3.664894193652032*^9}, {
   3.664894241388701*^9, 3.664894258245697*^9}, {3.6648943884482393`*^9, 
   3.664894455260736*^9}, {3.664894501061699*^9, 3.664894605217494*^9}, {
   3.664894681344317*^9, 3.664894706782693*^9}, {3.664894750374221*^9, 
   3.664894778477071*^9}, {3.664894837949218*^9, 3.66489484555518*^9}, {
   3.66489492273952*^9, 3.664894937240818*^9}, {3.664894990144822*^9, 
   3.6648950305426273`*^9}, {3.6648950733278513`*^9, 3.664895145659034*^9}, {
   3.664895262611024*^9, 3.664895264128284*^9}, {3.664895304690858*^9, 
   3.664895348782278*^9}, {3.664895469589085*^9, 3.664895506090434*^9}, {
   3.66489556744411*^9, 3.664895570625442*^9}, {3.66489560881743*^9, 
   3.6648956498947897`*^9}, {3.665323998408732*^9, 3.665324052375617*^9}, {
   3.674296372655572*^9, 3.674296455727055*^9}, {3.6742964924725227`*^9, 
   3.674296571514825*^9}, 3.685474695023542*^9, {3.685474764166584*^9, 
   3.6854748272861023`*^9}, {3.690040470174159*^9, 3.690040470356492*^9}, {
   3.690058335527376*^9, 3.6900583642197647`*^9}, 3.692630559811224*^9, 
   3.694980171127472*^9, {3.694980210733129*^9, 3.6949804126759853`*^9}, 
   3.6949804466849823`*^9}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1:eJxM1ndcze//x/H2Hqe9996nvTuHyCqhyEeISBo0KCsjO5QoKbIjFSEjUSqj
0FBJ0yiEhlCRpt/vn9fzfP/qdnvczu30Ptf7ul7XXSswYkEQDxcXl6UjFxfv
//+dttG+IX5tIIvRuExy7pQAtug7pyPGNxjsobs9zfPWcfrbVQ6sZGcp9qXh
M+80ojl9iezLBy4vpdg+jvM/9cdy+tSXsySZ/tJsnm183SXbOD2mv98ztF+a
XVBc2H9kF6db8rza07tHhh04GTrkv4/TufXeP7mtIsuWYquPGh/idN6MH6pP
7sqyy+Pr/40kcbrJtHtnlRbIsaOe7OV/kcLpSWbPFhf+lGNr8juIpqdzutDI
0SWZx+TZdR69jOAznK63Iuz2cxsF9s6DZ+XtLnK6eXZitEubAtvi5XxV/mxO
vywlmT0cr8j+IMqv3ZjH6XILegJGTZTYSV73DS7d5PQ5I+N501qU2G5Hw8yi
73K670fBU037ldnf69Stpzz4n9+becPhpr0K+4x0gwOjlNOX18el1feosL18
97l9eMLpuvlvy53Oq7LHTzhMy3/O6U+mar3o9VNjX2vunbW9htPFv8Q/+Cyl
zvZXOuft2cDpu1JUsvRq1dmi/gsWqjRzusrsXyn5RzTYDzP5/XvaOd3L+k9V
qb4mO/T9/RVFHZw+vqN/uedBTbayZviag12cXqhcIjzRo8l+uVIj3K+H05U9
LV/Xz9Vib7nUEKX/g9NHbCUev7ytxTbq2rfp9yCnT+cRffdVSZvdou+4/enf
//m88Gtjo3ht9sG1fbtTJv7nfU3wFyR1a7Mdcs8dDORZhf5V1GGLoo8O+2vv
giRLQU6fEBzYX1Giwz5pJpDKJcbphUdvdaYb6bI9IooyXjE4/ZRF99Gjabrs
PzfDz52V+5/vP8CVnsunx74yoHF5nTKnb4vw5erZoMdeaPM610WD0z/L27/y
+qzH5o/df1NUl9O5TH6KNC3UZ98pdLzXZsjptb+Li3Y/12evHul7mGPG6ba7
6jp9XAzYss7nyzdbcfq7Wz4Js24ZsJ/E+VTOsOd0xaige6sMDNkbHgnUyLtw
+q7HyhEXzxqydbgeNHSxOd3w644ifgUjdsOUdS13pnP6660ppxOTjdi792i+
3zOb0yWOz1NxEjVmWz57/WmBN6fvaMpyEz1gzO4UONCt5cvpc7JiRLn5TNjH
Zjr9+LmY0zfonTugstuEzT70fah0Gac/Wzd0fwm3Kftn1fnRpEBOn5HGuvwo
3pR9TtyXa3kwp1s1T1kwg9eM7e0tKGAWzuldF28/G9pnxv6X/EB0PJLTVUqn
8VcKm7PzG9ZJVcVwesDyTPlHSebs5bJaCqe2cvpex//+tcpasCUWNaqG7OR0
VrbUM+VMC3bJyQPaDns5fX1bjh1bmsle1+pkKJjA6dznGnbw+zHZqir9Zk2J
nF7E/dh1WSaTXb30gvXl45zu12kVO+Mjkx131tdx40lOF9F/a/zU0JJt0iHI
cs/k9LjqyOWvIyzZ7VoPp0lf+J/P/zonE1NoyT60av3szsucbtwm65Xzz5Lt
dFlr3s1cTvfi3SQeOdOK3fOlceHOG5yuYBDq9+KYFTvD8KD/3DucfnhWktnd
div2rFDnlWpFnJ70eOdxa31r9t+8/jV9JZw+c0bzwWlR1uyr3y+EP3zM6cuG
jGS+FVuzF1ssjD5UyekefsI26sI2bMEooc3/VXP6m028/V8W2rALCx5uN6zn
9PedF92nXrJhBw+t3zP8htN7rq+3Z/6yYcvbaSdUtHH69kM9VTdZtuyKTW+S
Tnzg9FnP0nifJtmyY4oOpq7+zOnBPj87Qt7bsvXGnE9Zd//POrRFrrlobsd+
4/LjHE8/pxsUJaWt22nH3rvj4uX6AU7/KVGyoarOjm1TtjDv/DCnL34WxlWs
bc/+xC18K2Kc0/87KchixdizU9yL77lxr0ZvURq1XPjcnu2+L6JYXIDTlzzJ
aZ9QcWAPVGg/fivC6UWDW9wcIx3YF4WaKvMkOX3p+Mulgs8c2AtmJ9RsleV0
hsGow1plRzb3EZfXs5Q4XfDRyjf+kY7sWzU/WhTVOd1B5j+bjxWO7BWSl95/
1eZ0iwM2i8fUnNiM+Ys+3zPg9LfJ092zY5zYZceFe/aZcrrC07bhrhondkRj
8Q9fS04va2FtLtR3ZmvIR/7WseP0nlslFSq7nNm1fjpjA06cbrj6VJd0mzN7
R0YT12MWpxe4KDVn2riwzdsTBI5N4/SUyq1nio66sN+puoqtmMXpfk3jTiG9
LuzE5T+lLOZy+t39bbfyZriyXc5fUphcwOmLZnryxWe5svs6F6nV+HF67qcD
Nt3cbuxMHRGdzKWcnryzbNrnADf2nKASw7CVnH4zW98++pEbe+xKpLnTGk6/
vOCbeIoai537TcdGOIzTp39lVnlsZ7GXGDc7tkRw+gp3o6jEdyy2SPghVvZG
Tp/fMbbLWoPNLrruOj12y/98Xq2jtNubzQ758XP29B2cflJkQWz3LjZbyTJr
nuweTtfRXHnZqoDNfh7tt+jTAU6POKcy99knNnvzHZGlBUc4XTQtKeqC3BS2
wZ+SlfHHOH30wzNG5Ywp7Gb7qOB5aZz+yLja1G7rFPaBLbrrNE5z+r7h3Ir+
a1PYdg+bo/vPcTrf2dAPPz9MYX8ZP7S5JIvTf82V3uwiM5Wd5ua240gOp8fJ
Xz1W7zGVTa42+RRotXlWAFtWXmaZibo4XE29d+3MpCm6EnA1deXDHv2d5pJw
NfVcSXlvAQ0GXE39TOXaDx1XGXA1dUXZoPtctlJwNfWaNKueoCdScDX1txua
9zJ8peFq6lJNDulcX6XhauqmESo2dnEycDV1/z86a2/JyMLV1Hmymt2jr8vC
1dS35WQ2bZ4lB1dTt7/6wOLZVzm4mvosXf/lfgfl4WrqH34nRFmYKMDV1LXv
2272qlOAq6m/tmHG39qkCFdTt3llftpfSwmupv6552XjnBoluJq6wILdLru3
KcPV1HUzCjsmTVTgauoPdha8Kn+vAldT559/XqEqRRWupu7BTq1QnqMGV1Pf
9+xAz00+dbga/3d4ybHEMnW4mvqdzsbnN3dowNXUp/2Y752ooQlXU18xZJ7c
tUsTrqb+bFOZ2cpPmnA1ddfUInOuGVpwNXWnG+UZj/O04Gr83/MbY65KacPV
1BOaA5/f2qwNV1NX2yOV8b5DG66mvuvO6Hfz2TpwNfWAvYk1F+/owNXUD9mZ
uzlp6sLV1EeX2nn8PqILV1O/OzLU+3pUF66mrnAh37YpRA+upr7k1Bmj8VY9
uJq6C9dAzfQ5+nA1de/OesPbJfpwNc778v/Y0ywN4GrqX1+eUh65bABXU3/6
/GxJvYohXE1dZe1qi9rjhnA19U/unTH9IkZwNXXGWe6TVnuN4GrqRnFX009N
GsHV1E2e3Nilv9UYrsa+XfDNt+mPMVxNXVxdWSV3owlcTT10Nl/rhUETuJr6
sWnLUks2mMLVOI9vGxZMDJnC1dTVA0SUV24yg6upb887/+PbqBlcTZ3L27g1
dac5XE395inrt6v5LeBq6pcfsicXH7GAq6lXfVtz0UGECVdTL9+d3dY0lwlX
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
aE8Yx/HD1dQvLWmNn1gqAFdT1wttjfaZKghXU4+7pDhgaioEV1NXcJ+mdUhZ
GK6mLvGiXCtMXASupv5D8aZsHZ8oXE39Weo35SIuMbia+gtLroX63OJwNXWZ
fTM/KQhIwNXU/1TVdSVKSsLV1HdtsnZ7KsGAq6lPd/P8xJvOgKupP6lr/bVP
Rwqupl4itnrL7FtScDX1cnHfhPlTpOFq6l/PDzFPv5aGq6mfuBu902CtDFxN
vbf63Z4/kzJwNfVVQYZeQumycDX1pCDDnqXWcnA19bl7T4YM1cnB1dRfXZdp
q42Uh6up+6zVmN0nrQBXU5e11X7uWagAV1Nf/3Nt4M9linA19WELfYNmASW4
mvqbM9G63AVKcDV1Vx+vtesDlOFq6hqWmVwakipwNXUuO9Mx6XIVuJr6u9e3
gmbHqMLV1A9NfeH1zEQNrsbn6/+U7fmsBldT93bKrt53Th2upu7RY7GjaqkG
XE09NDc4ylhCE66m/vtME69UhCZcTf369u9xSvWacDV1wW6jT+42WnA1dcfU
SZfkdC24mjpf+OvkyQktuJr6mUL+rqTV2nA19Qynb6wp1dpwNfX8RU+y5Wx1
4Grq503eaIud04Gr8T2F8wt1RXThaup9fwLDAmJ14Wrqq3mMphd/0oWrqQeZ
P5jtvEAPrsb7NdTZ/bZcD67G+ZIO/nXOSh+uxjm6vPPsvix9uJp6lseyo4kK
BnA19UqDry8KDxvA1ZgDK8d8+LgN4Wrq6uIR1hs2GcLV1E+tlFjP98MQrqb+
8WWm8P1gI7iaejXfG9GkTiO4mrqNTcjW/UuN4Wrqbv94/C+0GMPV1O2vuN9+
v9AErqaur/L0oFujCVxNfZqSXGeZjylcTT3XpbQ8qNEUrsacUXRnmi0yg6up
n/VSslJoNYOrsT4XCqp1lpnD1difUpv5fT6aw9XUu3tedmattYCr8V4+8AUr
/bSAq6m3i7l4LXZhwtXUa7IL2bbxTLiaelFfWvKlCiZcjTnzcRPrkpglXE2d
f3DI28bHEq6mHjOc9XTRKUu4mvoylsp5kY+WcDX1xlNfP3sbW8HVeO+r0k7o
b7CCq3Gv7b95J6nYCq6m3nz44bSDAtZwNfU95xxnysy3hqupK5/OKbfItIar
cd+JH7j97qs1XI3z6D5bU83GBq7G7/JeK9K/ywaupp4o7bNxXq0NXE191H3L
immqtnA19e+bPepfhNrC1dQLTHVedBTZwtW47yo3zk4QtoOrMSevnvF78p8d
XE19u9HEQFKuHVyN/XP1h3rfmB1cTX1zcu27Ni97uBr3wtKflv7n7eFq6jcu
XlVbN2gPV+NcK868xJjhAFdTZ2aqPpt+2gGupi7nELVP7KcDXE3dyzTpy+rp
jnA19alD93vmnnaEq6m3edqkvvzlCFdTd3ZmdzXPdIKrqbNllDtizzvB1XjO
7eP7s/86wdXUk+M03obMd4arqefF3O8syXWGq7E+1qMZl/hc4Grq4j9kBVUC
XOBq6ukL7Ex0H7jA1ZjP8QlCpXKucDX1CTX7C71RrnA19Q7PoOGcWle4mvrM
EnvxURM3uBr/99qrz+0JbnA19ZN9c3Z5f3ODq7Hfvj3v9J3BgqsxH/JWiPZd
YcHV2xnRp/+sDGDX7z622FeZB66mvkwmOSj9Gw9cTV0guHDH0oe8cDV1D5vQ
ivPH+eBq6msGypYHreeHq6kfFj4ckjtXAK6mzjfiLRRpLQhXUy/ZPG/pPVUh
uJp6U8qB/dtFhOFq6vkP87KfjQvD1dRH31h0JA2KwNV4/unT5rX2i8LV1JO6
mxUu94vB1VgH9YxFAwPicDX1lPw/JuVjEnA1de6g5PaDfAy4mvrM4b2i0YkM
uJq6+jdr20xFKbgan1dvCxa8IgVXU/cbSyu4bSsNV2Odn4frXqiUhqupz9Oa
Uv3KXwaupp665N191oAMXE19b3f/35+HZOFq6gkVgqc/6cnB1ViHV2evKzyR
g6upGxoyWImB8nA19bS0M8um8SnA1dRDOtYruF5VgKux/nrHt26aqwhXU9ez
HU8d/KMIV1Mv6jm48dYFJbia+pu4Mf1bc5Xhauq3Xk8WDUwow9XUX7XpOcfe
UIGrqUvV9RY6r1KFq6l/TLnj6q6kBldTN/td3XqkXg2upn59IjRD8Yg6XI19
7pKf8GWmBlxN/bFgnf8YryZcTf3AkFJ61mpNuJr6rGodrogKTbiaukbl/FNL
jLTgaurdRyfCgxO14GrqMkGxO04MaMHV1Lc7cr/5vFgbrqbe1tgSu7BMG66m
XjpgFvrVUAeupq4aaHD31HEduJr6DJ2PyyImdOBq6sP7okKDQnThauqMGR86
4pp04WrqX66ZVN6dpgdXU3fL8tJh3NGDq6lfbLcaO6yrD1dT1/pQ6muUpg9X
U99iXWf7TcgArsY6R9plPY8zgKupn/iv+PLLXwZwNXXXMW12f7AhXE1dsUx7
i/UHQ7iauvSRsEWn/Izgavzfxqx32vVGcDV1iXvrZGvmGMPV1O8zlnFlVBrD
1dQPneLO3j/NBK7GeRzpFE97bAJXU69uinOqnGIKV2M9R2ZaKT82haup/1l8
dzTJ3Qyupr7ayihDr8IMrqZ+RINP5v0sc7ia+grjs+vu15rD1dSvds7Iv+Nr
AVfjedbNbmtot4CrqR+r37BN2IoJV1PPE72+90EsE67GecwIPTz+kAlXY35e
mnr8FbclXE19Z03laeuZlnA19Q9TEnINj1rC1dQLiqTL85ss4Wrqv/b1dT5T
t4KrqQ+dPC25PtgKrqYedeiCZ/ZNK7gaHsiJOx01agVXU18/nj1ZPc0arqa+
bs7pzUVHreFq6rbGVaL27dZwNfWvk1cfTDewgatxH4lcOtC1wQauph4QoRsj
X24DV1Nf6HxiX4uELVxN/W/4kocmy2zhatwL428UGdds4WrqmzrXnN83ZgtX
U9dWC/E9MscOrsY5fWRrr5tpB1fjfPVqz/H6bgdX43u69hwXZNnD1bgHZXIk
fY7Zw9XUTQQ6nlp8toerqXfu2nDnjL0DXE29cXteR+ZhB7iauoFdzRyzDge4
mrqlocrfubaOcDV1T7U3X7kPO8LV1OuYDmoenY5wNe7rNztOqTg4wdXYV287
Vu4+6gRXU7fZmhKz9asTXI3193rRzMt2hqtx768uOKSe4QxXU+dyj0t+OeAM
V+P9fpvfK+jlAldTf/fa/0xTtgtcTX2KWNlVO15XuBrzROeipGGAK1xN3dtV
pzH3oStcTb1QJvDvI0U3uDpdY9MjzdAAdrDywWor/kkWuZp6VE70y8K4fyxy
NfXR1j+M0zu44Grqc2M8xfzcueFq6omrH40cFeOBq6lfid8/Nr2NB66mvifi
hPWWa7xwNfWa8pQnRnv44GrqDWqfqv2W88PV1Lf4nIvkdROAq6mHRJ17Zaot
CFdTN34dK9IoIgRXU7cyiJ0yMiwEV1O/EX0tNbNbGK6mfkb0m86jDyJwNZ4/
uVBieZsoXE3dpD10Y1yrGFxNXaZbZqPSO3G4mjp35QFT2y4JuJr67MiA4le/
JOFq6uWLxs9vjGfA1dR5Nj38zhaTgquprxYPfO2ZIQVXU3e783xFuqE0XE29
mHEtS+eBNFxNfYn99ev9XjJwNfUL4gsOjXySgaup38/hnzUtThaupr7tpuLf
Wnk5uJq6YEH55YzbcnA1dfk9aiuyFsjD1dQvp1nY/hiUh6upp/p8tNp6UgGu
ph4bKhg83VURrqZuYbT4w7wuRbiaulh1TE7mUSW4mrrsq+4GQxdluJp6vbN+
yO8eZbga6zy8bwtPpgpcTb1D3EtqnrcqXE19wcRV1/d8anA19XWTN0WvF6vB
1dRtPdccLI5Vh6tx3kPvlIlZa8DV1CPCosrP/NKAq6kfUrpRZf+fJlxNvXtp
ikH5A024Gs9pcGs0VE0LrqZu3ztrjm28FlyNLnBCQ/OLFlxNfeOH0u0mntpw
NfXdAv1hfre14Wrq4fMdf15S0YGrqbeP3GJI7dOBq6n7P1j++uwPHbga56LH
xc3LXxeuxn4+xfZTfa4LV1NPuOmrK2anB1dTH+Tyz1O9rAdXUx8PNR3wktOH
q6m7DKRPntuvD1dTV28JbpIe0Yerqe+/67fzSrgBXE19a4r6vyWdBnA19VDe
UH+mnyFcTf2p/YcM/VpDuJr6gLJKmauHEVyN9xtc8Dqm1Aiupn6ixLKt1tEY
rqa+6KFa68y7xnA19T9Sg28+WZrA1fj8af2mczdM4GrqYZF6H+LMTeFq6lcn
fP9szTeFq6mPKMhonbIwg6upt0ndW912ywyuxtyoPVLhbGsOV1NvaXo/51GR
OVxN3TC8b2QlywKupv78dP8b/QoLuBr3S87haAEDJlyNeVI4U/5QGBOupn5y
bdniszeZcDX16U7xLu5/mHA19UgX+aebXSzhauwTVcEBtz2WcDX1aLOW5yde
WsLVmHuRInO2S1vB1dRTMlW2/V5iBVdT5zXa7z95yQqupi7nU95/8rsVXI17
02CK/WN7a7iausehWPvtu63haur9rq9+Pa+xhqup/+q9u/aykg1cTf2DyfGz
0mts4Grs28PPTzBu28DV1F+nPph3jssWrqZ+sbmi/tFcW7ia+vH+mSoRZ2zh
apzfAxkWN/ts4Wq8rxAJqd0udnA19ZK40fLPR+zgaurx9dentbyzg6upp12O
Ob3Uwh6upv4qLPN5VLw9XE39QUNIrUKjPVxNfe1L7RtzDRzgaurph4XXyW9z
gKup+55ZJhLxygGupr6i3T9hsa4jXE09O86tr2GLI1xNvVLR1fb9K0e4Gh7L
P7Jmq74TXE194dWA3dnbneBq6hOfuw4FvXGCqzGHH3juvmPmDFfDUROPQlP3
O8PV8ANfkAd/hzNcTT3r5moFQScXuJr6UFTnh4xUF7j6tnlc5+zo//+/O6I8
h0L+wtXUN/dncycXj8DV1EM9zXzUFcdY5Grqs67GHTgXN84iV1N30970WaZn
gkWups4MWnNj24p/LHI19dH9O9N6I7jgaup5e27Nk7HhhqupG/VJGd4d54ar
qf8Xpe1W/4IHrqa+tEr9TvBpXriaemzNRO7mKD64mrpwdLQ7nyc/XE3d+1Pf
GRETAbia+sltp9sOSwjC1dSflIcpHfwjCFdT11ghuvXfRyG4mvpF2W6VgdfC
cDV197O26iteiMDV1PMvfj4364koXE19/rHrpfnlYnA1dcN4scyjT8Xhauos
IXefvioJuJo6n/R/vM+aJeFq6s+aJLrENjLgaupW31MCYyYZcDX61V4h1cNS
cDV1zwu5X7iUpeFq6leOzhbRzZOGq6lvumK8e5+bDFxN3eLn0aV6jTJwNfXv
OZezecNl4Wrq46e2R2kKyMHVWJ9wxvNtF+XgauoeE65FclPk4WrqBYU1C/o7
5eFq6hs611/k36cAV1OP67t/199YEa6mrlthcupnvSJcTf2DLnPZ021KcDX1
iQYFsWYDZbia+oVRtTuGTcpwNfXP64IDi/arwNXUH/bz6CY4qsLV1JfEdvOn
96vC1dQDt0zKfrmsBldTNzFlLN8QoA5XU1epaP7OUtGAq7GfH4/UzWnVgKup
b2PwHqry1ISrqbcsKO5k5GvC1ThHh9/+jmFowdXUvz5MrB7doAVXUzfV+xl2
rkULrqZuHKjctspNG66mLrpfSW3mZW24mvp2h19OnuI6cDV1/obTjpGxOnA1
9aFYEY07HTpwNfVeK71fCp66cDX1GJmqu6fv68LV1DumNESz9PXgauob1YTM
eU/owdXUw30tv3/h04erqbePC9/ridGHq6kfvT49SeKbPlxNPf3E0W0L/A3g
auq3Uw/tuffKAK7G751fn+c03RCupt6/4M/I+4eGcDX1Bum9Gy5ZG8HV1KsU
JtQOXjOCq6nfEH47eUTfGK6mPlKRolJwwRiuxn2x9eiWYTUTuJq62A0r9WWn
TeBqzNU1rRKflEzhauqlJi3zEjJM4WrqigZx3d7KZnA1zouV6Hu7TDO4mnpE
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
OF73Hq6mvvu37+/fXR1wNfXfK1apz4j5CFdTryhpNnCV/wxXU5+I5LnQ8rwL
rqb+btmkgnLiV7ia+rGKu0o8q7rhauoPJb9aHpvdC1dTXxFk1Fvp/h2upn5g
zq/aK3N/wNXUZQ68tDp59ydcTT08yfD0jepfcDX1Xv0rnzL7BuBq6jk8tXMD
5Ibgaupz9LPUhz1+w9XUd3Rlp66O/wNXU3/R/OZX9tNhuJp6R3lObDljBK6m
XhmtuepW0CiLXI3nPFX0Z9OTMRa5mvpQ6pZIOeMJFrmaep5hr8ShjEkWuRrr
fIEh1CvEBVdTD/B52xL3gguupn6yMjx9axI3XE39bY5q0Gc/Hria+t1x8WUP
9Hjhaup9ncZnx4d54Wqs51J9j7xaPria+jrJ7dEVOfxwNfWDYzHsuQkCcDV1
SRudmqnrBOFqfP+JQNushUJwNfWRDe9PRE8Vhqupy82REM23FoGrqTeusb+1
yEgUrqZem7AuK1xHDK6mnnU8heunljhcTd1bZWlnh64EXE3dSWF2IMtUEq6m
frhw8St+VQZcTf1mVXuLdhYDrqYuLWPcHmsuBVdTd7x99RP3Qym4mrrbhiv/
nsyShqux/rxLXUrapOFqzIEpfVe+r5OBq6mn7FjtuZBXFq6mfry02HHolCxc
Td2Gu2XbSxs5uBrrvGmvRkudHFxN/V7tNku1CHm4mvqRNaseZUgqwNXU16RU
N3gVKMDV1MeabbY5+inC1dSvaQk8XTqpCFdjP/OcLCrMVoKrqQv2Gq+d7aMM
V1PXXDnQLsutAldTt3IU1VK4pQJXU59Xtct9/ipVuBrv18jT+4mCGlxN/Zyv
77x1tWpwNd57xPoF3gfU4WrqAz+XrQyZqgFXY31aGw8+/KcBV1OP/+nYczFA
E67GfPPtMthbpglX4/f+MdkTr60FV2OONT3lPr1PC67G/XV7eU5dtxZcjXmr
dH6ntrc2XI39Fm9wKPmuNlxN/eOKw7XKajpwNXWVKUsWlO/TgaupN7xRVtn7
Qweupr5TytN81RJduJr6F8egY8srdOFq6hfH38yKtdaDq7F/9ggsy72gB1dT
P3HQr26UoQ9X41yv1c4JjteHq6l72Rf1/RzQh6upCzesOZ8WZABXU78wsP7F
4lYDuJq68xSJdfZzDeFq6t1rtiZbPTWEq6lnanx0mO1sBFdTN5qzLmzHbSO4
mvqmfy5mr0yN4Wqsc3rYHpdsY7iaumyV2IYKbRO4mvrlAjPudedM4Grc458b
rZhqpnA1db7tPOKMTFO4GvPH+maqmKoZXI17YU19rd4ZM7iauriJT5m/hjlc
DY8FqK7Pv2gOV+N3FYq/UzOwgKup11VxS+des4CrqXemfDmYo8SEq7E/zc5F
HlnGhKupF3EdfTxxgQlXU1+yTiF+4gsTrsY9+DUt/7CpJVxNvZ4rxOtqtCVc
jX24/kuAT5ElXE09ihH07QiXFVwNn/yx7/adaQVXU5cIvbE6L9kKrqZe8ENx
WXKrFVyN75lf2sirYw1XU2/O6qnhX2cNV1MP9OqYnVZoDVdTFxX85HWXxwau
pv6y26o1cK4NXL0o4dTtGZf+3883liyYtrkSrqb+tWcNw8+qCq6mHmcxi1ls
9Qqupv6ot03wYXE9XE29lrF/jztvI1xNfXD6vTt/w5vgaup+c4Mft4+0wNXU
hxVF67/ntMPV1E8ZpfIwt7+Hq6n7drAe1hd1wNXU53T9yMry+AhXUy/0LJgj
1fUJrqauYH7bWfFEF1xN/bHd8L+iRV/haur6zBXaw0bdcDX1u1G3TOokeuFq
6gfsUy9N5/8OV1Of13GasVj8B1xNPV5Ub3xPyk+4mrpTZMIP45xfcDV+1xym
7oXKAbiaemz3nPYv/YNwNfV/6YkLx9V/w9XU5ZIMXnf6/YGrqbsV1KaczBiG
q6k7RhY3qX3+C1dTL9p4s22j/SiLXE1dN2jgXWbKGItcTX1Hko962t9xFrma
+tYjzNYVayZZ5Grqbz9Hz5l4+49Frqae5v2ixTafC66m3v21SmdRNDdcTd1G
MinrgxMPXE3dRfvK5gZBXriaekvZxhLzVl64mvqb/XrJQ/l8cDX2w6Mb4roJ
/HA19XHp5gUlwQJwNfUGZ9O4stmCcDX1qmzxK2ZWQnA19RGdq3186sJwNdZ/
x3CYh4QIXE3d0LCSNcAjClfjvdQX7BEaF4WrqQfxGfgkjIjB1dTVS1e+2Dgm
DldTrxDYwF3FLQlXU5cuURf1EGDA1difUc5SbxMZcDX1nBW+57MVpOBq6g/C
0p9dvSQFV1O3b9VM+mApDVfj+0/+EvB8LA1XUx/dMeLS7ysDV1PfclzataJb
Bq7GerrxyDbukoWrqftnbKlVUJaDq3Guz8htOXZXDq7GPgkO0JziIw9XU7+/
obpOf1AerqZu+vpR2tQTCnA19dyQfTtSHRXhaurfdZamqnYowtXUDSzCP7cd
VIKrqa9gVm99Za0MV1N/v3nXqtEOZbiaurjLtlz/ZBW4Guv2ONN/cIoqXE39
R+bt3eW/VeFq6peb40wq8tTgauoyxlkruVerw9X4v0ZPmRvUNeBq6skxa7JU
2jXgauoif7hXT3hqwtXUX4Ts9jl4XROuxvfvW3HFXFILrqbOUGIH/ozSgqup
5/8oPlLzRguuxpzvCDWpcNKGq6kLf33j3nZeG67GvLXf3S4spANXU/8zv2/Y
N1IHrqYuqJJw9mGrDlxNfVXvs0bXabpwNfWFV4TOt9/QhaupR1bf4D+hqgdX
U3+ZJC0aekgPrqae93HX3SUjenA1ddcUd5HgEH24GnPPN1PiaJs+XI3nbHpW
2eBpAFfj/m0cdLIqM4CrMc8NfdZdtzGEq6nbvRdePS3XEK6m7sG21x3WNIKr
qXv3DRY8SzeCq7HfPs6XuyllDFfDP6lL5907bAxXU08dUQxpETCBq6k7nNq3
Wn6PCVyNz188NSOSyxSupn7h5yyFLztM4WrqG3V3tmyaNIWrqUflayTr7TSD
qzEP34u4/+Ayh6up9w4q/WncYw5X4/4y1MxvErSAqzE3nvREDB2xgKupGx/X
1DwpzISrcS7WDkhN9WLC1XBC+XPJbceYcDV1VuakytQmJlxNfZFGn8NJFUu4
Gvvk3Je1W1dawtXUOy6z83uzLeFq/K7hWaK9/ZZwNebMae/dm+2s4GrqZz+c
lkvdYQVX4x5ZEVvpWmkFV1PvEtc9FcOwhquj0s81ReUFsN+Z7c94K3sPrqZe
J1jP+2D6Q7iaekvog91r48vgauqjWgI2MleewNXUX5ibxXxgVMLV1JczXM6/
Kn8JV1N/H8sl8uV+LVxN/dEOyXjpbfVwNfWrlqkhlcWv4Wrq5zX9Oo9rNcHV
1PdcyROKzWmBq6lvSt0yEeXbDldT39fm0X5A+z1cTf33rvPL3iZ0wNXU9Wx0
2nhkP8LV1IuubPpeeOMTXE2dtahKc3xpF1xNfUmk5fgrla9wNXVvRraATd83
uJq6xkqFCsPaHria+q5rAaX55X1wNfXnPj6xFRX9cDX10OYPdvfX/4SrqXf3
F6Y07f4FV1MXZSkef3RuAK6mbpjTHRX5bBCupu4RmhHdNzgEV1PXbVN+bWXy
B66mbqndXe8eNgxXU9fuE7qucecvXE39CL/IxQr+UbiaevqkUL/DijEWuRq/
t/hmTeyTcRa5mrqKoMv2XRaTLHI1dWXJTQ6Lsv6xyNXUGRtXqI0nc8HV1Ed2
7Q+w9uWGq/H8swf+1anwwNXUh3jvqLz5ygNXU1c3vfqKdZ8Xrqa+xnazg1Qi
H1yNc2p1OnrWGn64mrrn9kWnvrkLwNXU3fweVfXrCcLV1P8l3tNeKiYEV1OX
kR98wBwWgqupO1/5eyP8izBcTZ1vnpoao00ErqaeIJOgptIgCldT37jBrjqx
Vgyupv6HZ9B97StxuJq6wFDAudxGCbga7/3iwF/f95JwNfXriVvvWscy4Grq
Z+Y/EYz6x4CrqZeozt318ZAUXE297QiX6UFFabia+t0zeQqBV6Xhauq3vojO
i3SSgaupF7a86CyolYGrqV8Y3dJqFCQLV2Of6JxxfzMhC1dTf1l43vRuuhxc
Tb313fvzL2zl4WrqOx6cvSb9Rh6uxnu/Irs0OVYBrsa5CA58OFVZEa6mfiLg
ZJNRmSJcjfn28mbR9LVKcDXmSXdGZJq0MlxNfYabqaBqqTJcTb3zjkVC0zoV
uJr6pfYlPBXqqnA19S8Mnx099apwNXXb29eEph1Qg6up283vvdbgpg5XU5do
jo9N+6sOV1NfV9wQefSOBlxNXVwp/fVyR024GveL/vrjyRmacDX1sIy9o29H
NeFqnMeL4VLTlmnB1dT5s268fVamBVdTvzLr1cpAPW24mnp5xvQrSoe14Wrq
kaL7bvT+0oarqddk/N3d8p8OXI3PN/PqdzzWgaupr+bhPctjpgtXU2fKz/nJ
SteFq6nP/GCknc6nB1dTjxL/4iAarQdXU187vdQxo0MPrqaeYd1vNHWePlxN
XepMloRAuT5cTd00Svz7ZysDuBpzrN3z5fvLBnA19bH5u/IGlQzhapyX3Ecn
dI4awtXU4/UVk9bzG8HVOBf70jIa44zgauqL5VxLFv42gqupR5QJTf5abwxX
U+9Q/7kip9sYrsac2fupZ1uQCVxNfbdUzfmQjyZwNfWA0uQD0StM4WrqQlFi
WWkfTOFqvC9uxbE3AWZwNfWF8/YdY3aawdXUYxZohl9ZZQ5XU59Qu3HU/qs5
XE394d9fXJ/DLOBq6huCLj3N+2UBV2P/KxVHzHBhwtX4nnLJPI9dTLgaPom+
kPb6KROupn7N4IlNv7AlXE09U+PpgTRvS7ia+n9vfx6rPmEJV+OeNUlZmPzW
Eq5OzM4aOX07gO2Te2DR6YEMuJr6ux715wXNF+Fq6t6Phnru1OTA1dQDecs7
87/fhKupv99QHOO/6y5cTd2gd/3g57MP4Gp8T6Ki8FXdMriauohTRGkd6wlc
Tf2gLVd///kKuJq65OLxDr6ZL+FqPL/riQ+ytrVwNfWLD4TSGDb1cDV1Q+Wf
3GmRr+FqrM/8plcqdW/gaupm/91XurSgBa6mfu2J+7Dp3za4mvrvpx+2Pyh7
B1dTz/63ZIX+og64mvpYyrK10e864WrqmkX+76fEfoKrqX8PzZ55QrMLrqbO
dXyv6bq3X+Bq6lV/TCVe5nyDq6l/02mMvHawB66mXmmW1yS7pQ+upr457HMZ
77Z+uJp615H2ZpcZP+Fq6i0bLY89/O8XXE3drzRjzuTGAbia+s3v5dP5Mwbh
auoabztK6p4NwdXUu4Pv/1ox9huupr5F+KT6PcdhuJo6O+S/+Lpdf+Fq6j96
wxbdrBuBq6mL21a3LjQaY5GrqR+/LDKj/NA4i1xNXfjVnNaBoQkWuZr6wMdZ
VT3B/1jkaurW4nl5jVFccDX+r8h1fwUbbriaemh6+PGSUW64mrrewObwymc8
cDX1OfEWArYneOFq7Ku9xdsEQvjgauorrql0O0/hh6up/ytWDH2jJgBXU5+q
N0/59aQAXE3d6aSFnO1nQbga63/2T8xYjRBcTb3AotBPv1gYrqYe5Lzozd18
Ebga6+Z4RDj3sihcTT26oEuC94IYXI39UPXkX9l5cbga8+r50j+fsiTgapzH
o8Vi4dcl4Wq83/TAfNNlDLga33NNgaupiwFXY06GTxcqiJSCq6mvTT73umxC
Cq6m/qTp2XqeRGm4mvry6dO+xKrLwNXUHVameKgXyMDVOHfBipl/Z8jC1ViH
g3qD/B2ycDX1Y8qj/0fVXQcF2e3h3qe7uzvtDgwQERVFFEWxwQ4UMTCwUEwQ
RAVbVFCxwQADkRAQMOgQi5BUuhE8zzvzXtc+59/vODc3617rtz77mT26wH6P
Kl2Nbp2fVPBSTY2uRh8pcsnH7bkaXY1+NO6Ys9V8dboa3VPx0NqpXep0NbqO
/abUY9c06Gp0DUEdn54pmnQ1z/tep+CbDZp0Nc/Xi1iVfZe16Gp0kXstCv7T
telq9E3rgoM/dGnT1eily+RuTnqgQ1ej5+4qdKx106Wr0fscp19PVdejq9FN
ZkdFFGTp0dXoj9qmrdEK0KeruR+a9TvfmxjQ1eij5YtvX/MzoKvR3c8W2AX+
MqCr0cPOny88P9WQruZ3DDu76vU9Q7oaveK+VVOnnBFdjf5+Ttuh2duN6Gp0
zQwT/aQvRnQ1eryYcaajrTFd/b970Dag5Z4xXY0+O+zz2qcqJnQ1+isDuZWn
DpjQ1eh388cd9q0zoavRdZcFfQxyNaWr0WceGDP1RaopXc15NcKtrXukGV2N
7vXW4tuC22Z0NXrxq4fCn9XN6Wr0cAuRzW4nzelq7s/DVoYyfeZ0Nfrjz65G
OVst6Gr06Dtu3k+qLehqnmsnR6OHyy3pavQXCcr9kwot6Wp0+zc3Q5pm96Or
0RO+lK0Zl9mPrkb3ORsTHmbfn67m/p/bPVsvuT9dje5ywm9brM0Auhp9fZSp
wsa3A+hq9FkrIvuPtR5IV6NXrsjOMEwYSFejRzxa3mxiO4iu5j1yTOaObcog
uho9xtf/z57pg+lq9OtnTmZ8/DSYrkZPlV1442q/IXQ1+gcf54fum4fQ1ei9
kw9KP30yhK6OjLmrk/r6v/+de/DZzgctk+lq9IPjdAYdL91AV6MbmS71uxVw
kK5G771/eeWAuEC6Gn3j+fCEwPALdDV6ueOcwrXSN+lq9ANbh0u0l0TS1egp
J7ufvnGPoqvRJWUc7wuUPqOr+ZwXiUHv617S1ehj75b+1Tz0lq7mn/+infQ3
O4muRp86I67guUUqXY0uqu/iY5WSTlej31czrQ2485GuRldKXvKgsCqLrkZ/
7SrwN1svl65G3/1j4J6YXfl0NbqcRZHV0bZCuprrnB/nZBvyha5GP/Le433d
gm90Nfr4Qf2KE/V+0tXov164B4iGl9LV6J739xxKHFNOV6P/myBj3f6jgq5G
dxG+bxdxoZKuRu+48lvlw4pquprvv2jjkM0Ta+lqvn9aupp//990NXqzRYy9
cb96uhrdrqn9mrZuI12NPmL99bjygU10NbqJg4PVhqnNdDX6y6/bXB6vb6Gr
0RN39pvx9FwrXY2eKint6v2+ja5GH3Zt8otOkQ66Gj2w8NwdK4dOuhr986q5
7uMvdNHV6Lc81xv01Xdbw9XoRQKu+gdn/bWGq9E9Voy5kBTTaw1Xo9d7v3mX
Yv7PGq7mex7Vang3W4CuRlcIeRcoriRIV6Nvv3f9271CQboaXaU6sePRDSG6
Gt3PQ7pLeYswXY1++veQ3mJbEboa3WxmrL6glihdjX5vaJvPiTZRuhq96oLy
wG35YnQ1evEKuVnxL8XpavTu0mddG25K0NXcb6vvOewOkqSrOX8S1iyuOShF
V3PdskfZv/aWpqvRdwpNMG3YIkNXo9t+8lI64ilLV6OPGR9hvm+rHF2NHrNs
z/7C3fJ0NfrMyjEaGbYKdDX6Xtkt94szFOhqdN+7u49ouSjS1eiKw4ufBJQq
0tXoQtl91kO2KNHV6FlBU8eKCirT1eh/Lvbekz6nTFfzu29yvTHZUoWuRp+s
tM/iYYIKXc39OWv/zGmLVOlq9LaSJZqq7ap0NXrSefHLyufU6Gp0ixeLv00e
oU5Xow/5a/L7VoE6XY0u/003d6yPBl3Ne+FNw9V/hpp0Neew5nDXjgxNupr3
xVNPWUNvLbqa5+idTvpeY226Gl3D7EaoVK42XY0uc2iub4afDl2N/mTPnnNx
Y3TpanSDopklP+t16Wr0WdFNbqPv6NHV6C9CDw5JcNenq9Gdvx28N0HegK7m
/peJ9Xi22YCu5vfNXrDK7rMBXc177XFW6J8hhnQ1+s/MY5JRZw3pavS43pJE
/w5Duho9uswk5eASI7oavbbxiUZQkhFdjS544nNijKUxXY1uKPEmpSPYmK7m
On+JsXTuMaar6ZkTTc0pq03oanSfvEtmc7NN6Gr05Nji9K4JpnQ1+gO/T6Uv
75vS1ej+DWe2ndUyo6v5ffWt/I6eNKOr0ackZGmc7TGjq9Ed5ZeOernJnK7m
ufjzvbTzpzldjS7c4GTg7GJBV6MvXBve/i7Dgq7m9/JJXT9nkiVdjb5kyPX9
HS8s6WrON29Fq9ih/ehq9FHj2q6fvt+PruZ7ehu8OGzWn65G3zpmhd/pm/3p
anS9mMNSsfoD6Gr0K67TnDquDqCr0ftnbFowR3cgXc39LPTAPOXqQLoaPcPl
+Ttn/UF0NfqX/aOGd98YRFejz3tUsPO16WC6OjnlkXVj8n/z888zraZnx+lq
dE+nsjeWO3bR1egnpszIaV/uRlej77KaopM1z5iuRv/yR8L/4oJxdDX6VuFB
RkcE19LV6C2Oey59+ruPrkYvCevTbjsXQFej73h3draG7Xm6Gv2YgeM3+eE3
6Gr0wb7HYueU3KGr0Wu+WrZ+ufiYrkbvyhyxbNHoZ3Q1+smF1UqtA17S1ega
PVM03z6Mp6vRb37b1PpjSRJdjX5vYe3OfZEpdDX6xo+B01+NTaer0TfMtDt/
QeEjXY0+RX78lFOhWXQ1uvVWNZMbaTl0NfrkR0c6j2vn09XoRSteZk05U0hX
o//wefeiqP8XuhpdTurWK9vqr3Q1en3njO9+aT/oavTgmTkqWatK6Wp0B4FZ
WQ4dZXQ1+kfjc0bDL1fQ1eghWXf8T8yupKvR28LPn5ylXk1Xo0dZ+F491FBD
V6N3W56bZFZcR1ej+3WptozN+0NXo8+IWDUw/mcDXY1uILXv+cJ/jXQ19//Z
WCVZ9Wa6Gj1h4dsNu0e30NXoEyb4dV1za6Wr0XdLn+zed6aNrkZXra6JVPvY
TlfzXD+fa71eoZOuRl+9Rb5zx5Iuuhq9OqBPZkJ0tzVcjX50ytXYeLm/1nA1
v2OV8NCe7b3WcDV6pEZ1dHN5nzVcjd4n7fQyZ6AAXf2/8xKQL1kvQFejV67e
lX7tiSBdjZ7R/CAq2EeIrub7dJy/XTZNmK5GT5PenRqsJUJXo486v6J/WKMI
XY3+bLlVo1SmKF2NHq30anD+XTG6Gj3oo6dIX4A4Xc19Gx5//Mh2Cbqa39fw
R8FGN0m6Gj0784dE9Gwpuhr97M1bY1ymSNPV6Jcv/j7gOlGGruYcVp3W+Wqc
LF2N7rTS+PXeCXJ0NeftoKTSq5Pl6Wp0m73XbeXNFehqvmeSw/IDjxToas6N
u1Pn6o9RpKvRnwv97teQrEhXo7dW7W6un6NEV/N7tRjE6JUp0dXoYdv6fPdv
V6ar0TWv6q6Qk1Shq9G9Enau+BSmQlejF+xpDYwfo0pXc55Xr2/5nqtKV6M/
zrtyebCXGl2N7lNjczZKQZ2uRh/0s/OX+xN1uhpd+9H8sMnzNehq9NSnJRku
fzXoavTy6s5tFyI06Wp0aUn529JOWnQ1et7bzR6Pe7Toaj4nxzXn8D1tuhpd
17Gv7PhiHboaXSDy4N14OV26Gt2ktWmI6TtduhrdWdjFL85Hj65GXxx49ZHf
SH26Gv3B0qhX+5r06Wp08RfRxbkLDOhq9Bz5t3MEXxjQ1egHIr46TNU0pKvR
t8Quz7jlY0hXo1/0DM3X+WFIV3MO16V5PZhsRFej35o7ImLeXSO6Gt2wVmWr
qoIxXc3vqHvlZ/1OY7qa63aprfXnT2O6Gj3J1f5ZnYMJXY0uEf3AWD7GhK5G
N1tvM22GkSldjX4lRcn8epApXc3ze3FQimyfKV2NPsblgvm5TWZ0Nfoh9Vlz
h383o6vRh76e6ljnZE5Xc/9XemvFJZnT1ei1mmlvb42yoKu5bm91bSPvW9DV
/L6jFt1ONrSkq3kfVbo0dVywpKv5/tMrzKco9qOr0Zd25sy6f7IfXc33j6/Z
0E+0P13N979eezDpYH+6Gv1+fXDItt7+dDW6mlPowwk+A+hqPicz8qNB9wC6
+nve0xVaH/5zwjDf9aHBj+hq9MPOhypdu27T1ejeu5vlRntfp6vRQxybs3co
hNLV6Cbzdge+fHOSrka/rL/65ZdlPnQ1+jdllYUvilbS1ej765KXONoNo6vR
U8vG7lTbPISu5u91+UdOz//395H9/65Gz16nFLf64x66Gt0mZsnHJteTdDW6
3u5La09nhdDV6Ff2S1sUO12nq7kOPYEbOz/cpqvR08J3iT1e/oiuRv/35ne7
kN9Tuhpd92SfoPDKF3Q1uuuYhTJfP7yhq9HnZq+ySv+ZSFejZ3iemRZikEJX
ow8ZPnJB3q33dDV6XMzW48e3fKCr0UM3KPcutMmiq9HrsrtWDNiYQ1fzewVH
Hox7kUdX87vP+LRM2rKQrkY3SlMW0YorpqvRT8w03lHj9ZWuRj/y/fGzPQ4/
6Gr0Ucbx7lVGpXQ1erXQ0Nkt0WV0Nfpx2QER7s4VdDV6bd74kmEilXQ1eqWN
2Na1aVV0NbrU28kV/y7X0NXor9Z+ePDXt46uRj8gGzpl2e4/dDX3re0Lc9ND
DXQ1+qrbsb8sPjXS1ejnj8jPay5voqvRL1T10/IUaqGr0V+eqdoaZtlKV6NP
mf76wuGFbXQ1+iOj5ynaZ9rpavRDJfuHr8vtoKvRlQyXaa/X7aKr0T8VjozR
29JtDVdzHVyPjT+R2WMNV6OPfbCtMnJwrzVcjX77TVzdvit91nA1+ny78kki
kgJ0NXqp4YetJu8F6Gp05cT68DB/Qboa/ffdbY075grR1egfH83fdkdfmK7m
873XTh3RKExXcy6JORzTSRGhqzkH7HY6ul0TpavR8/ZOePbPR4yuRj9ZmpDf
vVScrkafLfU3c46dBF2NnrglIUpksCRdjX6xNuaqsp4UXY0ubOT2YL+iNF2N
XiWj2j5FUoauRh/pJn5uvagsXc31EbYNqxGVo6vRC3zvDkmVkqer0Tus9kf9
k1Sgq9Hv9a6PyDitQFejy0k7C7zTVKSrOQ/ll2XVRSjS1eiq58INbIcp0dW8
14ab9aYmKtHV6OMzC732zFWmq9HLH1w4uaRKma5Gn/d59NxN+1Toau6Hvq2F
D1RV6Wr069IdRtpRqnQ1ek7n8kkvZqrR1Zw/lmMn+tWp0dXo+UG9JgcC1Olq
9Pv56oJ3B2vQ1eg3/Mu+CeZr0NXo750jU0/s1aSr0VvFIlJtzLToavQR1QI1
ZjladDW6YcqXMeMPatPVnBuGExMPDtGhq9HN3SxOtZbp0NW8X6qP3Tl/Xpeu
Rt88a7z2hll6dDW64C61lo3i+nQ1un5y0dirSfp0NXq/EO3ePmsDuprz6vlG
/bQwA7oavSbYQvKOgCFdzT8veP7ttRWGdDXn0p/WqY9SDOlq9O/rd9/JtzSi
q9E9EuaVqwQZ0dXox/yiBDzajOhq3mvhj0VKlhjT1ehNWze3uqcY09XoGu+E
8gUGm9DV3G+NPvdjL5rQ1egDfpftPSpqSlejr3W2mrVpqyldzfOyc7+Jx09T
uhp9+o5bIoedzOhqOnBCWEv0WzO6ms8Pd2nvHGJOV6OP9nyg6BpuTlej96zz
dfisZkFXc93WPri1zN+CrkbPXfbPXEzQkq7mnPSwL0jZaUlXo0+omvr8aoMl
Xc3vtf5d+ql1/ehq9F0/vTVCy/rR1V3lL47Y5f03t+P87UcvT6Kr0cu++qVp
xsbT1eh/hAcYV499SVejq9vej/5u/4yuRq8UTGkSiXtMV6O7eTlURvXdoavR
804X6GW63KCr0X8cFEp9deg8XY3ufvBacIroKboaPXbZmM4jUfvpavT0fcsv
OrWupavRr+5Y8SfJfyJdjb7ztK3gIWN9uhrdcLjTvmuFy+hq9PbDBleUQnbS
1eiJmlNEBsgep6vRB9t3qBycc46uRu+aPj5fJfUaXY2uszVIcviTW3Q1urNb
bZyt2kO6Gj3HR8rkRtoTuhrdpsN20NXAWLoa/eMskY+aP+PoavSVVW/DZZcl
0tXoo3Za1jsHv6Or0T9dzf35XfI9XY0ekhl55mlaJl2NfmPlLrXcjM90NfqO
kkNvwiRz6Gr03EX+q/fNzqOruR9MEo8Kvyqgq9GnjgkzGm5fTFdz3URjx8i2
ldDV6PcGx6aeSf1OV6Nf1xy7asW3n3Q1uuWWZu2cdWV0Nbqm2zWxi6IVdDW/
u4VnWOzTX3Q1esmZ526DtlXR1eiyXeXJvZNr6Gru86HBk8zM6uhqvudunzmR
mn/oavRpU/03+Ok10NXoClIbfZdeaqSree4CsqaaPWqiq3lO+6KTrmQ009Xo
Aq9+9U9saKGr0WfXfYs7q9tGV6Mvy7/7SGVeO12NPlaxY6zd2Q66Gn1vitJ5
o5JOuhp99Zfa3sf9u63havT9FvK3f/v1WMPVfJ+wJ6lFlX+t4Wr0jRsehG6f
02cNV6MXye6emfDunzVcjV7+Vld+2XUBuhq9Ue+HwbMVgnQ1uu1AK+8VlkJ0
NfoauzeW61uF6Gr0Y4ofXN4nC9PV6B6q11UOnhehq9H7m0w/eNpTlK5Gz//5
8EnXDDG6Gr1gdEDK6wHidDXPUdHunAJFCboa3fhuRbNDjwRdjb50orKNRo0k
XY2uN8M0d2KJFF3Ne0FRJSU+W5qu5v2S92TQhQ8ydDX3uc1ji8xMWboa/Uhx
cOaCz3J0NbrTyvjBEwvl6Wr0DpNXo956KdDV6FJ+a2fJdCvQ1XzOlPINR/0U
6Wr07+nqFwYqKtHV6F/lvpcKXleiq9FHf+2dKzxUma5GF24b2D30nTJdzbkx
ReXnqYUqdDXvHXl7RfUmFbqac0Nz2sWPJ1XpavRfJYGHo83U6Gp0/cj9JUnv
1OhqdI2ijQ8EV6vT1egr2i8JbhbXoKvRR9bYVIo/0KCr0R20Dq/+7KxJV6Mb
Xd958l2PJl2NbrLG1K3qthZdzfV09msaPU+brkbX3rJveoywDl3N+aNQt3XF
cx26Gv1v84Vd49fr0tU875vsVtvp69HV6DL+VybvKdSjq/n7jrDV+x6sT1ej
97Oo+Dfa3ICuRn/UurDr/FEDuhrdxTxeQL7KgK7mPrw8RfvqNEO6Gn2up94s
2/uGdDX6DI0t1/rkjOhq3i+eixVzthnR1ehPk7rvxxUb0dWcS5Xu2+JtjOlq
zlXbax6FkcZ0NedqecwVcSUTuhrd8cQDCae9JnQ1+sSY3c8fVpnQ1eiX3ihF
Gs8zpas533JW/4pKNKWr0RepLd7qMsSMrub9eCdvruJ1M7oaXfTho8AKBXO6
Gj1y3Vvzz4fM6Wp62KbQOLvNnK7m/P+UcKx2vQVdzflQb+Oq/cOCrlZpeRO5
+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
U8mrrXQ1+iqBgIUan9voavTZh2Y6ZEh20NXoIXYH4/QdO+lq9C/fp1RqXOyi
q9FfTFzV+/xPtzVcjX4+asboDoe/1nA1+utKtfSvUb3WcDW6Upd/1Rr9f9Zw
NXpNVGC5wwwBuhr9nk/bxxHSgnQ1ej/P0plenwXpanT7iYp7BC4I0dXom6K1
PctWCdPVnJNaW6aojxKhq9FPZsxXC5MWpau5Pj5N3bt/idLV6Gmp42Qik8Xo
avS/J6VXWt4Wp6t5vhYravQFSNDV6DI1RZPNdknS1egBa9P7bqyVoqvRn7eZ
unstlqarOccE5Q6fmytDV3M/39+3V3q2LF2NXmQya3XBbDm6Gl1KZZRLm4s8
XY0e11Ex9NlgBboa3WrQxLzzMQp0NdfTzunqrf9uU7gaPWty1IVvGYp0Ne/f
3Opsa1clupr7cOWWeR+qlOhq9BmLH/U/vFuZrkYvnNi9YpWsCl2NvvHrZdEt
4Sp0NbrL9ky92+NU6Wp0hdLol2IFqnQ1XZGwrjR4qxpdjX75Qvf1qYrqdDXX
U2ilsMUTdbqa8yozUHm4iwZdzX2uv+Trum4Nuhr9zL1L69JvaNLV6LYJ0snz
ZmjR1dxX+1a0S3Vo0dXoKr8ny/6O0Karee4spip1ztOhq7kOh9rkB4vr0tXo
nlcyFIJf69LV6PpnR+jrbdWjq9GLNc9NKeinT1dzn18ZH/jylz5djb5tyCvB
VXMM6Gp0d+dXhQLRBnQ174sfI2Y9VTSkq9Edr47d4LPNkK5GX9CXPWRhgSFd
jW45UPDOTCsjuhr9k+67bJcwI7qa63lZMWa7qDFdjd7j8sX1rocxXc31bJF4
25JnTFejy2se+jN3ogldjZ6w36QmPdKErqbHOt/HuKiY0tUzFN/XJ/1ebiPx
sCTtcGg5XY1e3qpZcEmgjK5G/5GXPv+Tz0+6Gt3/mU35BIXvdDW65MAzF7Vm
lNDV6DfXFWuOiCyiq9FVcjff8zcvoKvR+++PDzRKz6Wr0Q+tmSfeHZBNV6Ov
qcoKN6v8RFejV7vmOf9oz6Cr0TUdNQIMZqbR1Xz/Ldde/f6VTFejf0nUsrN/
l0BXo7u0KCot//Sarkb3SjuU7nI1hq7mz72ktXhHWzRdja7bWpfj9/A+XY0+
o+ad1uFDEXQ1utlEZddvuVfoanTfa13G//d/r0Z/pRCokpZwhK5G94hevaR4
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
V3Mfrtlod0b0PV2NLqfxyK02LpOuRvfbtCks6sVnuhq9NrX/5m1/s+lqdKuj
jTvTJubR1ejH791Z4BJeQFejT97q3q7br5iuRg++dX2cUW4JXY0ucmy57Mpr
3+lq9CtzpSIbU37S1eibche3fHIso6vR5zavKP5QWU5XoxccM86oPf2LrkY3
L6geYTmziq5GX5049fhxjRq6Gj2px2CYZHstXY3+u1942P2K33Q1+gpBxwlb
KurpavToOztf39/TSFejXz1aWBLl30RXo894IPx86q1muhpdO/aXz5a0Froa
XW+Gyur+za10Nfo70byIXabtdDV6/80anq7uHXQ13+e7X0fGrU66Gl148yav
rOYuuhp9ek6h/PppPdZwNform72iIbf/WsPV6J9mpPrNk+2zhqt5Xl7lv72z
9581XI3u/ch6+9Q9AnQ1+p0mM40jVoJ0NfqquZMqZP4J0tXo18dLN31PE6Kr
0Z+M/Da/55wwXc05MP33wBVrROhqzoE1DoHK40Xpaj7nbWWQvJoYXY0+yTzQ
YX6rGF2NLuVZl19VIE5Xo99KPDb93RsJuhq9sTcjri5Skq5GF5T7a7/sghRd
je5iPemfdoA0Xc33uXj9r4mfDF3N32uwwPzdB2Xpat4ve8yMNH3l6Gr0Izde
7RQ5Kk9Xc56svxlzdaoCXY2u63BeZvknBbqa94tf6TT7BYp0Nbpk+HnvuWWK
dDX67dmJ1496KtHV6Hv2LMj50adEV3PddtqpLT+tTFejXx64aqeIiQpdzfkz
zE8g66UKXU0XtayMS5yjSlejW+Q9e15cp0pXo/9y0epQP65GV/P+HdnPf6+Z
Ol2NrhzksVc8TZ2uRjf5tzj/xXoNuhp9XdLq66flNOlqrnNhTVXgc026Gr1C
e1zM02VadDV6kGeY6j9Jbboa3TfLScErVpuuRt+6Z1eU5FoduhrdQXSsQLqG
Ll3NuXQoQvLxB126Gl36YmLB60N6dDW65+2TXg1W+nQ1+tuCP+XT2/Tp6llh
dfevC7nZWP9JXhN0sJ2uRk80ihksMrONrkaX3+pr36LfSlej1/dkCC7920xX
oxtYbIidVNpEV6Pf1PaIu/Gpka5GvzBuUEb38Qa6Gl3oQ4nkvSN/6Gp0+wer
v805W0dXozvaF1Q3R9fQ1eiGOcmfTpVW0dXo0QvnDzE2qqSr0dWuOj58uq2C
rkaP/CRWYV1QRlejdw0/5PV+eildjV5lm112+coPuhr9TbTh3xtpX+lqdJdz
ku4RKl/oavTba2UnRRz+378Lg147d0D6TZV8uhp9Wm+N8f/991dzPfVdd1+/
kkVXo3f/tv4+2fwjXc3fq0JtjuPCdLoa/epWnVPLP6fQ1fy5DVc+7z2RRFdz
3SRibs6Sf0tXcx0GTjqVdPYlXY2+69a1+IXXn9HV6DMTS09pjIyiq9G/D9A+
KxYRSVejO/db5zm+/gZdjd5vkLNrTPAFuhr9mNyH7AefA+lq9OmKUQG5bw7S
1ehjw6ePkHixka5GH9HV03NW1J6uRg9fouqR2yVCV6PrKrp+MHRzpavRfz6Z
Omuo/3a6mn8+4oZqYeIRuhp9ysXPNzwTztDV3IfnCxetS7xCV6Mv0Xn/sNkr
gq5G97z/WK3n7H26mr/Xb6+gDeXRdDV60Lro0XZHYuhq7qugjDmBj1/T1Txf
wcuczaIT6Gp0MYsduxI/JdPV6MHaqrsuDUmjq/m9/Br7PS3IoKvRjatOrJVN
/ERXoy8bHHYwf2c2XY3um2NeYR+dS1ejT2psf1ciU0BXoy++YyARcrKIruZz
SscGb+tXQlejN3Qusd31+xtdjW5hrt43Z91PuprnZVXjJ5+6Uroa/ZHBVaFX
B8rpavT03zPEZU1/0dXog412O+woqaSr0fW7G8e03Kymq9ErrmdPPOZTS1ej
j7I6lTZ09W+6Gj2+rG5Cy/J6uppzOEdMrHJkI12NvnFYjOMyuya6mvu5cvO9
FYub6Wr0g6cdZrfsaaGruf6nlbYphLfS1ei9v2zsX+W20dXon9QEextlOuhq
Pl9uaMazWZ10NfrFLvefohe76Gr+XL1ir4q6bmu4Gv3309NRs6f+tYareR6j
x3xyuN9rDVejJ18b/TdH/Z81XM3v+zj/+XZ7AboaPePvM7OpooJ0NfqrQYI1
bu8F6Wr0w2e+qyQFCdHV6FvuzUrasFiYrkb/4D9EcnF/EboafdC4SYJn/4nQ
1egikjpJSkWidDV6do3Vyi/PxOhq3l+f23tqQsTpavS3gsfDJ/lI0NXoTVvE
vEpXSdLV6OPlNvikO0vR1ej7dPyLu+yk6WreF4eNbm4dJ0NXo4cYZNQNHyVL
V6PLqfd+mDBSjq5GH6anseT0GHm6Gt2t6kGhqoECXY0etdOrXvy2Al2N7u62
eJ/eIEW6mvMqfGnQwheKdDXn2/slg1/aKdHV9Izw4HUTcpXoavQ7c6/YVa5U
pqv5/g+WfX7arkxXozcqGinf9lehq9EDEvy03hip0tXoJx3UGztfq9LVnNuv
l1xbuECNrkYvickY/KNVja7mvXA5/dGJc+p0Nfq1G89MF47SoKvR53UWX3P8
okFXo6dV7TFZe1CTrkbfW5+ZcMtCi67mfPjeuk8yV4uuRpftU1hz5oA2XY3u
ZDD4sM0gHboa/XHqnB/KP3To6q9mm988F3Ozyb0+ePGmXz10Nfr7gL3+5ae6
6Wr0JbUF6z5O7KKr0eWn5Dn07+ygq9F71o093vuyna5G763q9bbza6Or0e1O
OXkILGilq9EfvwyJGzqsha5GT7y//XWRajNdjd7+POt1m2ATXY0e+famvtKf
BroafVPNe0Wzqj90NbqG6KEG8+Y6uhq96Fieq4ZcLV2Nvrpr1e8Oq2q6Gr3z
qM/UtF2VdDV6w05JsWNpFXQ1+q0jj5JGm5fT1eizFOLVvpz/379jjn58vN2l
zZo/6Wr00O+q/8+/t4iu6TZBufTaF7oaPaD89sR48SK6Gv2Gz5ktfmfy6Wr0
T2dLP4ywzqWr0aeU6+/Iks2mq9G3rdZQjP77ka5GH1s7adoVwwy6Gt1q+diU
VSdT6Wp02Y0qL2VGJ9PV6Pt3Bc8ONU+gq7kfBJzWib94RVejr1Dvr/Ao8jld
zXV4WV5kYhhNV6PHTCxv/WF7j65GT3+7abr53HC6Gt2oe1OfU+Uluho9/vOt
B3lTgulq7mf1Sb3FJw7T1eiNHttLIgK96Gr0cXcWXDpv6ExXo4s4fTmzdNvT
iXA1uveFII/kDCe6Gv1HlXC8hNcWuprrILBj6+Rnh+hqdPHQNzNEXpymq9HN
Xjgv6xp5ia5Gb1u71Eyi9iZdjf6u4V3/Ael36Wr0fAkDyzFfo+hqdNeFL+Tr
Fz+nq9GDXzQfeb3yFV2NPvfXjUkRLW/panSPpTpd+aLJdDV60mRPgzqXVLoa
/cz+SeuUa9Ppau6Hys5rs5M+0tXcV3u7pjo3ZNHVnJPGab7H9XPpavTK0os/
Mr3y6Wr0wPbHtrqVhXQ1+ulv+Sf37f1CV6NLvdkQ+mfEN7oa/d+SYYax4j/p
avSSK/1GChwtpavR5/iP2u6sWk5Xo99ckuDw6HkFXY1+QPWoicraSroafdfR
yx5+ltV0NfrlSR6n/v2toavRRU++aTxSWkdXo9eOiPqnXviHrkafcDLJKOZb
A12N/kC6xi2qu5GuRv8YL2ckI99MV6MP0DU+Xt+/ha5GHzPUMnXBnFa6Gl1r
UKHctANtdDXvl2nnz7193k5X8744efxEfGsHXY2ue+eA/pTxXXQ1+uIU8eNz
A7qt4Wruw1krW2sqeqzhavSnzwNCJOx7reFq9Cyr0VceP+6zhqvR1xWuvdKg
IEBXc19diP8445MAXY3+ok1hz+8gQbqa86Fy4MtsFyG6Gr1fWNLNHn1huprf
sXbRrA31wnQ1uskR91zdRBG6Gr1ls8F0tQuidDWfY5+YOnebGF2NrnrFcWWB
szhdjV426fHIa6Mk6Gr05ptR8+7rSdLVXE+F3oJeKSm6mvepimFuSI8UXY3u
+Obk8m2N0nQ1evfvE2dCa2ToanTL27MP/auUpavR17q02D2qlqOr0b101zfe
rJenq+kxefuPm/cq0NW8d34GDHgsrEhXoyf4FF9XOqVIV6MPsa8fcVFDia5G
Pxh1oMX2thJdzXO6aESV/ChluprrP+yWlsB7Zboave7i0gvKS1ToavSdfiUb
HJpV6Gr0lNCgKxEnVelq9NRp30YbmarR1ejThbWnJieq0dVcH5szecfc1Olq
9MORB2o9BTXoavQ/Q5XP+kRo0NXonydsKbo3XZOuRk97/vBdb6MmXb3+UeOn
DKn/zukVgUWTGgRs4Gp0zdF+8lLDBGzgavQ1P7POKzX30dXoSTdKvfcf76Wr
0Td2/1F2Nf9LV6O/+VuUEvapm65G7xF/Weayv4uuRj8/rOTtnlGddDX6kOup
0XId7XQ1n59iLaOU0EZXo384P8PoSHArXY3+/dYw+3UbW+hqdHczv/TXjs10
NfrB3xq9B8Y00dV8nzlqQ5/3b6Sr0bUVytbHzqqnq9GPZPx4VDX/N12NLmO5
9GOPZy1djf5nr41b68VquprvP9lEMCevkq5GVx67ZFqIwS+6Gj3LofvDxH3l
dDX6jl25Jp9r//fvmKNPD/KrsF//k65Gr438M9Gx6Rtdje5vkP7529ASuhp9
mdjrqzbniuhq9NJjoe+9NQroavQTknWbfONz6Wr0rYdl7rofzaar0T9uHm02
9Ocnuhq9eL3O0VkdGXQ1usd2j8u6zml0NXrX53P+1xuT6WruqytfdhbnJNDV
6F8W5Xafa3pNV6PflEjdUPcuhq5GbzMrWP9K/wldzf3/8PsIGZEHdDW61y3v
QbcKI+hq/lzFlg9B26/S1eh2E25XdS44y/9ejZ4qZ7qn/9OjdDW62JTt/4p+
7aCr0Y2H+CyK2LOYrkbXneqz9dgkFboaPTJsvfX2mkl0Nfr+n9+iEuzX09Xo
2+6eMyk+fICuRn+7xVtqo+cpuhp9lu+DLpOH5+lq9MrSiG933W7Q1ehNcUtX
WHTfoavRM6o3+KiGP6ar0VdkWdnHDXxGV6OPdZ/q/UDxJV2NLuHUv2XZvni6
mt9FVPLRxjFJdDV/rwSpWzLeKXQ1etkeC4tzHe/pavSWjK5e4Tcf6Gr0+nsq
bYNWZtHV6FfK4guyT+TQ1dxX05sObczJo6vRhRaOKfw7vpCu5nc/+vrx0fRi
uhrdb8ukKsldX+lqzkmBEQuOTftBV6OPH51Td0C3lK7mebx2R//VnTK6Gl1f
JSu62baCrkYP7lwk06/hF12NPlrz6QW3B1V0Nfrv49ffhu6poavRf2x3qPmw
sI6uRj/ZMmafsMMfuhp9S9r8MqsZDXQ1+uCg3W9fPmqkq9En3XL/Oj+hia5G
Dxu9tXv7l2a6mvshtH6GSm8LXY1uffOz0EiLNroafcH5d7MLF7fT1egzvw5f
23O+g65Gb04dt/PG1066Gv3liqfR6Zbd1nA1uvfQ/lO3H+ixhqvRL9f8WXvj
219ruBrdZ4Sg3Ry7Pmu4Gv3VSjNpv6f/rOFqdPWQTe1XQgToavRd5gMDXroI
0tXoIwbN+q6uJURXc65aDBB5USZEV6PHmgipXnosTFejG6jUmccfFKGreb70
y+aazBelq9HLu5IefxgsRlejiw9ycI6VFaer0Qu8VJ0rGsTpau635vCUuQUS
dDU9cGt+smiiJF1N55za4t79WIqu5rmTV48ZGi5NV6O3jnAuvH9Jhq5Gv9Qp
U7IuVJau5hwOVC1cFypHV6Pvu6tbev+SPF2Nnua+VPziHAW6Gn3dkKevegsV
6Gr2ftaqfm6KdDW60eGbhgPqFOlqzpmiLbVtO5XoavRPc4bsKRVTpqvRo98t
LKk/r0xXc/5/dtXQ669CV3M/9PqP80xQoavR75TaOZUtUKWr0U+Pfr90Z5Mq
XY3+S3CW16BTanQ17807gufE+6vT1R0jt/38IedmI1B7+UXVSBG6Gj3We0Cb
w1phuhrdf1Ls+tIrQjZwNfoRky7b+wWCNnA1+s1Tkx9GqgjawNXo42bvzyue
L2ADV6M/L3F+v8/qH12N7n3rjVzU5166Gl1CPjLbYdNfuhr9xbPY1bOUe+hq
9HVdn/VeJ3bR1eh1g1RnB+/qpKvRgx41zMge3UFXoy8skVvl86+NrkYfqe5R
E/S5la5GDwh3HCAf2UJXox/YOn1v1/Fmuhp9fs1UC6etTXQ11+f00f0Kqxrp
avTmLSMv+sTV09XoJ1Wr4x8l/qar0c2M4sVeF9bS1egJC+UlbvRV09XoAwU6
XN1HVdHV6F6hroF/9/+iq9GH764Yt62onK5G11+r05piW0ZXo89tWjCt7c1P
uhrdMjw4WPjcd7oa/alzn0TRxxK6Gv3z4hKl9ZbFdDX6h20l72NvF9DV6IWX
j9qmTMmjq9F7WyaFnBHLoau5TzIeRU7K+UxXo9u5dBuWfcmkq9FNXF49kzB/
T1ejD90wxic25h1dje4xIMm/8UQiXY0+R29z08ZJb+hq9JliA24ot8fS1ejZ
l1XHfx36lK5GH3vxd9jZmod0Nfqi0bNSE/bdpqvRH9xxqplqcJ2u5vP7/2h0
vxlCV6MP6Oc1V972JF3N99ysdcq2eQ9djR7SJTRxZeRKuhp926oROy7eHEZX
oy9V2nSoM2AQXY1ubvdd3nnNCrqaz/l8oeRu5W66Gr38aKD52WMn6Gr0Ed4f
Do3qH0JXo9v+CFMRiAqjq9FVfJYc1LK8TVdzX/3Lb246/pCuRs/qXZqT2vOE
rkYP/bh9zZ5XsXQ1etlj3RnnBd7Q1eiXRP8cU1ibSFdzDjhahJ0KfkdXo7+7
M/jhu39pdDW69Ho1r9joTLoafVqdzp21dz7T1eh9vkv8NjZm09Xo4kOcbgsP
zqOrOScXrVTeF1RAV6PfrhofUaRYTFej30jpN0Q9poSu5n2U0e/U2L3f6Wp0
x/ftUw2e/KSr0Vu1/xxRG11GV6Nvlz9R8+9DOV2NnjbFquTrtl90NfoX/eyk
h/2r6Gr0n74Hxbe1VtPV6E/O/JAf+KmWrkav3Fw36euL33Q1+uMSCWHfZ/V0
NfrddqGvp9wa6Wr0Z3mnVsz3bKKrOT9zOuwvHW2mq3n/ZmS8Wni7ha5GF9w6
reHcp1a6Gl1Ta6PqzP/uNbgaPWJr5dIDYzroanQRB4uuQXs66Wr0jikL1Re/
66Kr0U9fW1otrN5jDVejN+XmX7bc+tcarkb/vVzf/UN+rzVcje603mXt70n/
rOFq9LexkfV2iwXoat6nPfm7cjQF6Wp04YvLaq59FaSr0atzZy24Fy5EV6O3
bzxb3LpZmK5Gz/jTdXT/RBG6mm4RGuo9VUmUrkaXe/v+jVOtKF2NPrtx2Pbz
qWJ0NX+vdcmP9e6I09W8Lxyijv7yl6Cr6YQ5SvK/t0vS1eiler+WDVshRVej
Z+4VD3gxV5quRu+8O+7B/ukydDV60hXzfL/JsnQ158Z0F53MSXJ0NfriymHn
59jJ09Xc5+dPDAwwVaCr0bfkhsbL31egq7kOHk4nng5TpKvRDWeNuLAzTpGu
ph/MX7YtnqZEV6PXnrR74FagRFejH5cfknpkjTJdjS666b1jZqcyXY2ec8nR
cegpFbr6yJu2plal/97TYX363VRxuhr98OUY72eVYnQ1+rHDhbINUmJ0NXrc
a6G4hcNF6Wr0z+JCj1qXi9DV6CPlRygknBamq9H3DgyUi0sRsoGr0X+OvJZX
3SdoA1ejGw8IOGU/XtAGrka/2Kq9Kn+fgA1cjT6+aalo/2P/6Gr02Yf8zeS0
++hq9InKwgfmxf6lq9HNA2e49y3uoavRS+YM15eR7Kar0U31ciX3x3fS1ejV
jae95u3toKvRvXKNbgfZttPV6JEhwe2DFdvoanTVfeOiR1a30NXoMmUFxjfS
mulq9PT47Ze3Pm6iq9GfDzu86l5YI12NXlAVFhI8pIGuRi/drDr8yrA/dDXf
Uylo1I4pdXQ1+sJhQiN019fQ1ehn20fGn7taRVejB7xIW/O17BddjW7vPDi+
dUwFXY3uvTh57vewMroavc7hzfOL6qV0NXqLnE/ZLJsfdDX6nMRrJgrbvtLV
3LeVxVN3pRXT1eiDOkTdjk8opKvRf5nW7J+Un0dXo69/PuFZRGAOXY3uY/lS
9un6LLoafWqE2aCSDx/oanS3rVrP7kmm09XoYz80xBWc+N/fB4LuKu89z90x
ia5GtyjdJHoxMp6u5nkMFLswYsJLuhr91MR/7hddn9HV6GWmSa9C2x7T1eir
07S6r0yNpKvRU/7dW+h45wZdjb7941T75ZYX6Gp0xzmZ0wdZB9LV6C96XywI
X3GQrkaPHaRb3di6ga7mHFi/uX1bkx1dzbnhtX3EIWcJuho9/tnfacvfu9LV
6F2ZV52Sbm6nq9Fnqfu+9Uw8Qlejz7+Uf+DeszN0NfpxOQfh8xFX6Gp0xQU+
jVNcI+hq9Fszv7ye4XGfrkZfmnZXeFhaNF2Nnijt3uawPIauRv9TM2rs9v2v
6Wr0ngeZd1zPJNDV6LuTw4uF7ibT1eh33V97WAmn0dU81+eqNARvZNDV6Nu6
bc+6HvpEV6ML1mlNvTE3m65GP9QRv+TnsVy6Gr1zqLZ77bd8uprrf9vTMsGl
iK5GF7j55MSKhi90NfqIjefm5dz7Rlej23glDpSw+0lXo+ucmh8bmFxKV6O3
bjk8qHduOV3NOalj1j23rYKuRq90P3Tw7J1KuhrdPXCyedyGaroa3Vl9/9xP
E2vpavQdVtHrM4x/09W8p86//xilWU9X81yUBTbZKDTS1eibm8aL6es00dW8
X05JF2wd0kxX8/uqZAePd2yhq9H1futu2Lu1la5Gn2k1IWjY9Ta6muf3+sih
ywva6Wquc2P6ASHVTroaverb7ns6S7roaq7bk0M/H97vtoar0Vd2/JgdI/zX
Gq5GDzOZ2W/Uql5ruBp9mv2kywM/9lnD1ei5OX/XzdIXoKvRL40c0zfpqwBd
jW5rMDTC66ogXY3u33nb69sKIboafdQhq31HBgjT1fTPwM3f1ncL09XotStv
R578IEJXoy/OsmyruilKV6NveGhY7LtPjK5GV5G+tMF1iThdjW6neejtRmsJ
upoe8Hjw57WZJF2NftL+s9R0JSm6mueu2G+AspA0Xc195T9jnVa7NF2Nrj3+
aO6yehm6mr46uvfwz1pZupr7XHDxqbA6Obqa+3n/cLErjfJ0NfrH2/sF6/Yq
0NXo6+IcPtwWVqSr0bN8f2zyDVCkq3l/nQ1u3KOuRFcrTdklLKX+3z3isi7g
2A1puhrd1cbonH2UFF2N/jtv2phhyZJ0NfrfMaduO3yRoKvRSxWHyZxuE6er
0UVXy4YKqYrT1ehtnie33BwjRlejS2y7n+bpJkpXo2/xkk7bECBCV6P3r/5x
8WycMF2NbrS7e0Nto5ANXI2+KiBjlaelkA1cjb66Zlm00RpBG7gafbLd2j0i
dwRs4Gr0zBMbcyyL/tHV6DdFfR0jN/TR1eiSLVNi/UR76Wr0jJqJbm8je+hq
Pr/a5oLrvG66Gv2K/PZHsyW66Gp0C/v5TXfeddDV6BsK3jxadqKdrkZf0VUy
fMf8NroaPcTZ+mNd/1a6Gr3QvSA1SbKFrkZPqGja2N3QRFejTxkwVfzs90a6
Gj3+Y0WK5v0Guhq99WXT6ay7f+hq9Ne2oYIzXtbR1fyOWwIjTxTX0NXowst3
qJ6Sqqar0SPc0gtcZlbS1egqIo27K65V0NXoSyWt/McKldPVfM/JVSEu3qV0
NfqL9/OmbW3/QVejO69buD/d8BtdjX56h/H36M1f6Gr03JttOwZ8K6Sr0U1m
qTpbbcqnq9E9l2fv/aqXS1ejD5I+0afcnEVXo2uWr3qd/PEjXY1+dETShMDu
dLoaveDxhRMnNqTS1egtsvevx+om09Xo15fp+GqpJNDV6OVDOx3WXX5FV6Mv
ygqXlA15Tlej/wlxNjVXjaaruQ452/5uH32PrkafVn+sJGROOF2NnvoyVMur
6RJdjS40JHtu+sJguhrdZ0Ve09EXh+lq9OqdhRqvyr3oavR+dcOrQ3qd6Wr0
uaN2p8cMyJ4IV6P73nj/bHCII12N3iSyYoNbiCddjX7tzJLWOWaH6GrO1Xit
B4Nmnaaruf4DLLZlhl+kqzk3PvYli528SVejn8uWOerrdJeuRo9WOHpoUHAU
XY0eW7VPd7bgc7oafcaP+dKWnS/pavSA2pY3cTve0tXo4weWzhZ/k0RXc441
VsgFC6XS1ehdQ79P3+efTlejpyUJRX1c8JGuRo/a7d2e+DSLrkYPDMzOm/0t
h65Gn+nrZH/OIp+uRq/wr9U5FVJIV3MfFi21HG/yha5G1xG0HHcz7ytdzf0T
dNYg4fYPuho9aYjr3BmOpXQ1uvyhqJnKRWV0NXrH4QfuL7ZV0NXo9tcUOqwM
Kulq9Mbtsl6Xv1XR1egxeyYN/3K/hq5Gd9z/6nrHyTq6Gn3iyA7t1j1/6GrO
sZfVYlk+DXQ1+hiRPaUpqY10Nb0Rt7tIuaiJrkZ3UrmikdPUTFejb4tJyRZQ
aaWr0d9oXhh+fWIbXY1uOWzrpiivdroaPVLf69HQhx10Nbpp4RZTk6ZOupq/
70eZ/0PUfYfV/DdgHG/vvZO2ImVvomNEZYasjAjZW3ZKsiNZhSgrlFKolFIq
RURbymxqaE+N5/nnvn//vq9zdb7nM1+5XB3hUxM7reBq9E/XA7ev8P1nBVfz
fAu0uX2vrssKrkZ/FfI7foVDjxVcjT7ugkLHqeReK7iannHWtFINEKKr0V97
jZx4Y7kwXc1z7MAC7+UGInQ1vTcpw3pxpQhdjf5jSd7hs89F6WquE/XzNh3H
xehq9AN5zQmBS8XpavRh9jUtHsMl6Go+5+/xogGKknQ1+sj0M10N9ZJ0Nc/P
DZva3POl6Gruo6uzpO0SpelqdKWcUzNmh8nQ1eiePo5pZwJl6Wr049vLA0Su
ydHV6L3uQ38+vyhPV6NP8DK9G+SjQFej+w648S/9kiJdHfihU01fx0kw9JGf
sMdbRboa/Zrk9tnCKQp0NXp0kcyfx6nydDV6qbWfiFuGHF2NXrQkJ+1gnixd
jd4uLLM+qESGrkZ/U6kr09giTVejpwpO/NwiJ01XowtdtFdX6S9FV6O77+yf
+8takq5G95hoZ1O8QYKuRleP87sp7CNOV6NLx134Zx8nRlejjw6deeFjlShd
jV454IzHHj1RAVyNfn1/yL/pi0QEcDX6JJnnpta+wgK4Gt26fLb59mwhAVyN
PlLz/bBUDSEBXI0+TmtayvmEHroafXlJQ1r14m66Gv275Pj4oI5/dDX6nufK
jU/vdtLV6CoL3j3TXtRBV6PHiCnOLVZqp6vRHeUaFDtyWulq9PmDfk7ecbuF
rkZv6okYMmV3M12NPmvYXePtc5voavRjb5e6tI1opKvRlaZUTC0yaKCr0d3e
vRfW0ainq9FbD5Znbe3/l67mOjlzzGPliBq6Gn1NoEqg1LwquhrdT9c8dsuR
SroaXSx+ruPZuHK6Gn3dyjb5dTJldDX3V8wFx86NJXQ1evk/9w8zv/6iq7n+
nYdVLnX8SVej169U3mT39b/vW0QPGVqxY7l+EV2NHjUzs7bK6wtdjW7UnlbR
Kp9PV3OfDm1y9ojOoavRvTt91509lkVXox8fZ1Zs/j2Trub4eJh3Tu18T1ej
ZxfmGqxemkZXoy/+am3j9S+Zrkb3HGS8LvJnIl2NXpYzOStX+RVdjT5zj47H
ysoouhpd9HJcmLh1JF2NbmucP+/m3FC6Gv1B9ufN+wzv09XotfENq216A+hq
9AvvxlsszL3Ef69Gz3mfoTzl+Em6Gl02Mz+11WgfXY3euGT81nOeK+lq7hfv
xo8b5hnQ1ehjhnf7K3lY0tXokWMSfc6WrKer0QOWbjn19egRuhr92/HNHVM7
ztLV6EnCNlc8Iq/S1ehDMm2eZyUG0tXovskHw2RGBdPV6B2aK4MaX4TR1Zxf
I/VR6UHP6Gr0hwr3t7Zsi6GruY/uTFx5/E08Xc39PituuGVmEl2NLlm3eNum
nhS6Gr16ktK5zJ3pdDW6XeyuEZsGfKCr0efIpxzXV/5MV/PcG791SfCQbLqa
42ycsPbj9ly6mvdyxMn9vln5dDX69uJ1q9sWFtLVXFdyydVdHUV0NbqCU9Hv
u4nf6Wo+f/uqU665P+lq9DvCg25vWfqbrkaP04z2H1lXQlej302YW5R5pYyu
5vOMfvl2wuwKuhp9d2//hEPqf+hqdP+F04wv/K2iq9E/3jZf7Pqlhq5GN63d
GTss5y9djT740cV8p+31dDX6/cdrZlw60kBXc9+ZWqwaermRrub4r7SYPfZZ
E13N55z//zP0azNdjT5s23GX0zKtdDX6TzP1huwpbXQ1z7eIubKnPNvpavSU
48NLH37ooKvRZdTdHo3S+2cFV/PecX5xavD+Liu4Gr3hul74pa/dVnA1+rKH
ybbrrHut4Gr0HpeXb+yXC9HV6BFBq2b07yNMV6Pf/CJkO6JYmK5Gr9sU+m3v
HRG6Gn2fuINO3RZRupr7ovKz5u0JYnQ1+lWLr5VeCuJ0Nc9VKcV7d8vE6Wr0
i6qNK9sTJehquu5E1eDjgZJ0NV16eJrZjONSdDW67rhhzpO3SNPVXA9OaQ27
lsjQ1ZzfcaJVRTaydPWghUdMR+o7CeY1HlbL6KNCV6Mr282xb/RRpqvRLW8r
+FhIK9PV6MPeKlce8FSiq9Elz5T9fN6rSFejB1w1c7/ZpUBXo5+baVP0uFue
rkYvdBis/1NEnq5G3zlt5X5LOTm6Gl14dqNKorYsXY2eI3arz2ZzGboavU3h
aezEydJ0NXrBG1W9sY5SdDX63dT525cdkKSr0WVuXf1y74YEXY1eMeGxp+Yb
cboafeH+f/6RNWJ0Nfpl75vTXHXE6Gr+fC/r0DVzROlq9Fm3HTr2eYkI4Gr0
/ZG5C6IShQVwNbq2x54SXSFhAVyNPkHW91PYVCEBXI2+LGSrW7ZGL12Nvnvp
yMjrYd10NXrMq2kno+Z00dXoOsUZtqZtnXQ1usmJpdZVwR10NXrKrd8pIqvb
6Wr0YqdklR1GbXQ1+uKr/2dkTQtdjV6TqCCwS2imq9HHTLCLiPZroqvRnWZ5
qh061EhXo78dOiHi8voGuhrdVMclU2xZPV2NrjS3dO21kL90NfqhC27Tc57V
0NXoh20WfYj/UEVXo7uX67gvbq2kq9F/XTxYFTi0gq5G3x6tc+n6oTK6Gv3K
8cdC1gUldDX6nLkFMYFTf9PV6D61ywRhiT/pavTBPU2jim9+p6vRT9kqXUsq
LKKr0Zvn5QfLjy2kq9HVh1luSorOp6vRNwVt+P5tSS5djZ5bHyOyViebrkbv
feMd/KjnE12NLsgq9lsj/YGu5vxGPMhoXpROV6NPzf84eE1FCl2NvmPL1yeh
sUl0Nde/lsya0KB4uho9bt+x8UkLYuhqdEWfCw9vnH1GV6NfuOGZ7eYbRldz
fpNi1jtpB9PV6P/Cs7aVhATS1eiP9pod1bt8la7m5xrhdSL001m6Gv3Ak4fn
GmceoavRRbZKiwo9WU9Xo4sOOTfxUdMEuhpd4WJn2eoMA7oa/ZjvX2+Xpyvp
avSyPBPT8KH76Gp06VXnbc3OnKSr0eV+u5Zk5l2iq9EDz9+w2dATQFejbx6Q
Kdinf5+uRl9zY/Kl6JmhdDX62ffn/3ZPjqSred8NerbJpDSKrkafvn/9ZQe5
V3Q1epTp7u823xLpanSthmF+29qS6Wr046bSNwIWptHV6EZT+5wqaH5PV6Of
D1Dv0f2SSVejz7wROGvc0Sy6Gt0z8vWB6mc5dDXvzZcD55vK5NPV6BNlDwRW
eXyhqzn+VdqDx+kU0dXojx8uTlbJ/0ZXo4etfKJqufQnXY3uu1FDadSXX3Q1
+smyFS+bXUroavTaRdt2HpIqo6vRn88O9n/3spyu5v7K+e7741AlXY0emrMm
Pn5OFV2NfvFE5/61w2voanTHdxX9ck3/0tUcB6vmCxIa9XQ19+NfnVJJwwa6
Gt2iLG3itpGNdDX6IPkrGePmNdHV6O1/f8Zt2tNMV6NLzX9vKRzUQlejr/86
7HB3Xitdjf7hfmzwKtV2uhq9qfx9Tf+lHXQ1z8lD5/YvCu60gqt5/njW7qvu
/mcFV6NXtgZqVizvtoKrec4M1z9um9JjBVejb5ies0e6jxBdjV5drxtrmC9E
V/OcP58XvPWqMF2NHl+avKB2mQhdjW6bfjUn0FiUrka/s/an5al6Uboaff4h
zft3k8ToavTkB9cMm66K09Xo+teD0lx3SNDVnMfVjqGD50jS1XFFvWNsjf+/
bgusPZz3qdHV6CE2ebbtpap0NV+f93rbrYWqdDW6YNU1yUVvVehq9FmDnpvr
j1ehq9HP1o5q7AhXpqvRnz8S21XeX5muRleMyUoqDVKiq9EHP9Bqb9ZVoqvR
mycKFg0eq0hXo/++3PLr6lgFuhp95jyl18YT5elqdOeMKq08azm6Gt1pxeE+
IfNl6Wr0+U3L/t53lqGr0b8GvEpI3S9NV6M3aBx4IeMrRVejt1rJdu0Jl6Sr
2S/7xollSdDVHP/ruX1jW8XpanRjwSSbKwbidDW6ilXZuqtzxOhq9NitpwPi
3UXpanQ7+asastEiArgaXV3ZuN2tQVgAV6PvWdG6QXuosACuRh8h5HXh6y4h
AVyNLptWaey1u5eu5jppHG1xV7qHrkaXT5T0VHzYRVej60nm73o/5x9djW6x
6YR1bncHXY1u7b5x2qAX7XQ1+qD6iTF5e9roavQpHsP/fLRspavRO40r9TTk
W+hq9Krq3YFhZU10NfpGsdXPr71tpKvRD12LDMwKb6Cr0f1Cyx4vD6qnq/m5
esuG7BpdR1ejW10NWpI5vpauRg/X+bM4c241XY2+4vSj57v2/qGr0ePG5jXH
hVTQ1ehvxrkEPG4so6s5blfXD7eyK6Wr0a8d/zP6YORvuhrdwEdr0HLzX3Q1
9+9iZ4uMjT/oau73Qxplg24V09XofcwGe/5qKqSr0TeEvBet2FRAV6O/eD5n
jZVoHl2Nbta71q/6VTZdjZ6dJ36r5tpnuhp9smhH9okB//2dPfRxEwq//3J+
R1dz/YSGWdf8+u/vgaB3a0+uCr7zhq7m89+cu2TQrNd0NT+vVvCnPV9e0tWc
l9tDa82qntPV6O9ytq6Y5/GUrkZ3D/f3LpjwiK5GX/5076Xeo3foavSYfoUi
glv+dDU/12BPYff5PnQ1u8uJV9fHHaOr0TOkHGsi/mynq9F3vJ99X/3AHLoa
/YZLQu7FhW8mwdXot7sOzTMYP5+uRt+VqLdBZc9Ouhp9bnLKcJ+lnnQ1esT2
c8adKhfpavTTH79MfXjhOl2NfvjVsvbtynfpap57t5usF5c/oqvRxfpELLEp
eUpXo6c/urFZeekLuhq97J+IyZmFsXQ1+tBAq3cv8l7T1ej9PEsyZv59Q1ej
F3veXOc/8i1dzXvwQdSs1Ph3dDWfc1yidtbpj3Q19+OE/cNWffhMV6Pf6dJY
OaMlm67mPt1zpijIKo+uRh95y23n9pACupr3o4t7+dOxX+lqrs9QISGXimK6
Gv3I4MXHfKN/0NU8DxPWaF1f+Iuu5rlU+Wq96fffdDV6SmP6uW37S+lq3i/f
z1ftMi6nq9EHDL74Y8SPCroaXXNq5vuIkD90Ne/NsCSZ2lPVdDX6kuPrustc
a+lq9P33RggF7K2jq9Eve6iOPf2mnq7metjzfeHd7Aa6Gv2fxiEx3epGuprz
OzF0T6tsM13NfR3dlj1kVAtdjT6h4cGsd+tb6Wp0Zfc0heTANroaPTrOfLpu
STtdjT5v7mb9L4M6reBqnsNpJW+b3P9ZwdXo9w1fbthR3GUFV3M9L8ofOkfQ
YwVX854qq7XzDu21gqvRqwdNbLjqI0RXo9/askpZa64wXc31luGs815ZhK6m
S0e+6PfkiwhdzX0XeHdK0l1RutrW+Zjtyv5OgqJC0zTpDg26Gv2lwywflZUa
dDX60z9+Suap6nQ1+oa04lULBqvT1egqiU+unPVXo6vRxadteJcjoUZXo/9Z
MVTFwlWVrkYvfdB44nKFCl2NnjNy3SR5RxW6Gv2Hp9Tcq5+V6Wq+fumAT0Ns
lOlq9PC7xbmFSUp0NfrDuTKulycq0dXoKwTpPq9dFelq9IK2/Df7XBXoavRD
23+H2h+Up6vRzV9aHJh9TI6uRj+Y7W+/+bwsXc2frxuxKuSWDF2NfjXv1gf5
Z9J0Ncd/76gk3wwpuhr9l3bduvGVknQ1+uoff3+LSUvS1ej3h4g4NQ6SoKvR
RyndERNdLE5X8/XrmttGHxejq9Fjh350Ov9ClK5GT0wNXyddLSKAq9E9uz5Z
POwnIoCr0c8tVS3etEZYAFejFw5X8be/JySAq9Fr/IapvMztpavR1/6ed0dz
Yw9djR4l1WD+Wrybrkb/rFPXFv74H12NLvDym1O1uJOu5uuln+zbJt9BV6M3
pTjFWma00dXo8ZorVzhcbKWr0Td6pz2IWdVCV6OviR1XvH50M12Nvk/u4xQn
9Sa6Gl3kmqb+/a4Guhr9Qc7gF6Nq6ulq9BvP5l/sl15HV6MPMpw8zjW9lq7m
PIaurXAqrKar0V0F4gZlnX/oanS1/gfXiw6qpKvRiwcOmvhqezldzfXzOMBE
KbmUrkYPDXAO7DUtoavRfU4OH3T2xi+6Gv2Cc7HdM4OfdDX6686Hf+u3fKOr
0ae6r10V9fIrXY1+s9blZ3T//74XBr2l59iG1qg8uhp9WtW3ml0u//39anT9
Kz1Og8dl0dXoFRtvbF2wJJOuRk97PiY+w/09XY1+JnXW+bTqt3Q1ep8nY+Ns
/JPpavRHztN17E8n0tXoMgu3iafui6Or0b/4XfPqXh1FV/P1624smJsVQVej
t09eJXf4bAhdjV4dc2T5dbd7dDV6/bByR+H2m3Q1esPYm5pbJP/792r0Idci
C8QXn6Cr0d0lyqTmXtxLV/P+Cj9d8VbPka5GX2ql9DxsmRpdjW7WVbLHa+9k
uhrdwH1W2u7XG+hq9Mz68IWvSt3oau7TN+W5rd/P0dXoFikLMn+Ov0ZXoyfX
qk2Okg+iq9Ev1TwqvHIqmK5Gn/Xkeby6QjhdjT7xat+xep+e0dXcv8tmjDp1
M4auRq+1mqgwqy6erub9e0TlUFRJEl2NPqd/nPw+lVS6Gv3sUtGFfzzT6Wr0
8rYzPxXGfqCrOZ4384P2aH6mq3lOLkkWnzgym65GF4voXr16Vy5djZ5qvfLQ
76x8uhrdelqwetL8Qrqar596sqm7uYiuRj+mdjPfP+Y7XY0+NjX29fvMn3Q1
eqvOh/x2+990NbqhUuKFgrISuhpdL9Le1uVMGV1Nj22NXf3QqoKuRrda8mz0
DfE/dDV62C5XE0FxFV3N8a99feZacg1dje60/tOboLi/dDXH//zzy0PW1NPV
6LMvV8tVbmugq9H3O+zd1+nZSFejpxx0E3YJaqKree84thcMSmumq9FHn/Xv
P7elha7m+b/1e98M8za6mv55I10atKmdrua9OcTkUU5EB13N138Q9nMS/mcF
V6M7PB5bbLO0ywqu5n292Dzo3MtuK7gaPW6DmIqFUa8VXI2u868o9JKtEF2d
XyXmuNv8/+OcqV8ef1ubrkY3tX3Wb3KXFl2NLvLcf2/2Mi26Gv1R4a/6nXGa
dDV69tJVYfp6mnQ1+pXQkNSiYxp0Nfodw/5zHvxRp6vRuwo6Vh6dr05XozeH
qym6xKvR1eiCscP3rhioRlejv7pcELzGX5WuRt+6yiHeVUaVrkZ/65We4X9E
ha5GT9fT+ZPRqExXo8+dJG4uv0mZrkbvSJIPXlGiRFej92qf3RW/UomuRm/Q
sbFeGqNIV6PPbg/0WxStQFejh5k/l9odK09Xo08cFJsQliRHV6MPqLtYIv1R
lq5GX2z15vbxYhm6Gn2B7iEd/XppuhpdV+6aW6GkNF2NvmbZzfpnxlJ0NX/+
2gS/sKmSdDX6h0/fA965SNDV6NsTz5uK+4jT1eziSktXvxKjq9ETpixy/F4j
Slfz+ZWlFhw2FBXA1egP+rqvm7BMRABXo38Zkxmtc01YAFejy26L2ab7RUgA
V6PPUXgVJtAVEsDV6IeddMfKfuyhq9HDN0168cWlm67mujo5qG+VTBddzXk8
+OyZVVQnXY2+Z5Xym8KNHXQ19/VJEe8Yk3a6Gv3b9ISlxX9a6Wr0noSOLdZR
LXQ1eub1PzLNZ5rpao5z2tR9lS5NdDX3r9HkFqPZjXQ1epDu7bS74xvoavSD
q4KGbh5aT1ejlzw1LW1c/peuRo+8f+l6wMYauhq9oMlGouBEFV2NfvSZ3sPb
zyvpavR1z6SE2hvL6Wr0Ucu1vX9OLqOr0atOH/+4NKiErkaPc7gzaa3yf99j
jj4hp2G5kO9Puhq9+uQYmxXTv9PV6Btdq3R/nC6iq9GVt4sNOfn3C13Ndehc
v3XRnny6Gn3GeI+M2Tq5dDW6a3Lr6G0lWXQ1uo2OuOVO/090Nfqb+f6FjmEZ
dDV6vxf1OrfE0+lqPr+Tfd642yl0Nbqojkze0ENJdDX6iR2tmdIj4ulq9EOh
k0K3N0fT1eh9//X/dHX8f/+/ms8/95SbuGwYXY1unqrVvfXxA7oavdCqRGXb
gkC6muft60hHbbmrdDXXc/WOlCnSZ+lq/hzF4oeSUw7T1Zyv9imHprmto6t5
76it7B8VOJauRreL+9Sls6ofXY1u2+OyVKDmRFfznH8Usy3q9T66Gn2FW9nE
9l8n6Wrud7PgqETxy3Q1urh32Q6bwbfoanTh0lH95o26T1fzfFu4wXfTilC6
Gl1KK6z11YxIuprnvJDIzDdlUXQ1urSWxK50qVd0NXqd6BHbjV8S6Wr0kBu2
lQ1/k+lq9LzDx+/1zkijq9FNLJVkL5e8p6v5cybdfPA0KZOu5rk0Le+o+c4s
uhpd9aXdnJQ7OXQ199G99+53W/Loao5n3Zov7zZ+oat5/nSrq4/t/UpXc9zW
f2v5++IbXY2+xXbRzbbpP+lqnreR4z7eTP5FV6OfdvbZXDGvhK5G97menVvw
t5SuRo+507luW0A5Xc3Xy504FLK8kq5G16ly3XnBooqu5v3Ss/BuH/kauhp9
bN3gLbN7aulq9OExs1XVhOrpaq7zkSuuOkg30NXod2V0tlT3aaSr+XnVjZLy
RjbR1ej3XXOS1BY309Xonv0WX3/o0UJXo+vtuul68XkrXY2u4Lfs2Ke6Nrqa
99R45T9rRnTQ1ejHaqTyZx7ttIKr1+46ueXUkP/f7xeGfj+6uS9djR7UIy15
/LUOXY0ur/Im4LK6Dl2NHrjnQWzE1j50Nfqxr+l7i9K06Wr0c1JCFcr9tOlq
9M0FlSYOx7ToavR+Qyps7//WpKvRL3SZbhKx1qSr0acYBQRseaRBV6O7rpH6
V6KoQVejv57a6Ldhvzpdjb62Idy787caXY3+S825zn+uGl2NPiC0M2d6gipd
jf61cIS98BBVuhr9y9Prh98FqdDV6BZdZzbf1lChq9E7hIaN8PRWpqvRyyee
qdwjoUxXo7/qtz5wj4cSXY1uHvTxu1i3Il2NPmmnaK7lPwW6Gt05Tsj2Yrc8
XY0+tFp4vYiYPF2Nvsj473wfBTm6Gl3o+JIxE3Rl6WqO/2aP8aJDZehq9GFP
F3tWTpemq9ElPx8YW71aiq5GP2Iwxl3WQ5Ku5rpt9HG3vSdBV6O/j5iw6n6G
OF2NniQSOFm/TYyuRtfPLpoVbSpGV6PLuCTf37pMlK5G/7zp944pviICuBp9
zt/D2aMyhQVwNfqIDT5/ZygIC+BqdN+w3Mr984UEcDW6w9cD7y6O6qWr0WMH
NMjsyOymq9HPnK0sOre9i65GV3Z94VGp9Y+uRtecZz7Z830HXY0uPjJg5Yrj
7XQ1+r07P3T3TW+jq9HtB9u9+azUSlejPzF4eX5TSTNdjf5O7ULqtIQmuhr9
u3fUw1VBjXQ1uobn3QNx5xroaq7zsoUHlrjX09UcN8vQz1vb/9LV6CJKHvJh
QrV0Nbpb/IEBu7Sr6Wp0m4XSgbFT/tDVPK+mpDWcPFxBV6NnK+26/vVtGV2N
XqvSqP7MsJSuRneUWP5D2fs3XY0eGdq0o03qF12NXvNo+an0gT/oavSumE13
I9YW09WcL5sso5DXhXQ1el1TUvOLCQV0NXpGQ6l4zpdcuhr9bdyKyaLXsulq
9BkPP/nMcP1MV6M3FqTETK79QFejF8p7qxsMfUdXoyfb7RaxeJFKV6OrflCf
4XL4DV3N/Tvv8Lxg2dd0NffFqJxPZXde0tW8vxzunPFOeE5Xow/aWtIRtPIp
XY2+1Xmu0WyJR3Q1+v7IOUcmLrlDV6O/eDH1yZj1/nQ1+tFZq6u/DfKhq9GL
mixWtioco6vRld7uqS/3205Xo/uMHzxGus8cuhq9/5ZN++sdUibB1eh5sbU+
qgPn09XoY44ENDg77qSreY8sd21/Mt6Trkbf4akwYECrD12Nnj9ox/Klq6/T
1ehxp69GHKq7Q1ejH9iddOBk9CO6mt3jssXmlKd0Nd83/NKs6GEv6Gr0lZvk
JoYYx9LVdE7RS22766/pavR1nW2HM96/oavRi48s2P9e5i1dzfvFbeoJY+93
dDXvNY8O8y/2H+lq9EvS1q17Qj/T1VzPRgf6DcrKpqvR248pOKlr5tHVdMK4
PS6D3Qroap7DZ9Tb90t8pavR448sz2wJL6aruR52Pb9//+APuhrd3W76zWkj
ftHV9M/QQYGfX/6mq3nOiGaOb5tXSlejx2ytTYtpL6Or0T3z8++oR1TQ1ejz
L6wwVTj4h65G92r/FnpnQTVdzfXzYJJPzsRaupr32pEGs6CxdXQ1z731B/+I
36mnq9EfjqxqkH7aQFdzXhwdvi5/20hXo2/67ZPZU9pEV6P/MR3fWSfbQlc3
dEi7BYz4/73ZtiR87nJ9uhpdxH7emKJgPboaXfun8umdLbp0NXr33oHxKta6
dDX6AMOq6oSrfelq9PFj1w1yrdKhq9GLnfb6jxXo0NXophdiZ0j49aGr0e/2
3Jj7o0GbrkZvNrVNT56tTVejD3oUm/4sRIuuRi8c88wlXFaLrkZ/fzAxLmqr
Jl2NHlI9oehdlgZdjf4gfGZx5RgNuhr94KaSXNVAdboaXVc+9audjDpdjf4k
0EP0vKsaXY2uIXtw7bdSVboafW3WD5VxDqp0NV+f+8I4KE2Frkb/JZkVom6p
QlejC8wLX1+NVKar0e1cbff0M1emq9Ff2+z8lnBfia5G/5m9R3G9kRJdjW7h
esNy5BRFuhp9lce1CVFTFehq9OjnA6fOt5Wnq9Hn3J13UGqBHF2Nbh79XLLQ
SZauRn+67Jlyyi4Zuho9Stcx4d0paboafVjO1hFVd6ToavR+j1ZfNUmSpKvR
b1iukTtcIkFXoy+8bx9bKy1BV6N3ur1LOThSnK5G16rWmWfsLEZXc92eX+he
cUWUrua4nR53IO2DiACuRv+0ZdbKZEkRAVyN/rx/xvyi6cICuBp9eePTA4pn
hARwNfqt9duqX9/ppavRI5JDs/3H9dDV6Mmp3rWhX7roavTUN6LuHUf/0dWc
F5vjH48O6aSr0fvHS2sLKtrpap5XnWr3xwe30dXo7d/Dnm3f3kpXo18o2nji
h1ULXY1+aq/zyjNazXQ1+p1k68M7OhrpanTvMhsD398NdDW6wq6RZ+py6ulq
9MWvkxqVb9TR1ejOn3cujb9VS1ejJ6TtTf0VWU1Xcz9Oao48WvCHrkZ3XCwI
uCZXSVfzXJpf3GM2v5yuRvfROGw/5mEpXY1+4omkQqJCCV2NHhodEJri9Yuu
Rh+Xe+WetfxPuhrdt1O88ITdN7qa+/Hl5ubDN77S1ejVA9y8tsl/oav5vp2/
9ywPzKOr+b7x6Y9mLPzv71ejbxtaLT3MLIuuRlfVH9I0fFImXY0ufnp1tOiW
93Q1epmyi3F+0Vu6muuzZU9biHcyXY0eN0as4YRHIl3N+0L42ZWsbXF0NfrF
d9oHH6yMoqvRXTqNOi9kR9DV6DGvmlqNroTQ1bxHhk+IX+59j65Gn5Cc8C9Y
J4Cu5vN7SWfoDbrEf69Glzo5ynHRrRN0NdezyP0FGyVd6Wp0ievzaq8sWE5X
ox91G/vNwUGbrkYfut7S4cN5K7oavaj/q9CE2y50Nbr9xLp5TlVH6Gr0Vz7e
S+z7naOr0Q2dVthFxV6lq9HfJh9MMY0NpKvRn1lP3X9EP5iuRq9fWXxonXcY
Xc3zR63MvdHjGV2NnlZZre0xOYauRl8z9Jr/aq94uhr9Q3qfExkPkuhq+mRv
raXKxxS6mvNyfdTuE6PS6Wr0ewHZD81+ZtDV6C9uX3Xs/vCJrka/nH/fU7gn
i65G79hTrHJrdC5djT4xc4Gmg08+XU2n9Wme2V+2kK7mPPqHbFIPLqKr0XeL
77QwWPudrkbf1XmnX7+gn3Q1+pCbfS3TDH7T1Vzn155Hdzwtoat5PsuINsbZ
l9HV6LONBloriFbQ1ehh4wtkGlIq6Wr0Y61Tb669VkVXo5stGTN/48EauprO
zJHw6t36l67muRc2863quHq6+qjHuQuRY5wENjs/hGqMM6Sr0TMVk5fd/WpA
V6NvPJpyY+QRA7oaPf/H6MPvDQzoavRupWSl92f06Wp0OYMiP6l8Pboa3ffu
h4fzjPXoavT477uX3NmlS1ejdwXsft2d3JeuRrcaMrpljWZfuhr93fy/Stlb
dOhq9JumfmYzU/rQ1ehx8p0Ombp96Gr07xfuhzoe0Kar0VeObp/alK9FV6Nb
r+k7/MpoLboaXUlPxnuynyZdje5ZfXJT+z8NuhpdcNb858vVGnQ1elbSMtET
79TpavRCjVl/lo9Qp6vRXXwkgyfdVqOr0dU2u9iby6vR1ej+H7S6jY6o0tXo
0/bcTDCpU6Gr0Uevn/F4hLMKXY2+5tLU3FmFynQ1eoybz7yd9sp0NXrLN9ER
QRlKdDW64hi7C8UzlOhq9JDWzIbp5xTpanRRy+0SNecU6Gp0sfnfjz28KE9X
o1+8Mcb78HU5uhp9c7ntzA3BsnQ1uqmn3+/NMTJ0NfqNhcv3n/woTVej/yg+
PiyuXIqu5nxNeTlcUkyKrkbPnr80cLOJJF2N/v6Q261KOwm6ms+T2jXPbY84
XY0u8ca5yOKOGF2NHuHW69ScI0pXo3duKBTLkxYVwNV8/aiXfzKnigjgavQv
iSbDf3sIC+BqnieV64QUU4QEcDX6URcPVwcZIQFczc9r67ll86Meuhr9kdK6
N6umd9PV6OtPTh92qvofXY1+fcycf6V+nXQ1+ihHizWuczroanTlFX2DLeXa
6Wr0XodymbHZrXQ1euvRnx83BLbQ1ehL79YP+eTaTFejvznqvWOzQxNdzXPJ
PDFzomUjXY2ut93k9HTzBroa/alW3Tcvo3q6Gt342nv19ql/6Wquw4ufrs9f
UENXo4uv+56is7uKrua8+/SVX3i3kq5Gnzq1vPpfSTldjd4c+/mL6qgyuhp9
2/1Qu5tXS+hq9CXbT0Vfkfrve8zR752OvCx09iddzfti4b4nsRP++75FPmdb
w+8lx4roao7zdbmnxX/++14Y9KoVPh3Td+XT1egTtYrv+Onk0tXodvsrvbPL
suhqdmO/0dVBn+hq9PZwt4XisRl0Nc9zw8nDWlTT6Wq+75I6r1fhKXQ1uu7A
ZqkV3kl0Nbpm7Ljip0vj6Wp0N7HJH536xtDV6GP2zpnycc1//78aPWORdf+m
pWF0NfrJLR0Dslse0NXou/Pmmk7yD6Sr0RsbTdYeOnWVrub9eHy7w4qis3Q1
uuWztUfOnTpCV3PdnrqzY9AQF7oa/WN2f9kPgkl0NfqMshn2W07p0NXok9bX
bTH8spyuRv+gKTqjaYIrXc3zU9xjmUziCboa/dPAq8HBgkt0NfrP9PVP6ocG
0NXoZTMaZrn63aOrue8GHChaEBhCV6NP0Fh6QfZLBF2NvlZvunqJcxRdzXu/
xs7r2e44uhr91orj9a89E+lq7osQkUv3LyTT1TyH076anvv2lq5GD3uebLp3
63u6Gn2BuavsGqtMuhp9ZPoXk8f//30WrkYfttMg7MH/f/+Fq9FXfehdHPz/
35fharpleF1R6P9/v4ar0XvadjdE///3cbia45xoNPfd/39/h6vR5cvm5e34
/+/7cDXPGT+HYqETv+hq9FOXT2qoK5bQ1Zz3Po7fnjwspat5LzzOOp0xv5yu
Rn+leGjPNvlKulpOWjEobYKTwFFz/7Zz+UZ0Nfroe3mCkt1GdDV6yoNLuRNV
jOhqdFPtsaNvRhjS1ehVqWa7euwN6Wp0r6ynl9c2GdDV6F8ntz3KvGJAV6P7
eUgnWI4zoKvROxOfvFwRp09Xox81WtvPTkKfrka/N+NuzqQFenQ1+tqOwO8T
7ujS1ejnLi9fPrmpL12N/qzmtvPc6X3pavR1FkKy62/o0NXoxmHfN3g19qGr
0Vdkbbz0ZGYfuhrdIiMg8PsDbboaPXKH9QMtMW26Gn1Mb+dLR2ctuho949uA
huAUTboafZ+jzOru/pp0NbrmplC95d4adDX6tAV/J6U0q9PV6Ls2H8sftVKd
rkZ3ff234+k7Nboafdxr7/hRY9ToavT20vOjUh6o0tVcn0va9i7XUqWr0cef
v+Pbc1aFrkb/Wzbl9mNhFboavW7ymnCnA8p0NXrSrTX5Bk1KdDX6h/tu/au3
KdHV6C4HL28+WqhIV6M3m68fMLFQga5Gj90kEqL4TZ6uRs/tDNNqK5Wjq9GF
nTdcbaqXpavR0+p/24gLy9LV6Htfnl1ooS5DV6O3+Z7+tmGQNF2N/kUmQTLO
VoquRi9Z9LbVaJMkXY2+U9D1MfC8BF2N7iG/7+nIaHG6Gv2Bs1zS9xIxuhp9
tam90W01MboafcqC6617bUXpavRFBd2rnI+JCOBqdEPnBe4ur4UFcDW69LhR
B44JCQvgavTiNqEtz62FBHA1+rK3T5s6dXvpavT5s6adjIvppqvRuwao5z52
7KKr+ZwfpXTeSfyjq9Hnlvve1IjtoKvRRd5H+V3a205Xo78olporGNdGV6NP
rwvv6SveSlejq1xfX25W2ExXo288f3iay4smuhrdv7RgUZ5/I12NHuTcumzP
iQa6ms+T9Nd72qF6uprndkrJknP1f+lq9NkafmWNnTV0Nfq3wR/GxatX09Xo
FTO8P1QL/tDV6HabTNWOHq6gq9EfRxud2JdeRlej5wXNvZbXr5SuRv+j9zrO
/+J/32OO7pP1bn2Kwi+6Gl1sjpFG6NgfdDV63A+RUbf2FNPV6Flfg+Wcsgrp
avSZIYZujXMK6Go+z32jjYtqc+lq9IRakdBzodl0Nfop+xTjq+c+09XoZmYW
Syr6fKSr0ZfMj5g0a+U7uhrdJmHKk+UlqXQ1emvXoQV9Hr+hq9FNVv96Jb/u
NV2NLtBzaZjR8ZKu5j11OvZyudILuhp990nTxpqQp3Q1emn6uMBXlx/R1XRF
z4mfh77coavR9UzEJ1lOv05X8/zRsvBb8MeHrkZ/N+XohCsjPelq9B/WqwbG
rN1JV/MezPT2eug0n65Gjz44akPulY+T4Gqe2w3rNhhYzqaref7odWbfltxO
V6OfN5xd6/zBg67meSvZ5Tun6QJdzf2iOGiEk44/XY1+uvz4zucmd+hq9AaL
7LjylId0NfqTza+OPhj1lK5Gd9sXEOB67jldzXvKuSiyfP1LuhpdMiM+qiMl
ga5G71g7Y87SBW/oavT0I9lmMidS6Wp0q4dRJT6d6XQ1+oXlsXV/n36gq9G7
txT/8F34ma5GH7szZ/WNndl0NXpAaMbzi+G5dDW6c92P864KBXQ1XfFw0n27
84V0NbqMoUWowpBiuprnTITY4uT673Q1z3lX/dDnf37S1dd9LkYWWzkJtq8M
73v6RD+6Gl2u4MfsJ/r96Gr2Ja3bcl8a09Xoewv9zvUsNKar0f/EzX5m3mBE
V6OPX3i4zvG8EV2N/mnP1tkXLIzoavS6xpmFqRmGdDV6xwCT272bDelqdFnX
P48t5Q3panSp2C1SR8IN6Gr0kMz1yYnzDehq9AndFZmKf/XpanSRhoFC98fq
09Xoyzych0320qOr0d0mDTxQmqNLV6MP0yqtPd9Pl65G9xqWfF+wry9dja4Q
lhbVkaFDV6MnHk4cHWukQ1ejP+s7a8KxQ33oavTzKwoL7fO16Wr0DboP+5uN
0Kar0Vt7342T8tWiq9HX9TM2qWvUpKvRV+dt6vnmoElXcz2MsviaG6tBV6P3
q377IcdQg65Gj03aXvX1jDpdjf5h7rAZVS1qdDW6x+WaVmFnNbqa8+u7VN4o
W5WuRheukrxlN1WVrkYv3bzq1aEoFboafeyTwEMvzFXoavQjV8v+tt1RpqvR
zesMzab2Vaar0TUrjSdeu6ZEV6MnBV2e2KymRFejX3VqOPB8gCJdjb51wuob
vuYKdDX3y6dGUc/h8nQ1+v6uwgKviXJ0Nfr1veITbsySpavRS57r2yevkqGr
0atLL0zscZWmq9Gd0w4az/KVoqvR/a4mmzyJkKSr0a+UyrkY5knQ1egGu19K
P+oSp6vRB8nWDpk2QJyu5n6Z7f2vcbEYXY2+wn3K+RdnRelqdJtl+6XPJYsI
4Gr06LSV5117hQVwNbprWNXEvVbCArgaPTQ0f+wpTyEBXI2u/3CG1aprvXQ1
ukbaSJOCIT10Nbp122Xn/Z+76Gr0S4Ha46ce+EdXoy+IkKgcM7CTrkZPbhoR
uqikna5Gr3dSSL19r42uRk/Y4r9DdVsrXY3uabejJsKqha5Gnzckbe8h7Wa6
Gn3k2S22O/410tXo9oL3d33KGuhqdNWc8sTignq6Gr2m/8eYR/fq6Gr0Nz7a
zo2PaulqdLtLB1ovva6mq9Hdp7dWnC/7Q1ejH134LaREp5KuRv+in/zCd005
XY1+o+T4/psvS+lqdK00u/XChiV0Nc/bytP1SX6/6Gr08LUSp74b/KSrOc43
Ho8L3/WNruZ5aB1v6Zjyla5Gl9+Z0Jo0+gtdjT5zYt7U0nd5dDV6/7bCnjdH
/vv71ei3E5cKr5qfRVfznHEcOWPXhUy6Gl3vzrgD9+Le09W8R7ZaT1tklkZX
oy9/vsr+9JdkuhrdV0Z3htW7RLqa906A3aWm1ji6mvvObU/Lnu9RdDV78aEm
cdtIupr3xaXS8wu2htLV6Pn3T8xOm3OfrkbX2SAqXbTlFl2NHjE4Xsvf5jL/
vRr9d/G57MerT9HV3F9v7fV3Xd1PV6M3Rt07WjBmNV2NPjhK/5uX20C6Gj1d
V/Lfh+oRdDX6mlknPGpjnOlqngN61cXznxykq9HVH1V8S/xymq5Grw0Jrpk1
/gpdzc+rOXiU6ZXbdDW6kvUZvcM99+lq9O9HnPdUjH1CV/P8Vx3sWfsqkq5G
dzi1xjHMKZqu5r4Wlh/68uQrupr3i7X1XintJLoa/YTr0LHFQ1LoanRH4Xv2
S0+l0dW8d876D/UwyqCr0Q92W0xx6Mmkq9Gnen3eX+2dRVfzc+UMy/WMz6Gr
eR+NlHZpls+nqwdoqaU0TP2/x0bvipazNaWr0Qf4//IQ/m5CV6NHHa/Z1L7b
hK5G/6iy9GiDjAldjd5/xceMmjv96Gr0ZbKfl1dN6EdXoy/6nj6pKs+Yrkb3
HyPsVrPDmK7mzw+4Z9ogZ0xXoxtPSJrW/siIrka/vtqmVNjGiK5Gn9aroKxQ
YUhXo6/ok5nf96QhXY0+w9p48uABhnQ1ernyRccp7w3oanQHj6PDlm41oKvR
7XdaZu5SNqCrOQ6K7Qf0turT1ehPR0Yqr3ipR1ej+1qEHAiS1KOr+fPfvkir
XqxLV6NLn9mjbPm4L12N/nf/si2+PTp0NbpRWkjt34U6dDX66Mtuj+2f9KGr
0Y8HxEXHSvahq9H31+oNHLhWm65Gzzg5ViPwjRZdzXlU3urT11iLrkafvLs1
9LaXJl2NXuNWetSsSoOuRvc4pasbO0+Drkb3El3lZ/9Sna5GH6M9SbzeWJ2u
Rk+yHLDvio8aXY0uGe8sPKVXla5G77JXim7ZrkpX8/WP+oc8/a1CV6Nr1R6p
37VYha5GXzrrjb9lpjJdzX10+OhL+RnKdDX653F915QnKdHVHP+0ovtvJynR
1egXc14NWnFIka7mPL6eet7yiAJdjX7mhehFc095uhp9SPmOpQO95ehqfq6R
8TLjbsjS1ejOGoVpi5/I0NUc5917np1Ilqar0W0P99alfpOiq9GXHAm5rd4l
SVej50ZsLt2rJ0lXo6crtv4onyZBV6PvVEp5tmG7OF2NfslV1eNfgBhdjf5d
sWLD7c+idDX6rV2S5xZKigrgaq7Pl6KyOlNEBHA139dyuESTu7AArkY/J4gI
KE4WEsDV6PvCXBoKZIQEcDX6iYOyU96H9NDV6JYTZf2k7Lrpao7z7CXGm+v/
0dXo2iUqRo23OulqdCfppqwAhw66Gv35d9sd29Ta6Wr01EyR8WuLWulq9Ly3
9zYffdxCV6PvcF4wOdGjma5G/9f3c6vp6ia6Gj1/06G0ZzaNdDV6Y6nD3/Vj
G+hqdJVVwg8EQ+vpas5Xt6f9Mae/dDX6i1s9Tlk7auhq9OCAM7XbLlbR1ehu
tWc2Or6ppKvRt5wIn35NtIKuRq9wbmsxciijq/k8HpEVPVEldDX6zwzPs+Zm
/32PObqYtPO8RyE/6Wr0Iwcn2jYc/u/7Fnn+SL6qHpFcRFejO6ZMW6MzsJCu
Rm8edMnrYUQ+Xc3xfK43qHhpLl3N11vqDYk2yqar0W9cOOs0Xu4zXY2+a8Ps
gR8tPtDV6D1XGicdOJZOV6O7BDwLOqidSlej37/3rTG7IYmu5v59kR4oqZlA
V6OH7vocovsxhq5GF3E5MK5a/DldjS7b52Vd+bFwuprjUG5ouLs3mK5GXy63
3d7DI4iuRj+Q0uf4EBU/uho9MiosrHHJeboavSR9WseXu+50Nbp1lJXmY7Ut
dDV6vHukaPenGXQ1+tjxT1+s+906Ca7mOTNcaXT0cQe6muu21kJKpXAXXY0u
ftr52Cqr43Q1uqBjb1//yxfpanTVQUe2y6nfoKvR04bKJZ+Zd5euRn8dPUrB
qe9juhq98m9Km3jbU7qaz+Od0+f9mhd0NffL5LQFR+1j6Wr0NcaOxwYkv6ar
ud56pk8uLXpDV6N3P3bQiNB8S1fzc5k+Hth1+R1d/eL21TwJGyfBpIuJkzT1
BtDV6HLFX4t/hPWnq9EL9FzTHwn609XoudH7FfbmmNLV6Ak3H8ZNdjGlq9HP
VIUUK3aZ0NXo93dJu/24aEJXo0+ZZhb6dIAJXY3ef7jDbs/EfnQ1uvGilz8W
L+1HV6Nf8lnbPajJmK5Gbxaz/SJ+3piuRl992fLwDzNjuhq9fEFHc+xbI7oa
/ZCw3hy/tUZ0NfrsvYMv7RM1oqvRg5Uuf1py15CuRu8ceEvBcpohXY0+79Ax
R8NyA7oaPch9RZLUaQO6Gr21fPjMRgsDuho9JrdI8tVdfboaXWJncs21Oj26
Gv1VwKVl+yfq0dXoK55eXr/CW5eu5jqR/2Uy40dfuhrduXjdk1Ej+tLVXD8R
Jcpmp3XoavSaiXUuhr/60NXom+obkvUm9KGr2QMGjje8pk1Xo2v2Dfs+oEWL
rka3LHVJHeWgRVejmwX3EbGJ1qSr0a+VOT1cpaNJV6M/8XyScdhDg65Gn7Bk
1tHbf9Tpas5L7Jr8tAXqdDX6SYX6kpbXanQ1+o8ZmbFmg9Xoaq6rPZFbnW+p
0tXo9eMHKd5VUqWr0e1XhERUHlehq9HTR7q6jPynTFej51g8n3JitzJdjX7H
cqPD91olupr7ccW+CMtNSnQ1ukfHxKwpWYp0NXppSY+WdrYCXY3+LHfwiq58
ebqanzfyTGLNDzm6Gj0j5cK6qhpZuhr956nD21q6Zehq9Mvu9t3yqjJ0NfqF
7qwRIy2k6Wr0BVXHR2ywlaKr0XXOv9B9vEmSrkZvmrVHtfOCBF3N911/bdSS
l+J0NbpreNy9lHIxuprzNcPaw0pLjK5G95ntVJ0+W5SuRk/1ERZdfVJEAFej
L7asqJBMFRbA1eh9PP1fxksIC+Bq9NfWm68dmyUkgKvRs3e0CJ5Y9NLVPCcl
1lbsTu+mq7luky+sWrqli65G93N3L1+h9Y+uRh94vzDG40MHXY0e7likknqq
na5G/xzlPHTA7Da6Gn1YQd2sEO1WuprngEzA3Tl/m+lqngMlZttVMproavTe
BW1/WsMb6Wp0o1fSc7puNtDV6O9bpPOMfOvpavTM1+d25OnV0dXoLkkuqx+a
1dLV6A6Z32oTplXT1eiLPu4/ob3jD12NXnxT/UZMSAVdjS7dU3b9ZlsZXY3+
YNeu5tQFpXQ1ur7WTfVRif99jzn67gO3NldZ/qKr6YRwo7cfLv2gq9Gjf+R+
mp9ZTFfzPN/a897F7Ctdjf6rr7y33P0Cuhq9o2pk1eTJeXQ1+sRVu19I9WTT
1ej/Pvsmri76TFejr5voGHMj8iNdzX3xdE34jbp3dDW6b1KySOrW//4eCHqy
0MtZ2oOS6Wr0jUWjTK4PSqSr0d0GFE71/R5LV6Pb2jwMnVv6gq5G36a5PHj7
lgi6mk7QGnqvqvYxXY2+K2GRd5rkPboaffzxHZvaZ92kq9FnRqcf1r3sy3+v
5rlXqCin/t6LrkY/vm138ODePXQ1+kPx7OhP05fR1ehCST6ZRzpV6GqOT4TQ
LrEdk+lqjsN1ucNzdmygq3kfRQ+d773Jja6mi3yzqp+uOUdXo0uVTK8YmX2V
rkaPsDtgeichkK7mvEt269pqB9PV6N9mmemqHwijq9Hv2ryuE9/+jK5GV/I+
c067XwxdPbW/doXOrP/fm07XIx+KD6Sr0adcylhp42tGV6N79rl0slLfjK5G
145vG3c6bABdjZ69/cexgZMG0NXoyysUt3/I7E9Xoyf0HyK73ak/XY2+WjHF
WaXJlK5G//N9tFfUCVO6Gn1NQtYhRx1Tuho9clLSAuEIE7oavbBATfvhDBO6
Gt1s3euCuT/60dXoVgHXbrTv60dXowefWrLjjnI/uhr9aXPQ6tmhxnQ1ek9J
+8GOGcZ0NfrPrrS0B6VGdDX6huZVCxyOGdHV6MPb2waIGxrR1egZamELohIN
6Wp04+snv29YbUhXo+9125nbV9SQrkaPixcIsu8b0NXoB2MiLU7bGtDV6M16
RTaexfp0Nfrdf0Jr2/rr09XoiWvSX2/bq0dXo3dMbt3xJ0WXrkY/lWR8zkVD
l65Gf1iVYPJnY1+6Gn2bjez8ba916Gp0/5NGJm0aOnQ1+kbllkjPHX3oavTw
u3aKah+06Wr0mPI3sx+aadPV6G49eR6C01p0Nfddn7yE4ipNuhp9mmi15pE5
mnQ1+ozAvoGGzzXoavRhnrab3uto0NXo4zZanN7npU5Xo5fFOyqaNajR1eh6
fewUf6xUo6u5ThKn3/DPVKWrOV8abqlLBKp0Nfpbg87bfZ+r0NXoHo13LMvM
VOhqrk8TqyeRQcp0Ncffbo+ol44yXY0+elHavOXXlOhq9HvKAQ/GqivR1egz
xfdajByoSFdzPYeeWS08WIGu5vteOKVQOEqerka3k7FyiJssR1ej6w+Ysvih
vSxdjS6ytmpU4DoZuprnwCYHlbtHpOlqdJ389fIR/lJ0Nce/PH3G+5eSdDX6
mzG1v/5+k6Cr0Re4ynfpSUjQ1egvZS2ilg0Xp6u53j6qDb2zRoyuRh97b8Xp
lquidDX64lEuvxZ+EhHA1ehRnisWJ8qKCOBq9OO+Y2XGzhIWwNXoqqLxWq98
hARwNbr4qo4p/pG9dDX6yTNhXjkze+hq9PfPWkb1r+2iq3k+C727cPnqP7oa
PS0iKVPHppOu5jqcqj04XriDrkafe+Jx5f7kNroafUJk49i53q10Nfqq/SpL
Bata6Gr0K4qfjs0a10xXoy8bf6lut04TXY1+c+aOL1HijXQ1+mMTfVf19nq6
mp9rg4iIQVkdXY3u+2HKmtlVtXQ1uq3lpsPPeqvpavT5M8a/nm9SRVejx+p9
9DN3rKSr0V+vueY6Kaicrua5Xbcx9WxbKV2NXntrd4PqyhK6Gn1O75T1Bbm/
6GqOm0L6+XzHn3Q1ep+3IY+Ny7/R1ejXQ2xmqI4qoqvRH1nfTT187wtdjf5b
PL3VaWQ+XY0edPzq48TS//5+NfrX6ynhN19k0dXoSTVvgqtnf6KruS8mRbz1
35lBV6Of//1nvnV+Gl2Nfk0n7WfdoRS6Gt3v8FaRG2uS6Gp01yl3L/ioxdPV
XLeXDx1pLIumq9EtP4aVrRz3jK5GV57gGxWhG0ZXo+/2tP769sMDuprnyfy8
maLugXQ199G95KFft12lq9E/bDilavbhLF2N3uaWslPi2hG6Gn3I1O2XN213
oavR5S+oe/x6aEVXc37TTssK12vS1ej5VhWlFQGOdDX30aQZ96ou7qWr0feZ
PRsfOOQEXY0eXSW/oSrHl67mc/rpS+b53aSrP4fdaB867//n8LVelaRec7oa
XTvimeSEU+Z0NfrFTVMfPlc2p6vRJTTyhQffHEhXo096v9MwuP9Auhp9bOs/
VYPnZnQ1+uHGceV+k83oanTr81n3lD8PoKvRdf1tl59ZNYCuRu/aKKMtWt+f
rkY/smZlxSGP/nQ1+s9tu3KaVfvT1ehCxxf92RpsSlejd2j1jKyYYEpXo2++
LXjjlGVCV6P/biu8+dXFhK7mzy/d9Hlhbz+6Gn2x64ENn671o6vRm9127rAb
1o+uRr/Qeq8pNcOYrkY/vn5W92QXY7oa3XXOSb8EUWO6Gv3RqeWfJwQZ0dXo
qY9jw19aGdHV6GXr9k8e+8OQrkb3KVnoE33UkK5GFzZsfzDG0JCuRs+xaboQ
k2xAV6NvkUlyGO9iQFejz6pLFYmXNaCr0VtWBk3xWKNPV3MdSozadyZcj65G
f1B+PvpKjy5dzfe1/6h5d64uXY1etKMsJPJOX7oafdrPuydT2nToanRzqycJ
X+bo0NXogmS3tXXBfehq9Ilvt52TEu1DV/N95z2x7eekTVejX783LXzKay26
Gn1vovZnZwMtuprPWVaTcNJTk65GN9BYdj6sUoOuRre7Wjjvy1wNuhq9YF2i
lvhLdboavTFW0D6ynzpdje6+f5PwhotqdDW6yj3z6beE1OhqdP+CeV8KdqrS
1ejyz7zeqZWp0NU8x+wczB2WqdDV6FcuDlT0z1Kmq9FXpM878dNOma5Gd/zV
FGT+VomuRk/4Y7D74FQluhrdvuic+nUvRbqa++vFxqbppxToavR+KROD/p2X
p6vR94SNEMT4y9HV6Dt0LBsOP5Slq9GDNivk2cbJ0NXoIVvM5PSzpelq9Fey
uVFdNVJ0Nde/mF7Lb1kpuprjc+5nedZgSboaXe1fQsg7Bwm6Gj12R3/n9+7i
dDW6+oEFFrnhYnQ1ekqIjWnFb1G6Gj3PpnC7aB9RAVyNbpJ3r7+Zg4gArkbf
HqG1ZcllYQFcjf7x6Q7HiwVCArga/U9ItGqunpAAruZ8Gfmsm5zbQ1ej3670
C/27q5uuRr8zwn3MU+0uupr7SPiH4ER6J12NXp/bILLzaAddjf4+yT96x6R2
uprrcOcKPy/xNroa3dZ00/fw3Ba6mvfdy8tv6kKa6Wr00X7LjlifbaKr0cc9
/z09YlcjXY0ue7hn0Yg1DXQ192PawLKMpfV0NbrNcUP71si/dDV6erD802Nv
auhqjoOU8cKJv6voap7PUemPTFX+0NXo6w+m9rWaX0FXo3udnax18k4ZXY1u
OSFdoleklK5GP3TDdn7w7v++xxx9q27fte7NP+lq9IxlXbbqsj/oan7eU0M6
z80upqs5PjVtwRueFtLV6E5tCw0fjSigq9EdnIxGzC3IpavRF/XTeeR4I5uu
RlfcXjz709HPdDX6bpGsPAfpj3Q1+j6FBRe/L3hHV6PLfahcPv5HKl3N+11U
M3VTyBu6Gt30s9fD3zte09Xo81q3mdyWi6Wr+bnCHeQVBr6gq3lPZZ3YMPzd
U7oa/bLdHle93Ed0NXqh5jjZudp36Wr0J80uih3J1+lq3pvxATFLl1+kq9HD
dq19e63Nk67m/R6eN2Xr6V10NfqYDZUjJwg70NV0y9VxXtEizZPgap4DiatO
xJrY0NUrR+vJTF/4//kyq1/lJDeYrkbfOvBSQbTPILoafZXYyYEKGoPoavS1
MarrnW9a0NXodndWXYs2tqCr0VPld2TIhJrT1ejd78wUV4wyp6vRXWPst4e9
HkhXo8cu8W7vsRtIV6PPsneOnlNgRlejhzZPiAlYa0ZXo2smr5asaRxAV6Pb
VwlHjDs2gK5G/5xokXRCZQBdzW6VPzXnbn+6Gn3Mgfxp+qP709XoDrJVnza9
M6Wr0ef4Rta/WGFKV6PraERHCjWZ0NXoo/atNZx52oSuRv9eIG9zxcCErkaf
J1o77EdMP7oafVmOUdWA+f3oavRtvtGHdtUY09XoKituNMSdNKar0cXdHywS
72dMV3Pec/1fzEkyoqvRT/fV1/ZbZURXoz9f8u7srx5DuprrzVBdy/y2IV2N
3ta5IX2PwJCuRo96qB6c8NuArkbPcFuUIHXCgK5Gz4uw11ow0ICuRv9tO8xt
wm19uhp919Z5B7Kq9ehq9Eea2aM2jNejq9GrIlal9Z7RpavRFzgcmuz3rS9d
zXW72D162PC+dDX6+/y7lh9O6dDV6COtWkpcfvWhq9G1slcmiln2oavRH/d/
UHrHT5uuRp8ftsV5SpsWXY0+xWzo3JLFWnQ1uqr5zFivWE26mj/nfEuUmb4m
XY1+vmba4k9eGnQ1+hflQU9c/6rT1egx293f6y9Vp6vRb5+rT3yfqkZXo1/e
qXBn30g1uprzojHzqOl9VboaffqHto0Fmqp0NXrg3em7z5xToavRr+TahVqJ
qtDV6EcMO0zaDinT1egbxg9oeNqqRFfznNS9qLd1txJdjb7uz60ji0sV6Wru
l+rklMIyBbqar3d1GLG6Wp6u5rxb/fhT2yxHV6P3mL+QcheRo6v5euHmcE01
Wboa/a7csd7nZjJ0NfqSj4qaS6ZK09XoxX5aGsKrpehq9MSJJTpPj0nS1eg/
go7NWPdQgq5GF1qdH22QLU5Xo/uvO3v2d68YXY1u5dH31+NhYnQ1epZwTv4B
F1G6Gn321LQzc4NEBHA1+vDJv/pY/BAWwNXo1caF9xQNhQVwNXpJxpjpneuF
BHA193t02Ngvq3vpavR2t7RT77u76Wp0E6eoqIygLroa3W2HblfR7H90Nbq+
i7XvP+FOuho9+aZe5MCEdroa/ZDolMsbj7XR1ehGuo07Yua00tXoLrU67prG
LXQ1unz54o4TvU10NddJTpWqZGkjXY2++c1bCb/PDXQ1us+vs1LjU+vpavRX
6Sq3v3rW0dXoH2MOG6/1rqWr0TcOeCGtHFxNV/M8T3d79evzH7qa4y8j/CBf
ppKuRi9LfDekfmE5XY1+6Vnmm8HhpXQ1+pox29N8tUvoanSzmL33+17+RVej
n52knfJB7yddjS5c0a06Y/c3uhr9/vB9sVPefaWr0W9IPJ7ubfWFrub6lz15
rH9+Hl2N/vN1+WgV7xy6Gn2c3TnzOWuz6GrO74Z5c2Ki//s7e5yX2VHfD1S8
p6t57w/befH34jS6Gl202Le2SSqFrubzD9fdH96ZSFejewQrbBi07BVdjd41
22vaIkE0XY3u/uaoZ3FwJF2NfvXFp4knDJ/Q1TyHh+7W7tN6n65G9ywf3tV8
/TZdje6bsN9n2dwr/PdqPs+tjOG/VM7Q1TXxgTqOS5wEb8SiZiWrD6Wr0S2b
NmYmhAyhq9GdilcotFgMoavRB/g/XW8WPpiuRl9W+7DUcfhguhq9zHjLlXNR
g+hqdM97PV5xEwb9j6j7jMu5/f84TjsN7b3P9jzP9lJnItkaQkT2zMqIjIqs
ZJPIVpKUkZURycpOiJCMSENJEar/73/j/b7uvh4e374d3+P4HE/XjQtdjX5g
dZ+bX2/Y09XoDzQkIjX629PV6Jdnvonwe2pHV6NLNYy6PSXSjq5Gz3zwoSD1
ky1djb5tyw3Hs3Ns6Wr0nakC8cu/NnQ1+t8Juq3t62zoanST+Wmj9LVt6Gr0
C2GLlvhkWdPV6I8GxEZHulvT1eguBUK9uDtWdDV69gL3MztGWdHV6FkTf7ic
qrekq9FvnL2YU5pgSVejPxlVYvpJ05KuRvef63H03wkLuhq9MF2/l0agBV2N
fit6wi/bSnO6Gn3gzs9vxQvM6Wr0l9lT/w5XNqer0cfK7YiccVxAV/P5sV3S
K/oK6Gr03HBrua0fzOhqdEW1xTOPJJjR1ejzJ/p5nzM2o6vRFx66vOJ2kSld
jf5JQzvwZbQpXY1+s8+krV8kTOlq9KKAw7G/Mk3oavSQ5sstMgNM6Gr0M7kq
HvbvjOlqdLPTO2v72xrT1ejTtaaqTY0zoqvRe3+4VrLqriFdjZ6ceFr9oJ4h
XY2uMchR7cpsA7oa/bp0t2cvS/TpavRdYx9OazHQp6vRlefo1igv1qOr0f+J
+kTZPtOlq9FjOza87yvSpavRV/6SSxq/VYeu5r7dcCFseYs2XY3u9nL21PQR
2nQ1+jzTmkfnrmrR1ehB4oK9ZRZadDX6ZtlhVd83a9LV6B2nVU4o/dOgq/ld
gh1V7Gdo0NXoV6SLjQe+Vqer0Ruv3v42Y5A6XY3e4KublHJdja5Gv3csri3X
XY2uRt9XuWbk4zxVuho9/97diz+sVelq9OayLCvtTBW6mufINOacr0CFruZ5
lNj96XZQT7oafc+MU2+0BirT1ehhe7Rip4cp0dXod36svXNtnCJdja5WuLFd
a64CXY3+9HKc9fzVPehqdJ1vM2OfZMjT1egFv0LbRZfk6Gr0Dz++VOx6JUtX
o5u+OSPs6pChq9Ffe/UwnmkpQ1ej7zihXvw6VJquRh+zpMRjyCopuhpdxeTD
vlsXJOlqzu13EmoBTRJiuBpdwmfT6ev2EmK4Gj1w09X0PjHdxXA1+oTVGV8e
nO4mhqvRR4jV55792UVXc5/ExQx9kdpJV3Nuq4RlSTh10NVcf4W4k54Vf+lq
7gdp731x6//Q1XxPs0Mni3u309U8d/+itbSlftPV6GmbXikvethGV6MP0tF5
VLW/la7muZao2BAe95OuRq8qXBVfPqqFruY673B7MS7wB12NLr/34pM212a6
Gn32zPUH0x2b6Gr0YLm81i3RjXQ1n28layO7oJ6u5vlaP6DPrrRvdDXvIxXl
U373v9LVvNfyQ8u79fxCV6Mfa0vWeTvhM12NbrNl1cdntz/S1eg9r+za+9n7
A12NnlQSn6VW9J6uRs+oKC47n/WOrkbvf7F8a8L3SroafZRcVOiqkf/9uzDo
fTvjKouqX9DV6FoVbi3uKeV0Nb/juu1ja8PL6Gr0d6PWVr/0e0JXo0dodSyX
2faArkZvOntjXkXNXbqavjKyNLFadouu5r3f/EPuZ0gxXc05nFIblvjkGl3N
+1pRotNgxSW6mududqvktdwCuhp974S84VPHnKKrl/QVOMwdEy0euetSVbqj
iK5G7+rSbztWL6Sr0W+2fDzuekJIV6O/jnjRXTxDSFejH3ySJVVqI6Sr0R87
Ns3LfOZEV6NfjLs4oCDcia5Gv117/OD1F450NfqlkmMJpaMc6Wp01dMLfz19
60BXo2cHXlR9OcGBrkbvXNVa+eqrPV2Nnjpn54TXc+zpavRxcR9OV/yyo6vR
h0j0eFGeYEdXow96Y1D5qIcdXY1ufKHnw9s7belqdJU9ly9cMbWlq9HPh73L
OpVnQ1ejn6vVyzrsa0NXo7+U+nN9231ruhr9X+Q3icTR1nQ1+jLtgMUx9VZ0
NZ/j720zcoUVXY1+X7tdEKBqRVejtySum2+daUlXoz8dW2ms7G1JV6N7fXvg
/uOxBV3NddAyLS6fYkFXo/f+uPrBuU5zuhp986VN0TvTzOlq9KAr19bFiszp
avRNRiuHDnsgoKvRFRaaF9lNE9DV6F+kG6ulpQV0NddTW6b43WEzuhrd0z9p
+vkAM7oavSB74oeN1aZ0Nbp4Upr7hCRTuprrlts2x93clK5GVxT22y1/x4Su
5u8b5nOpcoYJXY0+NG7+m9yeJnQ1+o6EH1p/ZhjT1VyHPdsP7L5oRFdz3SR3
T3aTM6Kr0a+tPhH/ZJQhXY2+bXzEz+knDehq9L/lHdXdJQ3oavT6NZ8idkfq
09XohyXsJjsU6NHVnEvWT4xu9NSjq/mcA6d3hsXo0tXo2n02Vn56oENXo/fb
9q/7QkcduhpdQmOlntQ2bboaPffOXPdtv7ToavRXa3pONR6nRVejG81aevXE
XU26Gv2C25kBHq6adDX6yax04+JDGnQ1usWX1kGDVDXoas6H6tkfnyep09Xo
kgc3t4xtU6Or+XMzb6d+malGV6M3Bk8pnvNRla5GP9Ej89CvMap0Nbpy/T6f
lRUqdDX62ZvDDspEqNDV6BNM+xbpn+hJV3NfpV1Ws81TpqvRp8ybHOl5Tomu
Rv86bc65oOuKdDW/l+yz3sMfK9DV6N6+I0wnfehBV6O7t22ZE9suT1dzjhV8
HLhKQ56uRt+jn1S+3UWOrkZ/smK2VWaELF2N3jQ/fsKF5TJ0NbrP8EFHSrOl
6Wp02efDZateStHV6NOWvDvxs4cUXY1eZd51UqG3pBiu5v5PO2JrvlxCDFej
qzdt8PO70l0MV3N9LINlIru6ieFq3uMbeu9fHNRNDFej+8XP6uso6KKrua9C
p4+bd6ODrkbf3dC/+OLUf3Q196fU+kwprb90NfqqvUPEwx+009U8vzVz7+Vs
+E1XoyeZLVwsHfKLruZzFm1JmGzcRlfzvriVrXe/9SddjX5rzfB49/IWuhp9
5473L48V/qCruZ7/giYbH2+mq9EL73iN3Hegia5G10jtVRro+52uRv+eaZYQ
2b+BrqZDLG97rZxSR1ejxyz0Gntmey1djb59Q0fYzydf6Gr0vROkEvsa1dDV
6PFzzwzIiv9EV6P/kXivqV37379jjh6V+zpo95Rqupr3kfhhUvjXKrqa81A7
4ekewVu6Gl3/vae/1MrXdDW63psRW7b+eUlXo/+wclsXuOs5XY3uPEhQqxf6
jK5Gn3xt3gIdx6d0NefwrXflS8L/+//soZf+eqWhllpKV6ObOa+0+Ct9h65G
f/g9OdG96CZdLfsw0y85+n8+LJGoPTvMma5GP35kxe5zis50Nfq8TROWu90T
0dXoxW2r9rusEdHV6PWvsyROBYroavSJ6itO5XQX0dXoew6cyBNcF9LV6LFN
1yX1VwrpavRGof/5LX5Cuhr9j55TunyHE12NvulHxJ7G5U50NXrMx/RlT7oc
6Wr0j4nLB+UnOdLV6BrLpmulyDjS1ejtOtk1E1Mc6Gp067NT7nmpOtDV6IGi
86WKu+3panT5ZSltb4zt6Wr0F01FI3Oy7ehq9Itlqh0LnO3oanSti+bffa/a
0tXo1a2J3hL9belq9Dny6d9KntvQ1ejJnUU9kifa0NXoJ8pdsnr/sKar0U2r
de52JFrT1eh2TvHx59Ws6Wp+93dD7s86akVXo39YObfYxMOKrkY3np05s6zU
kq5GV7fOeJo4zpKuRv+RWd/p2GpBV6OX5+l0vkqxoKvRJ9ltfJUksKCr0WsW
7dtrc8WcrkZfmp865NFwc7oafYHk+n9zmwR0NfdbZ1a+6kYBXY3+5Nm3eaes
BXQ1ull24ODBt83oavTUVxsHfp1kRlejn++7aVGilBldzffZ/O+lTqYpXY2+
csKSJXlBpnQ1+oZz2yf1rjWhq9F1FO8eLt9oQlfzu59P6DVZZEJXo482tF/2
9aQxXY2eFLtvtORfI7oaPfN6kZ3+ACO6Gl2y4nWn015Dupo9SeNLQKMBXY3+
t2Fu27BAA7qa7y945he1R5+uRl8c0/F0SoseXc3zUrr1RswQPboafUa4mvH8
E7p0NbpLVvXf2B66dDX3VVDg9NiZOnQ1ur38mLi5j7TpavSG+c7eM1206WrO
Gd38ool7tOhq9FqpfbqRklp0NfpyuZyRQ2Zr0tXoGYKpqeJKDbqaP7ci+K5w
gAZdjT5o3TFd48vqdDX60FtFWxUc1elq9BEnz4jbDqvR1ejvfda4V+mq0dXc
bxkWq25vU6Wr0dcsH++eq6RKV6OfHts0bssGFboa/d372T1j5VXoavQAy+vZ
2Ro96Wr0S8tGL5ump0xXo58aH3LRwlyJrkY376kW/16kSFdzfta/+bA7UIGu
5nwzuqE0dFQPupr7XG2/rmSsPF2N/lDO3PzcFjm6Gr1qb/mAyWdk6Wr0nkGS
J9QrZOhqvv/n5+Ovd5ehq9HDe/XdONNJmq5Gb4k17Kc5XoquRu+1rTPv6i5J
upr3478x7yc9kRDD1Zw/3xN/9VCWEMPVnNs/U1RODe0uhqvRr0XM6Re+s5sY
rkb/7tkw5/vVLroaPa0m+a/rqE66Gj2/X/q0Jf/+0dXos7puN1w59peuRh+c
MfZGV+Qfuhq9bG60bm+tdroaXX/yCrvVr37R1ehh9wwcbh9to6vRE8zCwuTi
Wulq9LaW+rIBYT/pavTCdTPep7q30NXofc93P/XU9AddjX7kwP6FWprNdDX6
ndhPk8aoNNHVnD+hYyb0s2qkq3m+5hnpv+pVT1ejH8jMHjV70je6Gt3EVm6V
7N6vdDX6vUVFf49W19DV6J777lj18/xMV6NPO7p1RuP+j3Q13/ONrNVezQ90
NfoW+81FgzPe09V07E0Ve6Up7+hqfq+Ph7U3nq2kq+mulamSuqb//bsw6Hln
1p0qyHtBV9MhUUPejRtTTldzzmzPGKhvW0ZX7wi3HrZnUrTYcP3WaarLXOhq
dL2qMUPk3F3oavRvF3O6L29ypqvRna3Gr59zwpmuRj+1Jby+aoozXY0u6h4s
emTmTFejxy9uGOtdJaKr0XOFNfHmGSK6Gr2huXjTxlEiuhr90jCp/fO1RXQ1
umK73qkXz4V0NfrD5qn3L+4Q0tXofu9923TChXQ1+q/gN+6/1IV0NXriwRbL
Y9lOdDV6ctMC8zG2TnQ1utWV6fOVTjrS1egSdR8MLgsd6Wp0gzXPnSafc6Cr
0Vfb6l9Q8HGgq9Fj4uZfy7thT1ejH125MmRIf3u6Gl3b7kH8t6d2dDV69bG7
watG29HV6A4P7t/UqbGlq9Ejl6r/zplnS1ejr5K41eTVaUNXo0clNVy8lWJD
V6NP7J00eoieDV2Nrqk6/uOz49Z0NbrSvmGjI7yt6Wp0jQfdHj2/b0VXo8eq
KgSFjrWiq9Gf3vjx8H6zJV2NHjrZYm7vNZZ0Nfo9ub/u5/Ut6Wqeo43n7a3O
WNDV6IFNyaN39regq9FrDyc97PbBnK5GT7p7euP0eHO6Gr08WerIY01zuhr9
TNBIPZfTAroaPVVq8b/tgwV0NdctRTvsxzczuhr9b+FbqyHrzehq9MoHkauP
WZvR1egpW5Xmd941pavRF56e8Cd0hildzf1ZV2CZqWhKV6MPDBncrTXfhK5G
X7Z64pbe4SZ0NbpZtc91/RZjuhr9rbx580l/Y7oavbBy3S2fTUZ0NXta6NBb
7wzpanTf58EHB4gM6Wp0kwa10vvJBnQ1+pEJnu+C3+jT1ejXB5o23nDVp6t5
Xs5rKXhs1qOr0QsUAoOy63TpavTxsWdOaQ7Qpas5J53DRq/M0aGr0Z8otEV8
VtShq9F/7xlS0G+eNl3N+XaqZVXWSy26Gr3+5LgX3cVadDV6TkXT5VE5mnQ1
usX52j55Wpp0NfqKsfMSu1Zr0NXotk+2Jw5uVaer0VcG9h6+e6o6XY2+a2mY
4vtKNboaPV919XnzUDW6Gn3Uw0UTp5Sq0tU8dzUFZpl9VOlqdKNReZLV11Xo
anRP20JNPX8Vuhr94nSHJwdX9KSr0Zurn6nLrVKmq9HlFqzSmJGiRFejb7W1
brqdpkhXc3/Wrygxylagq9FLpbTy513pQVejX84a/LCoXJ6uRh89b6SvfLMc
XY0e0eSjO0RVjq5GF+g/TdjkJktXo494UrK5NEqGrkY/F7p7gsQGaboa/er1
Q5ruhVJ0Nc9piuKtyY2SdDX6y8ZXG7daSorhavSqcdXrLk2QEMPV6Jskn5a/
PdxdDFejpxs4buys6SaGq9H3LBlequ/UTQxXoxfd+hU+s62Trka/IBe1efeu
DroafcyprCVFfv/oavRxBmH93zf+oavRT3/c7vI3q52u5pw8OCRGZepvuhr9
Q4GhnYnTL7oaPU8l5JBtVytdzTnT3CgpfPmTrka/dahgjfBCC12Nnu2iHWV/
4AddTR969ykUbG6mq3kPJpg91VrbRFejl8VlZisof6erOc8TouurDRvoavQ5
oUeenupVR1ej99dVvxIXU0tXc274P1L2PvmFrkbXuhlj3/rvM13Ne3+ZzOKc
MZ/oavT5k22HRT74QFfz+W9qdaQHVdPV6D2uHJ8YcaGKrka/v+J3a3rbG7ra
7E3O+Pxp/3PR+8ljz5xypavRzfPOax+c5kpXo3vOueKuYOpKV6OP/xRT3PLK
ha5GH9yYf2PUdhe6Gn3q2+E+vQa70NXo166buu+XdaGr0ZecKbm4rNiZrkaf
b1Z1r2K5M12Nvty4+9wzXs50NXrC/pzT8m0iuhr9btHAne/OiOhq9Ej1vqai
uSK6Gv3m6y+juzuK6Gr0MQMWDRxaL6Sr0b3uCtr0TgjpanRVW80Jk2YI6Wo+
vzl6p52tkK5G76dibF9d7kRXo6s0updPiXCiq9F/9v7o+LXCka5Gz2r90G/y
GEe6Gl1i6Wvbd+8d6Gr0bK/wj6FTHOhqdJ9/15fdrLenq9FzB8ZJCBfY09Xo
hi8vrtz9z46uRv/6LLvrX7IdXc0/PyYiNUrFjq5GLy294FK415auRg/Vzu1Q
s7alq9HTHf62Tj1nQ1ejz+kbYXUp0IauRl/qMTJD5pk1XY0+70nyuGETrelq
9GGCIfG7flrR1egnKnr8qVhjRVejP1nerUZbz4quRu/7dGz/sDxLuprnQinA
MSXQkq7mPnHN21/0yoKuRreJSD/aNNeCrkbf/7K6v5G8BV2Nrl4Ytjv4sDld
zXP39lj6HF9zuprnus/qEdtfCuhq9E/hyyrPxgroavTFuqpOT1UEdDV6zcrT
o+vyzOhq9Be7CmdIDDGjq7k+9xdP1mo0pavRcwSC4VabTelq9JlLP/d2E5nS
1fwuF154iMtN6Gp0d/lO3+A4E7oafYBe6OjBhiZ0NefY9vkeB9YY09XoL6+q
K+8vN6KruT7LNQalmRvR1ejy/h8kUhYZ0tXob+ffD1xSakBXo/u1dhlPMDGg
q9F/zNqa3TdOn65G7zgR2ygo06Or0Z8pLZfocNCjq9HNnk1pfZKiS1ej71j+
8OWBOh26Gr2Ptahw+mAduho94H1rruNpbboa/dSfidcbtbTpaq7PtGypnBVa
dDX3ieLz9dFfNelq9GU9qsephWvS1eiBOsd3Fd3QoKvRpR5/7zVNpEFXc37+
ipqseESdrkbPe55kkKulTlejO8aVz++3UY2uRj/ekb/4naQaXY1e9X6U97zl
qnQ1ur5/572u3yp0Nfpa49NuGxap0NXc53Pf6pjW96Sr0b9M9ii0+K5MV/Ne
q+oRY9amRFejv9pSMkS7uxJdja578MgyKRVFuhq9waZQ/ZuZAl2NnnmlQXjX
qwddzf324lfT/nB5uho9ZPyUubNj5ehq7n/LjPvuu2TpavT4/k+Nfl+Roat5
Hq+qrznzRZquRq8r6Gc4RUuaruY51bLupt5fiq5GP1IbNODSSkm6Gr33HSXt
UYUSYriaXupzLfHH7+5iuBpdOmp+ZrJPdzFcja5YZbBPLambGK5Gn7RfXdYl
vYuuRi8+fLXG1b2Trkbfqu2hbFf5j65Gd9FyPaO57i9djb6yn5Fsq+8fuhp9
6BHNgHvtv+lqdAVR8/Zt137R1bwHi/xdQlLa6Gr02gPBodLRrXQ1+tVIRfN8
3590NXrYhL6VQ0xb6Gr0SyXTcj4p/aCr0YteZd2cK9FMV6PPrXx5uqbjO12N
fqfihscrmUa6Gl1HqSL+knE9Xc1789SE92uDv9HVXGdNqzt9Er/S1fTtl2lb
m+7V0NWch9PrDqSYfaarT010iC2ZFS3OKFlZuqvRja5Gl1Tc+HPZUTe6Gv1e
bprB+0g3uhq92San/3VVN7oafdf3i0mG91zpavSOI8ce/UpwpavR1y4Odh3q
5UpXo1vMH1Mo+OFCV6M3XNs+deEJF7oafXxbau8+k13oavTJU16HbDF2oavR
N478vXfUa2e6Gr3/iBFWB3c609XoaXNH/JkY4kxXo+vG9dfPVHKmq9FrguZs
mVgqoqvRTf/8HXdgrYiuRp8n1Ngysq+Irkaf3/eR5WZJEV3NddvobBtYLKSr
0Z+v9zm4IFFIV6NL2b7YJAgQ0tXoXu3Vf4d2F9LV6KNPTXjdssqJrkZfNV79
aW8ZJ7qa+yGk35eN6x3pavTG4xHWZUqOdDV61JOEA2rbHehq9LDS+hFDdB3o
avQTu4+PST5oT1dzfXbkXbxgbU9X8/e6W7no82k7uhr9YPCfQ8q+dnQ1+pgN
V/q43LGlq9Ennr82PSzMlq5G9+tYoz/nvQ1djR7/JXnSmtk2dDX6mkytoekd
1nQ11yFq5edjqdZ0NfrsRc2iM0bWdDW67Of1fhdPWdHV6PXzQzQLA63oavRN
sr2uX3hpSVfzOzY69D89y5KuRtcz+HEpS8KSrkZPmdfHYHe6BV2NHtn1YEmy
yIKu5jwJMn0zu9ScrkZftqhkUPgkc7oafeQpq+duXQK6Gv2Rf84K9b0Cupr9
VXpog4eArkaXe+kcefO5GV2Nvn32wf07F5jR1Xyfxn/WkzTM6Gp0158hEk7n
TOlq9GlHdru0RZjS1eiFlZduXWo3oavRB83edGPJPhO6Gn1DSJWTe28Tuhp9
aPZ953ePjelqzqsDaUr9DY3pavRbZ0d0PznLiK5Gt6s1M+5xzZCuRp++7Mfi
aFVDuhr9lP9hg1NTDOhq9J2/mgzbr+rT1eiLChI2+mjr09XoWvYv4xbP16Or
0X+pjG3JfaxLV6N7T52o+MZRl65GD3+tWy61RYeuRq9TTo+0atGmq9FFrW/z
A0dq09Xo73XufxxVpEVXo2/+bi0zw1qLrkYPsMqyXLBdk65Gd/rxMjyumyZd
jT4nxPvgojkadDX643FCnTnv1elq9KXpUg/Gh6nT1ejS5rWlQ+6q0dXoLzR+
C9z91ehq9P3nXGq0L6rS1egx99aY/HRWpavRPz0qqS7NV6Gr0Y/3zvHMcFSh
q/n+1y9NfTK2J13N+/fmy5tRk5TpavRzKw4efh+jRFfz96p4ZTIqXpGuRp9q
ZTT6zkYFuhp9W96bGLvDPehq9JdKkQuTL8vT1dw/hadSn1fI0dXos+Y8LdP/
I0tXc/0ProoeaSxLV6NXfZkcmhIsQ1ejD1vQeLNgoTRdjb544cwn5VlSdDW6
4RrJ7XWVknQ17xeN85btGpJiuBpdUDo6qyNEQgxXc141Z9m3b+suhqs5h18L
yutedhPD1VwfX68Lz026ieFqes855H1MZSddjX7DzdDZeHkHXY2+58vttCLL
f3Q176+4tj5DK/7Q1egRexVjHm1tp6vRX3sJAnuF/aarOX9slP/sNfhFV6Ov
fj265FtDK11Nt0hHlNvc+UlXo4sjJMaMym6hqzn3tAWpS7b+oKvRs557pG9I
aqaruZ9lVpzeGN9EV3Pehn9U6tbeSFejq5Tt3XGvRwNd3asuf/Wruf87j6Kq
3GtuHnQ1usnPN5/217rT1ejCGN+zf/e509Xoh1o0jZ+HutPV6HFb5jjZybnT
1egqIb3qOq660dXoxrvHjxq8wI2uRjebdTJB186Nrkb/d/P91AkfXOlqdEFZ
jqb1Hle6Gn3f4JwtM0Jd6Wr+3EsxVTYKrnQ1uvPxWLkpJS50Nfo5WTs14xUu
dDX624gWieGeLnQ1enGzQbVsizNdjV49sPaMR54zXY3e1yllxafpznQ1+p3f
lgOULZ3pavS8Z2X65z6I6Gr0AS272isOiOhq9IT7MbVLokR0Nfqi4D7Nafoi
uho9SOqPlstrIV2NPm7Z+OiB6UK6Gl22r/jZ+5FCuprdd+jCFh0hXY3+c8HC
3TJnnehq9Bkb+l42cXOiq9H949zHul10pKvRNdRGbuzj60hXo19MPzxsyA0H
uhq9UefXudB+DnQ1+oKLxndCHtnT1eg+mk82DYywp6vRX+/I1BZX2dHV6C/P
W81ymm5HV6Pfn3x3l+5PW7oa/WbfT4c6V9rS1eie3W+mvVO0pavRp+xMS7q0
x4au5n7bmzBrs40NXc3nbF83LvqSNV2NHm2VNdl+gDVdjf5+4ZV1LZVWdDV6
YdjesnOzrehqdMstXYNiJazoavQQ9+3d7dMs6Wr0LY8a2qvsLelqdK99O/w3
37Sgq9G3Vv+p9BptQVejL1VLqqhqMaer0YfoLfVLTDWnq3mut5lqG1mb09Xo
YX8zZ56/KaCr0RV/C/oOiBbQ1ejTVx3LfdVhRlejr7ayPzEpw4yuRr/isq9/
nY8ZXY2u0/x8S8wbU7oa/dvzQ+vrlpvS1ehal674TjYxpavRUySfnXl904Su
Rj9Snfhz4DQTuprnN3ZEj0tKJnQ1+t22zPbAacZ0NbqTQWm20gUjuho9eXmV
82NZI7oavTM9NXtdpCFdzXl1aJyed74BXY2+9n7J7o/SBnQ153+uimvyWH26
Gn3Suvh/Rpf06Gp05eNmEqc19ehq9Nkn5Ib7LNClq9F/P9GUvlauQ1ejLx6i
Y+bloUNXo3/ZXXI5d682XY1ee+pctY6ENl2Nvml2zJHlM7ToavRH98JVKss1
6Wr07YIrHqIATboaPWNjpXVCvgZdzXOt8OzHHWMNuhr99vuco3Lb1OlqztsH
YYN7y6jT1ZxXw479XbBMja7mvm2aeu3gT1W6Gv1PbMDRW7NV6Wo+x+Le5Y/f
VOhq9BHqK9T/TlOhq9Ert26L1S7rSVdz/xj/W2L3Qpmu5r0QVhDh/E6JrkYf
o6loaf9Nka7m/rexldL9o0BXo1sdVFBqV1Kgq9FPB60e88CiB13Nuarlr7w9
QJ6uRl9/5FqvwePl6Gr0FclRMn9Xy9LV6HNuDlmVkStDV/O7++5/LKqQpqt5
vyiJZC7LStPV/L1+3wrw9JGiqzk/b7dmHJ8vSVejvzju4twzT0IMV3M/H36o
P72huxiuRh9WWR97QdhdDFfTgbK7wv8s7iaGq9FFSWH5E9d00dWcY6X3HK6Y
d9LVnOeVN0Z0lv6jq9Efb7OOtl3yl67m+k/PXCJ2+kNXoysI9r4QN/ymq9E/
xFoftzv7i67m+udZC7onttHVPI9TXBfdiGilqzkPtQ4/m+X6k67m+19fM0tS
r4Wuvj/feVfjgmjxDsFqads1nnQ1uuzE41+lPT3panTHkzl/or550NXoo/1O
93be50FXo0s8enYnaZgHXY1eUa21daiUB12NXmUck7n7ojtdjf593wWFsTHu
dDW6n9Pt0gNm7nQ1+rpTI2qjKtzoanSlUL3Zuze50dXoyVUnxg3t60ZXo3vJ
7ilJ+udKV6NP2j/hiHOBK12NLvM5VmLcLFe6Gn3oHfuvshaudDV6jeHbSId3
LnQ1el39rejHaS50NXrTQd1ujSEudDV61MB/fusVXehq9IdvVgkO3XGmq9FD
xl4867bKma5Gv2OzozXI35mu5p83kfpe/ldEV3P933/JrLoooqvRR7Wrmkxd
JKKr0S1NgifOdBXR1ehh0YEL638I6Wr0wsGnRn87LaSrud9cnQwmzxPS1eg3
+oVfGSMS0tXoKw8NXXX4oxNdjf7l3KCJyZOd6Gr0yTcSBRO+OtLV6OfrLz3y
nOVIV6N/rj0+R77Zga5Gzw1qUilf5EBXo2df07y6u8OerkbftCF1xYhke7oa
3T/v3DgVZXu6mvs56OWMm2l2dDX6vyeWOXPN7Ohqnsf4EiudPFu6Gl158pWG
S962dDV6aJ2MTMRdG7oafVzduqX1ETZ0NfobWY3hy2us6WrOk7opB+QWW9PV
3G/rHCZukrOmq9HdxnbPUd5rRVejDzk9ffl6Ryu6Gj3pUWVNZ7ElXY1u1Pfy
99kjLelq9NmCyEOvGi3oavTjwnYp/zUWdDX6Pcu7ggNGFnQ1+qVvn2X+XDCn
q9EjbkZfGBpqTldzn29x9zvYIKCr0ft0hR+tWy+gq9FfFKX/EFkJ6Gr00xfK
RLG3zOhq9P2u12bkTzKjq3lejBSyaqTM6Gr03Vaj6nWyTOlq9KkdnkFBwaZ0
NefzIvsrs+tM6GrOpeKsiG2bTehqdNddikanXU3oavTh+dPcdp0zpqvRp+1+
cPy6pDFdjV67+tLx6jAjuprffcm6vu2ZhnQ1eqT74lTZPwZ0NXrw+uytisMM
6Gr0b/vMJ8hl69PV6M2DXyn/7a5PV6M3zt5z7FOUHl2NfsjIzPfWZV26Gj2n
p+qbDH1duhq9qKxx18zlOnQ1+hUT22Wiam26Gr2vme7exiBtuprn4ny7xJE8
Lboafe3F5uIhOlp0Nc9X357fmldp0tXoDh3Bazc2a9DV6GuCVxw3Gq9BV3Md
di0el12mTlejJx6quWATpE5X0w/Hp9w4fFmNrkb3Obdsg7qLGl2NPvNpmumy
XFW6Gn1Ff9Wdb6xU6Wr0o5/tW1wzVehq9J/mugOSzVXoavQlDe+G7h3Yk65G
T/k6zc0gVJmuRg8UnopOHaNEV6P/rZvZ0DhDka7m3Ki2/SVerkBXo8tXh6Wv
2t6DrubzHSy/nz8pT1ejG3y+pF55X46u5v6c3s2sqUGWruZ8KylxbVOXpavR
C2RzpzT0kqGr0f8UuJU9nylNV6Nn6l3Zmr9Piq5Glz63oGjpM0m6Gr01Ze5C
DyVJMVyN3rIp4+HnARJiuBp9b/ON6uSN3cVwNfqi5DX3tcu6ieFq9DbVmKN7
9buJ4Wr0hsgTCoKyTroafY/5P9WWBR10Nc/jN8lNx4z/0dVch9PnT4vL/tDV
vKeu38q7trGdrkbf1fvgedOhv+nqkX8Kjkku+d/fC3bOLq+o8qKr0b3Cm7tO
b/aiq9GnTfvwQ0bsRVejt0ovK3jZ5ElX8zlHPw80P+xJV6MvDXW9Xh/mSVej
6yrM1BHJeNLV6N2l4kc3X/Sgq9GDOwK3OMzyoKvRB27acfWzsQddjb5lru03
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
uhr9XY7d5h7VArqa+/n9iH4XlgvoavS4Q3ePROkL6Gr0vPNfcjsumdHV6Iey
VGamjTKjq9F9Pmypsf1jSlej3/x+zOriXlO6Gn3njrXu/n6mdDXvhc4w/evV
JnQ193m94J33GhO6Gv3O825r8+1M6Gq+p9UjH9+jxnQ1z6nCxuFKLUZ0NXrY
vG4zywKN6Gr0eq2XKSm7DOlq9OE5h+941hnQ1ej+Km8dXgcY0NVc59wvD+fs
0aer0eceU7jQ/lOPrkbPdln6e3GIHl2N/vnpoEPf8nXpanSD7cnXQ1R06Wr0
p6N7Tj45X4eu5j4UXNvX8UKbrua6uQ9d0ruXNl3N8z5vusyyTC26Gv3yqn1h
OT216Gr+vlZT5jyM16Sr+R0nWE/7XKtBV/O7X3EZ9GOUBl2NvnhFsc3P++p0
Nbr+13blOn91uhr9xfRv8i/PqdHV6ClvNltfdFCjq9EvXngat+mYKl2NfiB4
lVykQJWuRg+umfhZ75AKXY3+19LY8KmJCl2N/tVyz9L2Pj3pavQ+Zz9l+QxS
pqvR+3V1ez1thBJdzXWwznVMnKJIV/PevLG8aPUSBboaPc3pa1bslh50NfoK
Ra+uwSfk6Wo6MDH9g3qpHF2NrpWpPPNWvSxdjW5WvuTMBHVZupr3slJ6WV0v
Gbqa+zlY9nP0LGm6mvPtka9k8X4puhr948bNQT2fS9LV6INmu9wN7ikphqvR
m3K8D80eLCGGqxfIF5Y6JP7PLQ3qz7vl+9LV6FmnWqa9ivSlq9En9slrtZf1
pavRrbodTPp71oeuRt/ZU02773gfuhq94q53oXxPH7oaXUrCL7b/VW+6Gj11
okN/qVnedDX6m4tygd763nQ1eqL/tal1pV50NfqHFttr2vFedDV6zzd6g4vs
vOhq9N0h/fU/vPGkq9GXB493StjkSVejZ+7s2Jwu9qSr0V87Hw90bPGgq9Gn
JFYN88vyoKvR01IUr90b5UFXo3cGpm59ouRBV6Obl+Q/DS12p6vRHdafXT1s
sTtdja6Xf+/UPXt3uhp9k53mmGsf3OhqfheZExsd093oanTpLduC9Ya50dXo
/ffe2pko60ZXozfmCZdOKnKlq9Ff+Jz9W7zYla7mOj82NtkndKWr0U/39W34
UetCV6NXt9+YVnLEha5Gn9MWtVt1rAtdjd4kOJ34WseFrub7LBpma1zuTFej
uxrcSqva7ExXo2tkbXysP8iZrka3ddd9+UzOma5Gj85+elb2toiuRle8ojrz
wioRXY0+xNdW4mOAiK5GF1mPX7Ghm4iuRrd51fzpZJGQrkZfa6PkM3ilkK5G
f5/+Knmav5CuRv/xrWZHV5cTXc391vBK3zLJia5GN3qWkdNH2omuRv+2337g
6PWOdDXfs1us7AxlR7oaXX5XUO3cHQ50Nfow0cw/c/Qd6Gp0C41tfaYesaer
0fcII59G2NvT1egmU4fl+J23o6vRZxZ/rzAKsKOr0defPTTl1wNbuhr938Br
Y+6OsqWr0a8u2liy9YsNXY3uKep9LGyRDV2NrlwspawsY0NXo4/4/rX7jV3W
dDX6dNeWlFnW1nQ1+qFW7XMql63oanS7Ap81J4dY0dXoJ8QucoEfLelq9Fn1
NwOfxlnS1ei5hUcCRva0pKvRtbYs6VGRZUFXo4snvM0a5m9BV6N3TR5pXFxh
Tlejh/hOXmYfa05Xo/8xnnt7s7I5XY3+SOWldH2OgK5GH9pV2zsgWEBXo/v/
+pa8ucaMrkZvCVZ++SLZjK5GVzm71E/b0oyuRr+5oX/JsDumdDXX+eOauaum
m9LV3OfnRAPzFU3panQ3ad8x5adM6Gr08/IpJ34MN6Gr0e0PNiZq/Damq9FX
FacHuwcZ09Xo1g92FQ7YZURX8/fdMehLyFdDuhp9wA35dwN9Delqzm0Z6TzP
bQZ0NfrTOVFTdL7p09Xof/fpadUF6tPV6OMVHR6cOqBHV6M7Dp2dNr1Dl65G
Twg/tEYzSpeupk8Ozc8uuKZDV6M/2Bqn0M9Mh65GX7jN5dqDtdp0NfrlscqP
+37XoqvRLX3GDjozUouu5ndxnNhHrUSTrkav9A2+NVmkSVejR+4TvM09qEFX
o69saUv/oqpBV6NvT86X10pWp6t57uZZenv+UaOr0fd/NPEaMk+NrkavCh6m
MfKbKl3N918V+mr4ZFW6Gr3e6MzOfh9U6Gr0nBU1EQ7jVehq9AsW2eHKJT3p
avpHOd07554yXY3+vMZwqeMzJboa/bH6Foe97xXpavTCTeZzmpoV6Gp0P//6
kY6yCnQ1+rER5VLDTXrQ1ey5WRsn9ZKnq3mvKffoETVWjq7mPD+YtMtvlSxd
TSfYzx8onytDV/N9luj0vlohTVd33+r7pnfy//4edP+RzFJzP7oaPVojrzD8
US+6Gr0lqne3nLhedDX6O7v2d0sEvehqdKv99mNLHvnS1ehBdwXJ65f60tXo
ubLqo+9Z+tLV6N4jDL6seuZDV6O/PjhUeCnBh65GP6Z0otd0Rx+6Gj0jTF9r
xxtvuho9svuy614p3nQ1evndtMBIb2+6Gt3rjnVWa60XXY3e90FFo8IeL7oa
vfuBAPN9A7zoavSxAQ2Djv/1pKvRRzlHzBGe9KSr0Q3yvmx1HudJV6MnNnQU
5qt60tV8zsSapmMlHnQ1+qrfVV76cR50Nf98P/0MeXsPuhr9YHmhYex7d7oa
fUbws5IRO93pavQPR2emXRjgTlejOy5bvndbN3e6Gn2yReuLr+fd6Gp0habT
Qwtj3Ohq9PkRaxRkLdzoavS1Tp4qj9+40tXoN98lTFTb6UpXo6utVlJ4OtiV
rkb/aLNSUUHWla5G3/djRsz16y50Nc9L30iX5qUudDV6aHvpxH1uLnQ1emaC
k9StJme6Gn2o2nfdabnOdDV6RdnknDXTnOlqdPmOT4UmFs50NfpTubPD3D+I
6Gr03mUK8+4cENHV6CFFJqblUSK6muv2SWfKGAMRXY3+yVa1b3SlkK5GN55n
cLNqj5CuRn90KvDz60ghXY3eaLzmVIi+kK5Gv3H0TNi6i050NefM+dDcST5O
dDX6z8rTCzyLHOlq9PDfSecl+zjS1egyeVPib99zoKvRJ6TXPUgY5kBXo1en
bipwrrCnq9E/Pyn0eRNtT1ejjwkrnbn8mx1djR5bJz1Ea6EdXY2uvjGzLqub
HV2NviH+yWCnVFu6Gt10w77l+Xq2dDXnQJD6aqvjNnQ1eqfIekaapw1djV7X
UuzZddearkb3TSn8PTbSmq5GP5Dw4sz5eiu6mveI1uM5MglWdDW6VtxgzyEa
VnQ1z++3Oo1Nxy3pavSLv9yUb/tb0tXo0/Zn27e9sKCr0R8uOxNnNMeCrua5
6zj7x0/Ogq5mT+wqHHHYnK5GN0p5dWNaL3O6Gl31a5z2/FcCuprn5ZVMSewi
AV2NvsPnwOMYDQFdjb41f1jv6LNmdDW60nUD84FhZnT1f+f39zLHn6Z0Nefh
mNLwHrtM6Wr0wC+zz77zNKWr0cUjCw6eeGNCV6Mv7hZlPi/RhK5GL/htFORk
ZUJX8x5cG6z/YK8xXY3+tlpT2q7OiK5GL1lSOjLe14iuRr83Ndbi6mZDuhp9
2BGZpU2fDOhq9D59Jk7W9DWgq9E1boS02e3Up6vRpR1X+7g26dHV3G9LdwU6
Dtajq9ETcpUN9XJ16Wqea8OoF78Udelq9Fnn3iy/M0eHrkbfbfrMdH25Nl2N
7qY674mvjzZdzfefWZb24YgWXU1XrOlMXqqsRVej6437mi0Vr0lXo497NFs5
sVaDrkZ3ujqm5PsoDbqac3Lk9IphD9TpavQr/TxHHhWr09XcJ69GhXw7r0ZX
8/19Bj41c1Kjq9H/Zi36PPi4Kl2NPm+ny96ZFqp0Ne+F+ttd8UdU6Gr0JOFE
k5UCFboa/U5UiMa3AT3pas6xcQN3XA5VpqvRHQJPvp4/Vomu5txYP6i7ymxF
uprn5Wyl6fZEBboa/fS2b8P/7e5BV/P5mTXnBxbI09WbdYoaRqz/39879B/n
uR/xp6vRFzd8NNYc6E9Xo8+uOXA5psWPruZz7iauF2f40dXojoU/t6T29aOr
0T9nDHsV/r0XXY1+fMrr6bvSe9HV6BsWlvQP7dOLrkZf9sExYd13X7oaPb7M
SsNrry9dje5664TipH6+dDX6serMufI/fehq9NqApiCbQz50NXqJT/ium0N8
6Gp02eMbJlf886ar0bUcfC9PPeFNV6MPWdJ9/7xIb7oaXX3LRI02eW+6Gv2I
9Bvz1ktedDX6JPHz57NneNHV6L/O5zhM1Peiq9HlHI47lz3wpKv5nO/KdZdX
eNLV6CeUFKNMRJ50Nb/j9uJNXR896Gr0uhtBa0aledDV6L8DDvR3HOhBV6P3
GXvr3fIud7oa3dItc2BwgTtdjd5ZZ7grdbo7XY2eV929ZLCxO12NblClVbnu
uRtdzfXsp1Xtt9GNrkYv7Heyck6gG12N3iCx/In+X1e6Gt3jht6t3mdd6Wr0
q3oqRZ9mutLV6HMElTe7W7jS1ei2Oxsr0t+50NXcP+2nJU/udqGr0e8+Sezv
E+ZCV6PvuZqf30fZha5GN8lO8rl3z5muRp9e4/7jbrIzXY0ePL6zIrC3M12N
vvJSt1avLhFdjV42c/TAE1dEdDW69U/T6rSlIroa/WZT1OUuTxFdjf48sGfV
h19Cuhp9rJt9SMAFIV3Nn7v9kJb+YiFdjW5THuo610NIV6PPm+g6NrHJia5G
b0/fqq0b60RXo8/cMXj/sTZHuho99V3NX/t4R7oafWdiqdfxbo50Nfp+v/Dx
Bmsd6Gp+r9uP4tcoO9DVnD/Nsdu+7LKnq9EH/ZqV529iT1ejqxwqq9iUY0dX
85wmntR77mZHV6Nfsm5bplZsS1ejG4XtlOs31Jau5vcynnR7/lsbuprv6Wdf
tHOWDV2NLi/I/pv/z5quRu8vXLX6Rqo1XY0+7duoCaXG1nQ1+kRB4b7SM1Z0
NfoNK4F/cZAVXY3uVyc99HSlJV3NdXO99TxtniVdjR56+1zlQjlLuhp93Uaj
6QMPWtDV6J+KPdfoeFnQ1eg7jIQ+b8vM6Wr0o21mW9JjzOlq9IIZZqmD5c3p
avTADc7e7ZkCuhp9+dIBBzICBXQ1+u694SUeH8zoanT3PMfTpYlmdDW6+a/j
McPNzOhq9IUTU7pX3DSlq7lPTqQsCJ1iSlejKy4a8ahE3pSu5nyO26zllGdC
V6OvyLgbvjXMhK5Gv+WmY/qyxZiuRu8KzD8c39uYrkZ/9Mm7l8p2I7oa/Wfn
uq4dnw3par6/QchveW9Duhp9dLar+5wtBnQ1eoxN0Z2Sr/p0NfqXFVMu9wjU
p6vRL+ulGAcc0KOr2b3jJKZ16NLV6Hqmk+avjNKlq3lPDZ67fG2RDl2NbnX6
uChBoENXoz+plds3fb02Xc3zPn/+w8BmLboa/XXl+SfKo7Xoas7zf9sKSm9r
0tXoqlan1ix21aSr0TeNPhqueVSDruZ7Lvlhd1RTg65GPz+7h575enW6Gv3F
zP72OzvV6Gr03ip/5vxaqEZXowv2hP8Y8F2Vrub30lx5ffMMVboaffy61C+3
vqjQ1egnTZMWNExRoavport7vio+6UlXo/87kvHF9IUyXc3975LZpfteia42
OBjQNSv1f39fi9kwZe9OMV2NrpsxYFDqNDFdjW4c81H9io+YrkbfX2tww6qn
mK5GHxs9I//gLX+6Gn1T4I3zM2P86Wr07/o7DpzS9Ker0VMvW8ybc82PrkZv
XprlnD3Vj65GH5DiWhep6kdXo0sHvTm09nIvuhp98dLdUY5TetHV6DGFoRZD
VXvR1egPjnzsqr3iS1ejn7VR/9k5zZeuRm98vVtuk6YvXY1uYWXQJ63Yh65G
v33Y9aTeXB+6Gv1w8IwBOkY+dDX6z0I3sy0PvOlq9H5J3XyS4r3pavTfAyz2
Ntp609XoPc2agp+/9qKr0ffm7x/gnuJFV6O3z43OUvX1oqvRm5oiJkxt8KSr
0Ws7d672OOBJV3MdPgvUk0I86Wr0tfva1ftJedLV6CbSkqlrLnjQ1ehuPY1X
i2d60NXok9qMuxYYe9DV6Lti7kual7vT1egRj1+nDV7vTlejOwz6e73Zz52u
Rj+m82i1SqsbXY2enP716/ETbnQ1euXm8h9XJ7jR1eilgSrZg/Tc6Gr0oDxl
5YgyV7oaveCwh+3rDa50Nfrjti/dXwW60tXoy3Lm7QntcKGr0dcrG7QHXXCh
q9GnfhMIzs9zoav5nocuGx60d6Gr0TVGKTRKfXWmq9E7dUTpn44409Xo+j/E
5v7RznQ1+nujvjs0DJ3pavR/Fn6Nk16L6Gp0+79mHsLdIroa/Z1xdeyiCBFd
jT7s5pjjHpoiuprnt3rum9hyIV2N7jLxu6rdDiFdjW7mfWhIVLiQrkafmBCU
1kNTSFejK9s6VE/OdaKree7mJVzLdXKiq9E/hTx7XHvWka5GHxc/3sjQy5Gu
Rr8nFXE2qMiBrkYPO3I/bUqQA12Nfujdg/Jlj+zpavSjgeGx60fY09Xcb2mD
lm2stqOr0bfJb/2dPMuOrka/MqGhaeFvW7qa59TDaPaYZFu6Gl1R42mcl7ot
Xc33zDuqq3TYhq5GH61qM+qlyIauRn99t8p/d7E1XY3+tafvi6Hh1nQ1evSf
w+adNVZ0Nbr44EyXI0ut6Gr04f2qevj3tKKrOedTvM4+PWpJV3N/bsh2He1j
SVejd0gNTqsss6CruW9TvT+GzrSgq9EDTyw2uSFlQVejG3V2RFgeMKer0V9O
LdyU5G1OV6NPcEx9/PyFgK7m/jEZYGqyQEBXo98vvJgyXk1AV/Nc9Nuhtee0
GV2NHiC58d69EDO6mvPfPzC36YcpXY3utyrktvJOU7qac+x4b2NzT1O6mq6Q
SbsmfGNCV6P7Jt084ZpoQlejH7wiavz//w4PV9MJoQl6fTOM6Wr0E1GrTXTr
jehq3lMp3ToqexnR1ej+1nOvpW41pKvRv+l6xTp+MaCr0VM0c22u+RnQ1eiD
X0s1+e7Wp6vRn0+dUZ7TokdXoze4ff8kG6JHV6Nrz9jqFH5Kl65Gj1X0Kd6s
qktX8xz1Ks4pXKBDV6OvmlrbVv5Km65Gn7lgXME7sTZdjf65o6jp5XEtuhp9
yMrtl65raNHV6JprhxqkJ2rS1eiFNRGW45s06Gr0FdXtn3TGa9DV6EPHLJp8
/Zk6Xc393ON3wYhgdboa/c2+3e/fXVOjq9Gvfh/XOtxDja5GXyDs0+3qaVW6
Gj1R1VZZw1GVrs6xKlFJ2hotni/5RNhrbABdje7bHr3NWRhAV6Nf2Dv68CSJ
ALoa/eHRLZOelf/navSEO7ffrDgmpqvRh70tVJ66VExXo/9TM+lMGSymq9Eb
1Q/mNZiI6Wr0umnn++nU+tPV6G/cnxY/2uJPV6P/Ks993unpT1ejF5eGrc2u
9qOr0eeIit7d3+BHV6Mv7HzxYZqrH12Nvmrw/D0r3/Wiq9FfHRuhqLK+F12N
3m9AL3891150NXr99Hte+6t86Wr0w4u2SWSk+NLV6HfHGB9U9/Slq7k+JV90
pD/70NXoSqHhsXO3+dDV6KZV184NF/vQ1eiBhfNrChq96Wr0tVW5Cpv2edPV
6F9FGXbVg7zpanTJs+MH5f3zoqvRVQpVFrTmetHV6EE2+dnno7zoavTWQ25N
zcpedDW6/8XNw45d96Sr0UvMMx6/mO9JV6NbtdnHJlh40tXov6/LBhyt8KCr
0bMfffbrvdGDrkZXHLRgfqTYg65Gl14UXl3/052uRg+9rb+1/bg7XY2+zyh8
bcI4d7oavfxH/L1ETXe6mt8lViaq474bXc3vXjC6X0uSG12N/vhVRepEbze6
Gt3N84nbkB+udDX6yYT1fc7muNLVfP9PAUXbJrrS1TzvXvYn6g1c6Wr0L8bz
lG68cKGr0beYO9X13OpCV6M7flra/9VAF7qa58JhnIOhrAtdjX7G/O3eymJn
uprnfVx9usZKZ7qa51cx3v6ujzNdjZ6sMHtk228RXc1zp3bI7MB5EV2Nfvle
zebiBSK6Gt25Vi4z2kVEV/P7jrg7ZckPIV3N9wl6+0rxjJCuRl8x5JeE/nwh
XY3eknK15oizkK5GF8buUx/6xYmuRn+dllQ9cIYTXY1uq91P7NfoSFejDx77
y9My1pGuRm+o3Vwu2e5AV6M/X9yh/3KlA13NueppqHNQ1oGuRr/Y7erTsVvs
6Wp0h0V7Q9T17Olqft+AaQevHrWjq/n+PiW3o4R2dDV6TlrAw5YrtnQ1+lXN
SVdWDrClq9HvWB/K6P7Khq5GLzKPXrRkmg1djS6Y9ifky29ruhrdJfmyx8AN
1nQ1f9+Z1U6ZBtZ0NfrMLRm9W/Ot6Gp0d02VOJ8+VnQ1z/X3kIrFryzpavSx
KjNn5syxpKu5DmtGeD2TsaSr+T7HZAb82G9BV6N7O4/OlPW0oKvRj8y3C1Mv
M6erec9ODhitGWNOV/O7vI28pSRvTldzfh6wSf+XKaCr0UUbw95VBwroat4X
l+dnXP1gRlejf9inWbk5yYyuRr9mUnRopMCMrqZz7tX80r5lSlejb3zx+9PD
qaZ0Nc/12Ii5SxVM6Wr0+NnDDxmeMqGreX4tA1ZeGG5CV6OvO33WbMtvY7oa
XXdgztX9/Yzpaj5HeOXtnt1GdDXPV7Lt1tV1hnQ1+vhzpjWjxYZ0NfqIzEvf
TNIM6Gr0CQ2tuc++69PV6PcUb3svGKBPV6NP2yd9WOKYHl2N7rFuWdMKaT26
Gv26R5VL7WRduhq94N6jJQF3dehqdKmAV4/X2uvQ1ehR55cEXtmmTVejh6/V
+fDujxZdjf5njcKl75O06Gp0C7tdzxufaNLV6Lcv1/Z546dJV6Pbr7TQuJin
QVejK3+JGJZkokFXc/9fWSLjs0OdrvbMDzJL2xktNhnieT7BrjddjX5Q0W3C
0n//uRp9/XLP9ace/udq9BUaBk6CAwF0NXqeaf6IsrkBdDX6ja7zMtd6B9DV
6NYB3/1rNALoanTFN/KyA7/852p0zeH54+ovielq9NW1KwaXbhTT1ej/LiiX
fxonpqvRg77Wtfn877qGq9HXlO259FhGTFejt/R39Bef86er+XupZY+MjPKn
q9Gdt8XdbpD2p6vRjaonbf6T50dXo0t+Mi1MGOlHV6O7bgofnCDhR1ejrzPf
NrQ9txddjb5vefSduhG96Gp06QD3yyMke9HV6LMt4kW98n3pavRE+3XCjNG+
dDV60rtj1xbI+dLV6KWrtD7cPudDV6MPjpI4tG2iD12NbvgmpXuFqg9dzee/
vCWfdt2brkY/eeNc0eM53nT1f/skzCbJ2JuuRk+enjIo77EXXY1+5L23U3iC
F12N3qHv+jJW5EVXo99Z7ztA6aMnXY1+N1Jpk8lOT7oa/Ux+WPbJfp50NXr4
7VP7C/540NXoNhaFi9zyPOhq9JDb7W7CCR7/R6RdRkXZvW0cFhsTxAJB6Y5h
ZphhiGGSLgsFC1FEEUEBsRUUuwssbMLuQDEwsBMLW1R8FANBEbHe//vhPPn6
W6yZe/a997WP5ZKuRm+v+vxqe2cpXY2+9Eer9JXXJHQ1n9/teKff6RK6mudo
WO+C5xIJXY1+x8LF2/OTG12N/iB9ZZn+dje6Gv1um9MzYwa40dXoO1qWezsZ
uNHV6BVzbfWSr4npavS5K/f/FWSK6Wr0ViFL28V7i+lqdA+92xqTHyK6Gj18
VWpe4AERXY3esu149+rRIroafUjg2X8GNiK6Gn3YI0+d/eVCuhpdp/sFZclG
IV3NOTbFsSRigJCu5vfG+awc2lVIV6O3XXx6T8V9V7oaffn7GKOKla50NXpM
xdNnQ3q50tWc52n3fvfWd6Wr0U+5vJ9y7raAruZcGnVwyK5lAroaPbvnmd3t
egroas7J1tlxH/UFdHXDuRhnNz/Pha5Gd8iVjnO2d6Gr0esWDdl3ea8zXY1e
pVf4sZ/Yma5GP/K0qfDpCSe6Gn1g7re5fVVOdDX6834OP85fdaSrObe13vNs
+jjS1Xz+nvvV6c8d6Gp0P6PfrjdHOdDVfC9WCwbo19rT1ZwnrY5eDphlT1dz
jq2/kTFB356u5nq21V+6brMdXc37y/RQ3UGBHV2Nfty/rORssS1djb7m7nqd
C71t6Wr0j62aHyiqsKGr0UcN6/xs52Qbuprna83pxUva29DVvN9LX1+Ny7Wm
q9HD7g7eIPGypqs5P5v/1v1VakVX87wUTel2JMGKruZ9JFnxaHhzK7oavfL+
O/9WWyzpanQvmWFqrpclXc37ZcCxoZIyC7qa9+wRP8NTaRZ0NefzQM1WWScL
uhr9gKVx092Hzelq9OQTQt+Ofc3pajrnwsuk5FozuppzVSd1XskaM7oa3X2o
S7aelxldjd7NNmhb+EtTuhr9dbPvh+bMNqWr0RPE4bcPOpjS1eiBVpV/d+T2
oKvRRTPeLXv8vTtdjT5t9MbhP/y609V8v1eazmu0wYSupjeyf7Ws/WpMV6MH
2YR/fxhgTFdzP4cWReVt60ZXo8vXVfgO/WdEV3NezYi51HKQEV2Nrlm0//2G
IkO6Gr1dlvykSXdDuhq9x4e4gIUZXelqzuGp47e8rehCV6M/7LDxtmNoF7qa
90Ja8zfRxzrT1eiWG4r/yzDvTFdflFwR7V77v/kWdL429k+Dq9FL7pWcHH5D
RVej2+hPvrwpR0VXo/eXnjHtkqiiq9HHeidevipX0dXoL1r0PX+ivYquRg/I
lnZ697LB1eh/xLeLww4q6Wp0z423rn+bpaSr0R87P5M96Kukq9Fntspu881G
SVejf9es8A+tb3A1eqHugK9vrje4Gl15LrXV8U0Kuhr9qWdU9qVkBV2N7nR9
2noDXwVdjd5hfIDRBkMFXY2+ur3c+dxjH7qa72vxfvuLM33oav5evSUCpYMP
Xc3P3xXvK7knp6vR93S+lrx9mpyuRr9WY1m00EZOV6PLm72w/XjHm65Gf5LQ
88zFqd50NfqGtxdnd7X1pqvRH/yeMPNNqRddjT4ycPVJu3Qvupo931v6n6MX
XY0+Y9isXz0ee9LV6GWTRre7M9eTrkb/fP7T+F9unnQ1+iDH79JNbzzoavTz
L4ZEFa30oKvRK6b+K++l9qCr0cM1ax/G1MjoanRd3wrvj9tkdDV6v6Uru33p
I6OruQ8jVGmjm8voavRQ23m9hx53p6vRC9p9OX473p2uRu95+vuuQhN3uhq9
0en2QuM7Urqa67YkN7wuU0pXo08q7dg2VCalq9FbTNifYPJZQlejX7h7NnXE
Ngldja5TOsveLlJCV6O/7+a0Mra9hK5GP+JYcahbiRtdjW4y6+byoGludDXP
y6lfrt/FbnQ1elHRpLVdP4npavQ3FwJvHMkV09XoXTfG3b0+WExXow87fGbP
oK5iuhr9oUQ2fORdEV2Nbis5UP9xkYiuRnc+/2t8pZ+Irkb3avPm8bAmIroa
3Xiyo3PEGSFdjf7z+pLUc1OEdDXng7ToYIG7kK5G7zRt0KeWta50NXqPlgZ2
rw+50tXo5rrj46XJrnQ1+uUlBkebubrS1ZyTm9L0QqsEdDV6kz7dp+vtF9DV
6P8+zWwSMlZAV6NLqjvmNnEV0NXop2ZMvjnyjQtdjd44/MSG03EudDV6lm7O
qZYfnelq9LzNl2R+45zpavSU8bcNJ/9woqvRP6X7jNgy3YmuRj8xY4nNqeZO
dDV6H2O7ETeWOtLV6McMx9jfNXSkq9F3Ttk59dp2B7qa82qfRWyhwIGuRr9y
pO3H9afs6Wr035plhilB9nQ1+r1vF7/LH9vR1ZwbQ4vm/RtlR1ejx/VKfXy4
3pauRl//7FX14EW2dDXn5KKPZX+629LV6F/Sk7KXH7Shq+mH1TKRkZ8NXd3w
922PZD+1pqu5zvVbLFulWNPV6LsebZk/rpU1XY1uJNxdeWOrFV1Nb8zo06uH
lxVdjV560vxi7ANLuprnKH1l0JZxlnQ1+nG7rp/utLWkqznfvnQ+8GOnBV2N
btq8cmOHAAu6mp459eaU+X/mdDX3c05AJ9t55nQ1eutpfXab25nT1eiRBW4L
Olwzo6vRpd87HP0xxoyuZn/VQnpX34yuRq/abdVx61FTupr3wviUPnEDTelq
9Nien/+aNTGlq3kv3Ojgtr1vD7oaXdxu4MAved3pas7JlRMyrOpN6Gr0YLX+
Qd8wE7oavbiq+FevPGO6Gv3X/PYJgf+60dXoHf3H6DlFdaOr0Q1eeNbWHzWi
qzl/dl2xP9zJiK7mOjzvdbJ/miFdzbm0T+fIf4+60tW9Twdpi3P+995/j63+
WKqmq9HLwztv+rpVTVej3+1rGi1MVtPV6LltJsv2KdV0NbqRUVOXkfpquhq9
zfdVmkGvGlyNfqfjz2lLDqjoanTv7jXPf2Wo6Gr0lPZeo3N7qehq9CajZ1kv
tFDR1eh7hyZ13POtwdXoXX9tcG9doqSr0f96b87KzVbS1eg3IpoKp45S0tXo
v04FtVvqqaSr0esHVjk/b6ukq9FnHhyWPeplg6vRnWrbBbkeUtDV6I88eoe4
zVHQ1ejXls3fMj5SQVejr7duElTtqKCr0aeO0g3Z1UhBV6N7BRb1Ve7woavR
F2gm3Nre04euRt+5YEfbjHo5XY0+vd/Ozg+2yelq9OvLz1VtC5HT1egWzZy2
fvjhTVeji9d2dt251ZuuRt8/d+O28hBvuhq9ZvmDfyt/etHV6EPF54NO53rR
1eiFZQMWD+3lRVdzn7RZeHXaP0+6mr+rwFnXYI8nXY3eQ7drmNkAT7oaPV3W
ZmuBriddjV5pdqHFjuMedDXX+fDH2eYjPehq9AhDG/NOXT3oavSCspbl6Zdl
dDX6fV3ja7GTZHQ1z2PKi/Lz9jK6Gt2kqMR5/VN3uprfu8zjcOUSd7oafeWl
NROPKN3pavSWi8QZdd+kdDWfc0ZE6eECKV2NHv7KK/XDQCldjZ64v9uotfpS
uhq94rbxseISCV3NdXaKHjZsqoSuRtd5/Ct5ulBCV3Mfin9/6PDeja5Gn9Zi
+G3TzW50NfqwfEfbgn5udDV6q06+Pwrau9HV6M26ZassLovpavQ3CX/adckQ
09WcqxdChmZ6iOlq7udGfeSjv4noavS5itKd1/aK6Gr06n+zd+WOEtHV6BfF
3bU/LUV0NbpklHZqyUshXc258WBD37Y5QroavW/6qfs3IoV0NbpniLtOyy5C
uprzzSzr6cl7rnQ1+tkf/RLer3Clq9HNftYeXtbTla5GV2a9OXFAz5WuRo/d
uGBm8G0BXY3u0S9Ib+gyAV3NdViZMfJLuICu5vNcTV/6Q19AV6PHRNkb1OS5
0NXoQRNbHP1g70JXc/6f7Kj3YJ8zXc338u6M3RE3Z7oaPeDZyNbzipzoat7L
F4eeCtU40dW8H92/+OnecKSrOT9H+R86FuFIV/N5tNktol450NXorbfXBVcl
ONDV6F9jpi6c/NOerkZfvMLqWt0ce7oa/XLWB4PRnezpavRVwUfG3NluR1ej
73Ec9tLBzY6uRp+ReDFlcoktXY3+036Ly6n+tnQ1P2favm7fKm3oavRDeTk+
PdJt6Gp0N4e22+SdbOhq9DHfV4b02mVNV9MP44t8o1TWdDX6+VPNsiIeW9HV
6B/yXqv8UqzoavQh70/3cWxrRVfzHHl/v9uswJKu5j01sexCqdqSrka/teOQ
a9ZLC7qaTpMWm4ZMt6Cr0Yt+idfWGVvQ1ehvB0q3rikyp6vR+4ypUDkNMqer
0fOaRMw8+teMrkbv92BpnHiLGV3N87V65c88jRldzffVrJ9Pu/emdDW6e5cS
n/glpnQ17y+d8zonxaZ0NXrvY8FddY73oKvRNbHTr41v2YOuRl/tl2d/L6o7
XY0e985LbbzPhK5GPxJYYB7azISu5vOYez0YNciYrkbXq5eNTjrWja5+qb0Z
8WDL/3tPuaPTPg1djT5ihkUbs2kauhq9VaBD+MggDV2NXrMieFKloYauRg8+
Onbhzv8aXI1efTFtQe4xNV2NnnJcNPnpHDVdjb40K3lwWISarkafn//N46+V
mq5GL9swzuD99wZXow8pyq5sX6Kiq9HX6ra5lJyloqvReybG79CPU9HV6Btf
abM+SlV0NXrJEtvlTXRVdDX6kvqVORGPG1zN9bfROfN2l5KuRg8pelm3f5qS
rkZ/brY+9HiYkq5GX7Vz2flfZkq6Gl1+wHDAlG8NrkaXnJjTVXqpwdXoO1ea
/nNep6Cr0TNSbTsMG6Ogq9HDuz3qU6pQ0NXoXT8OvTqjo4KuRq81Kq+8fduH
rka3b937iNEkH7oa/fyu8B9PzXzoanRLpxbHu1yT09XooRar/1xNldPV6DcK
W9+s7S6nq9FPv0t0WX/Fm65GL91yxOZ4qjddjV7Q+mpRiKk3Xc11KJj/bcB1
L7oa3X/+xXvlE73oanT3aaph5VZedDW6mXdhblSpJ12NfmDNgy1BGZ50Nb93
q+egIy6edDX60LJpz7Kfe9DV6OP62NjWLPagq9F9PxxVXfL2oKvRL0duFnb8
LKOr0V+NC/5TtlFGV3M+uBsWdA2X0dXordtFud/WkdHV6Mse9jvU6LA7XY0u
7d6z+84R7nQ1+mu3ydOvG7rT1ejzhvx5FHdDSlej51XWC6dmSOlq9F4D5y/X
lUjpanSjOUd+tq+U0NXojQ7MHLt0s4SuRnc9/qF+boSErkaPsnue87ONhK7m
fBimGfzmvBtdjT7+6C+F/xQ3uhq9cFpZoJXIja5GP6rYmT6lUkxXox+54fou
cLuYrkafHuEwa+UgMV2NbrEoILJvFzFdjV5UKElcdkdEV6NverGqRLNIRFej
W934MyLZT0RXo1/3aNLHsImIrkZPfe28QnZGSFej/9nQ2Lp0ipCu5hwbV2dQ
4S6kqzmHj8yMTq51pavRm1q00Zt42JWuRtf/9MP6R7IrXc11frRlxxdXV7oa
3bD34A1DvwroavSEuZObhBwQ0NXoWalerw+ME9DV6F8av/ZZJhTQ1ehnXYM9
b79zoavRTw4Zo5My2oWu5vfemfa4ZZUzXc05Jr9wc/l4Z7qa5/HvpIq2v53o
anSl/TW7abOc6Gred1cebH7R2omu5npW7+3tttqRrkbvUNU/cHoPR7qa+2TU
jUUndjrQ1eiBM+vMP0gc6Gr0+L+FHdtesKer0WNHvB1l0cuerkbXtVXZO72y
o6u5344vHGQ/zo6uRn95dFzrbo3t6Gp0D901nv9W2tLV3FeNsr8/sLalq9Ej
034ptp6woat5H330tRoaZkNXo6/Y+WWHwVtrupr3/vPoB4VTrOlq3o+F9Qd6
G1jT1eh1CztoXu2yoqt5T5VXr4zRWtHV6M3ynhQ8fGFJV6MnCRsvUEyxpKu5
39KWy3O6WNLV6Pfb7rzx6bAFXY0+NipGLuxtQVfznG4pyY6vNqer0W+bl73M
WmFOV/P53VaYHhOZ09XobtEvB127b0ZXo99NKthUOtGMrub9vvLix1vGZnQ1
unGqbvDZYlO6Gt0v0OvC9jhTuppzss544LR2pnQ1ejfVOfGqhB50NZ05Ob51
59Pd6erEG+EjK3P/9zxjxN1eLtHS1ejbh3xuXDNAS1ejO39at0Zpp6Wr0fdf
kby8VtvgavTp+oefLb+goavRu06uX7VyhYauRj+f8U73TrSGrkZfkBOqCHTR
0NXoFiN+ev770+Bq9NYX8htVXVfT1eg9jfRWGG9Q09Xo8rEvajJHq+lq9Inr
Cu3sPNV0Nfq8GJlUt7WarkY32lvVw+pJg6vRb20f+W7qLhVdjT78vtlyvakq
uhrdJGqV6ctgFV2N3vi3y9pKExVdjX6x78C/wi8NrkZP+z6x99GzSroaffm0
Z+vHr1DS1ehrLpY9HjtcSVejj/x5xKBAoqSr0ScfPxjQTVdJV6N/E+mmX33S
4Gr0sODKwiN7FXQ1euzeWfVPMxR0NXrhl+8aRV8FXY1uvXPwhhe2CroafaBz
fou0nz50NfrBPpd+b9/iQ1ejv4lw7h4c6ENXox/d9GLc6Bo5XY1ekXfnT+Mc
OV2Nnmr++VIHPzldjV7t1uHBuq/edDX68y3tnNdv8Kar0aO/5t838Pemq9Hr
87LuNv3mRVej9x011z5xsxddjZ7v1O11WIgXXY2+J+adzs56T7qa+8oobdHU
Ak+6Gj1T4DvvUoQnXY2+O+1a/YJmnnQ1+vyHie9LDnvQ1eifpy+JnDLcg65G
H/1vWnhBRw+6Gv1e2pzSkIsyuprrdrDi3eg0GV2NPqVP6YrGtjK6Gj29Oq1M
/7E7XY2u8ao+u3aRO12NfsVoYOg6H3e6Gr3l3eI5BjVSuhrdxswmqVm+lK5G
/zd0TpuxA6R0Nfq+gtvDeutJ6Wr0RuWfJu27KKGr0UO+FvXOnCKhqzk3bhrU
3nGV0NU8F1vPxK75z42uRjd/nZn/cJMbXY1eMq7H2aX93OhqnqNDqsNn27vR
1ehz96ydF39ZTFejR5peUi7OENPV6Gc3x76x9RTT1eg6B1uM9/4uoqvRdz2X
1l3dJ6KrOQfuTEy+Ey+iqzmHE7X/hVuL6Gr0Fu/1BgeUC+lqzudnvo9ObBTS
1egLY4MG5A4Q0tXo7UVTKlsaCulq9GVbHRa/feBKV6PfubtT47nala5GX33C
p3OrPq50NfoAb/vmvQxc6Wr0I4ptXQ1KBXQ1+tazT3uGrBTQ1egnX+scbdRH
QFejR7WXBjh1EtDV6LXfRT3y9rjQ1ejiubOM3ri60NXoBX+mLep4zJmuRvdf
J50m9Xamq/n8Zce+BV9woqvR12X/rO8T7ERX814WVmaH3Xekq9Gz9yaWeg1x
pKvRA8oijxh/cKCr0ZvGp2m/jHegq9ETLWcuPNzYga5GL61zXpqwzJ6u5udb
WfTv0sOeruY57fvz0+G9dnQ1uvdZRX+tjx1dja4Kmrbx8m1buho9ZbvNZfkw
W7oaXTtsz9P8Whu6mvPEctzrJgtt6Gr0vJ1XX/cytaGr0ed8b/521VFruhrd
d9jIz1dCrOlq9Kyr1i2q31rR1eiPVidJ2s6woqt5Ll7EzupmaEVX835fYP7d
+LAlXY1ePuTwCv1wS7qa88fadNjPjxZ0NV13OnrMvQUWdDW6iyTu+FY7C7oa
/dJ7o6DhV8zpat6PWZGOhvHmdDX6ptQfMcWtzelq9H7hZ74P3GtGV9NLm5Ir
K3ua0dXoinVXAhNrTenqX31KJzXa+T/fOgX6B6f40tXoNlVps+J8fOlq9Mfe
SbLTrX3pavTMfe6J4Y+0dDX6UPubVt1ztXQ1ukzPdLhNspauRp+b1NEpwUdL
V6O3Es7N/NhGS1ejdw8MTCx4rKGr0dNfWH3eVKChq9HTJj9qUZqmoavRdZy7
nFFqNXQ1+rTixV0+GmjoavR1j553vFve4Gr0tt22n6g5oKar0Z9GJbbpmaGm
q9H/K7zY9kO4mq5Gv3nT7txpUzVdzd91Wd/pVlWDq9E3Lv/Ys1uxiq5GX1ht
Kt62XEVXoz882PbhiBgVXY0uP6ErHyFS0dXoEYLhCVuaquhqdOcNw2O7Pmhw
NfrZxkGO1/KVdDV/V9PwC4WTlHQ1etLv7YI3QUq6Gn21YWpqYHclXY3efPrL
FR+rGlyN3jqy+dKr5xV0NXqLxr9Gv8lS0NXoJgY3HD3iFXQ1+uGZmfeueSvo
avS9ReYj1uor6Gr0o2naK9prPnQ1+m55de7tFB+6Gr3zUtuRpcY+dDX65NvH
O4WWyOlqvnd13GHFWDldjf7d6WPALiM5XY3+s9m3J4svetPV6C45Pcb+N9ab
rubvDWza5qSxN12NXmXgeKTZFS+6Gn3g/U7jLo/3oqvRa0e5aZtYeNHV6Bfv
1EiO3vakq9Gj++8LejXdk65GLy48OS/TyZOu5vf6xdRseupBV3M/ty5fJlrk
QVejd/ycNMLHy4OuRhfck0w6/1FGV6N3uNjv5pkcGV2Nrt/qQ7w4TEZXo88I
+9XbTEdGV6PPv7B0yZxD7nQ1uofn1h7DR7jT1ejt/SzbnDB0p6vRQwf87T/v
hpSuRnd73771rQwpXY3+ZqqLzRKJlK5G7//Y/uDFSgldjX7d8NL+8VskdDW6
w/mzNhv7Sehq9JPvr3XzaSehq9EX+K5a3v+iG13N39X71OIPU93oas7tYeUd
////w8PV6E9OZTlM/CSmq9GHH4t9kJInpqvR316+a/jfEDFdzXm+I7L+nqGY
rubcHpY41eOeiK5G/zh22vauS0V0Nfrd65VpSYEiuprvpW2XOnlzEV2NPnZi
X8e554R0Nfouo9ou/jOEdDV6xRPFmQwvIV2N/mpVmrW43pWuRv9tcafnkOOu
dDXnZ8YsbZMJrnQ1eklpYTNTiStdjT5k1tqsI98FdDV6l1Dl7/NHBHQ1+pyo
Kx5BaQK6Gn1WoDoiSCqgq/k8G1Jz5311oavRPRNGjEwY70JX8zl1I/8o653p
anRRE+8E3XRnupr7Z3lt0bnmznQ150/hoB9jljjR1Xz+FLlF6y5OdDV62fn+
/us2O9LV3Ofl0YndHBzpavTYyH8blhx1oKt5v5vfeVKjcqCrOU+uxQmDbtvT
1ejxiwMKVg22p6v5flO+am5/sqOr0Vek3mr/d5odXY3eZKm/Xvf2dnQ1+qf3
R0MEW2zpanTjL6NuicW2dDU/f2TeBofLNnQ1+oD1eUUdB9nQ1ejvh62TVFVb
09XoB8Pz9U/Pt6ar0dcW/ddnupk1Xc33/j6phesJK7oavW83jeBBbyu6Gn38
3pgHYz5b0tXovcRnGtXNt6Sr0e0WqI+mWlvS1eip1bf+vD5vQVfzOR09n2tj
LOhq3u+Leg1ep2NBV6P7GzzOfLXFnK6e/7Tvwk57/9/bMwVRA/3oavQ4wanF
02386Gr0RZ4FwufVDa5G/6nuZTHptC9djb600ZlhYQt86Wr+/dx3P6IjfOlq
9MSME6/3mPvS1egnexs7SL40uBrds/e7Oz9Paulq9CZfKp/UzdPS1eg5T6uC
RRFauhr9hOqQ7Q4LLV2NLn9dkRz1tcHVfB61xMXvjIau5u+9rxqatFhDV6Pv
Mc5tUzpAQ1ejz77/UZxsr6Gr0WOMtjwL/tngavRBcxWthl1W09XojoOVpw9n
q+lq9OUF+n+UcWq6Gt08qsvVVlI1Xc11GLfftn0LNV2NPtZQZBz2sMHV6OtL
PuVfzVfR1ehb+9vcypiooqvRraU9VqcGqOhq9M9Jbf9sNVLR1eiHSs1btf3Y
4Gr0tA7zzxw8paSr0dMfxpiuWqqkq9G931xzOTBUSVdz3RzKqnTFSroavfj9
mhEbmyvpavT7xR1WJZY1uBr9yV2/qZN3K+hqdIO7QvNzMxR0Nfo588vztL0V
dDX66k/fDza1UdDV6F8T/f3+ffehq9HrqkadTNjoQ1ejdxjW8nJPPx+6Gn1/
09vJe6vkdDW66bShxTPXyelq9LtNexXe1Mjpaq7PEofoFV+86Wr0blUJJ2+s
86ar0Ye0WHA73debrkb3eV25fVe1F12NfuddlXfoJi+6Gl307ePmkcFedDX6
xDl2pfU/PelqzocXb8uaFnjS1ejfLPudmBPhSVfzPc4umJTezJOuRv8V+cu4
+rAHXY1upInb8WS4B12NXt6z3sK7kwddjR5sXLi8c4mMrkafU7HxR9wEGV2N
nleUE+VqJ6Or0duv2Hgm+Yk7XY1eNjjDwXGJO13Neehtsm2Q0p2u5vuarXBo
8V1KV3Pffth/2XaHlK5Gt1ntkH5ukJSuRl+riI2410FKV6Pv6NUqfPBlCV2N
vvvH6XHR0yV0Nfokzx5nH4sldDW6k8UZnxuVbnQ1+sqL9t+l29zoavTSYRVv
jAa40dXokzMSDdIM3Ohq9Iu/pLMDrovpar4vs/3y1bPFdDX6qstemkgfMV2N
HjXCa93qnyK6mufLsrk28LCIruY8//7ef0KSiK5GV+8R7DR2ENHVnKsGxmM8
3gnpan7vz4rVt7cJ6Wp0q5CLti+ihXQ1ur3LG7sR3YV0NfqfpvE5sU9d6WrO
mUVpc5+tc6Wr+fdV5h9vRLrS1ejnyzJuSQxd6Wr0qvRNbl3LBHQ1uvZ8hnny
WgFdzXtBaLtOEyWgq3mv2S7avLSbgK5GD9mpTMk74UJXo9/Izbvb3ceFrkb/
b3SnuHkXnOlq9Bke4e6vA53par7H2W1DXe460dXo2Z3q9iVEOdHVvB8d9sWu
f+1IV6NPWF+SdnKMI12Nvu1TyYfrdQ50Ne+vqU5XbmU60NXoScsTDC/oO9DV
vMczK8t3bLKnq9HHPWzulOFsT1dzP/TS+xdw2o6uRn/cIyy6aZgdXc1z+uFf
v/0vbelq9Aff+3wKSbGlq9GHeaTZPGtuS1eja9Iz2g5eb0NXo8smLci7LbCh
q9H1H6/7Kb5kTVejX0k92HbhYGu6Gv13+KX3d2ut6GrO7YsXV7VZZkVXc44t
WdbJ3d6Krka/+r5RSt+LlnQ1f++OikPDh1rS1V2GP9pgf/B/c/Xws1LdQH+6
Gt2nR7GZe0d/uhrd+a02c8tzP7oavemcWf+0O/zoavQmK+dkW6X60dXoQ1+G
hyt8/Ohq9PlHy5yyWvnR1ejnddqJbR740tXoW9Nvj6jZ4ktXoxd//Xmlfowv
Xc3nUUQO9fbwpavR9+45JDjZ3JeuRtf9d8EztVRLV6PLt/nMGblZS1ej/3p6
3WDNGC1djb7tfZv/Gntq6Wp2m+zmO1pq6Wp0P6/65AUPNHQ1uoF7kSB/u4au
Rq86EaX+l6yhq9FbdQnau0KpoavR/yXXpw7V09DV6Bsqb6wb/aLB1ei+h80t
DuxV09Xo/aSh+sLparoa3cNt48jPIWq6Gv1veX/HChM1XY0+r+WpIYafG1yN
fsqkcfN5p1V0NbpNXH9z4VIVXY2u7PD+WJdoFV2Nviv8wRV3VxVdzedP8Ryw
urGKruZ+a+qU5HSvwdX8nPLjLXXylHQ1+ox+FfZ6E5V0Nfo34dFHUYFKuho9
tty80ytjJV2NPnue6eutXxpcjT61Y4528zkFXY3+p3+6T9lqBV2N3st8d2nI
KAVdjT4h+HfTv/9jKVyNPu2R74P3egq6Gv1z4+OrzK/60NXoa7a2ufxfsg9d
jX5uVKdga2Mfuhp9bo+e1k8uyulq9NubRANbjJXT1ehPGlnX7DSS09XoosI5
VRcvetPV6OILOyL7j/Omq9HvX3wkijHxpqvRE5x7Z76+4kVXozcaFBr+NM2L
rkbfU/x9Q7ClF12N/uxvfJL4riddjf5Vt+T6ynRPuhr9blCnE/EunnQ1euTZ
QV6Fzz3oas7hTuv7z1jiQVejv7l8xuCU3IOu5n7wO5Kc/EVGV6Mbtx44edNm
GV2Nvu/QQhdNLxldjd7O1iA7uqmMrkYv2Xf8yLej7nQ1z287j2WN4t3pavTM
TcEOmSbudDW/Nyln4Yw7Urqan9PvzpHq2VK6Gt2w0+y9zzykdDX6+uEhkxVV
Erqa58jwmEm3PAldjX5C4pczZqCErkY3az7lj9RAQlejTxdcVk2+6kZXo0ff
2zBOPNONrkZftWHIkhEebnQ1z9GDpBy9GjFdjX5lvtU24W4xXY1ePv/Otuux
Yrqa527pqW3Pe4jpat6bQY75Ix+L6Gr0WVMiD8avFtHV6KP/TrryJlxEV3Me
/ney6kEbEV2NLszydVReEdLV6JvPeqRbzBHS1Vz/pQerpqmFdDV62O7ijHAd
IV3N/d9nvHT9GVe6mn30vU6Dp7vS1bwXFr0wXevtSlejLzVZPjD4j4Cu5v0+
6Nn1CacEdDX68okHx3ebLqCr6ZOsuiipj4Cu5r3zcXn6tUYCuhp92Zoj9/bN
dqGr0esSersXtnKhq9F33NwoOrTMma5GH3zb6WZOF2e6Gt3Ia2H7SZuc6Gr0
jgcl/zS2TnQ1e8n27ToHHelq/i5jnxb7vBzpas7/ucOdQy470NXoqRajzJ72
caCr0R8lZ70bUG5PV7NPcph3faw9Xc3zUjawlXMje7oaPfxDn/Hpy+zoavQX
D0W3z5vZ0dXoeoXtzesO2dLV6CG7vo0z8bOlq9Gff3hTInpiQ1ejH/v4yMZz
rA1djT4+7cx6UXMbuhq98ug0O5Mca7oa/fegLw9/iK3p6u2VUXt9jkYrpkwa
IBzgFUBXo686OdNnVbMAuhp9v8zfueUtf7oafXPq9cbH1vjT1egXX1oWb47x
p6vR07sOHHPR0Z+uRq9pm9za6keDq9EVngM3nSn2o6vRp91p5rR6kR9djf6t
Iux4bj8/uhr97TZ97VdzP7oa3Tyx68MJnxtcjW7b0TZZdsKXrkafVFtvKJnj
S1dzfQSqu2N6+dLV6GbFuRtfdvelq9H37rswc0llg6u5DiK3mROOa+lqdKPH
mZvXz9bS1eix+e6v6ntp6Wr0qd43/Fabaulq9OrfRx/Gf25wNXqSTcyqKUUa
upq9kSjj0gINXY3+99PsLaGRGroa3X7Nvjo9Ww1djV7f4s/8dj8aXI3++uKh
/n4laroafcgP/ZEnV6vpavSSKaEn42PVdDV6Y921ffu6qelq9FZ+Rh5Tmqnp
avRBlTWjn95vcDXPRani88Q8FV2N/ql7pwvhE1R0Nbp+wPSqYf4quhr9gnJW
2kFDFV2NLp9jGelV2eBq9KfuA9frnFLS1ejZ7t0VjZcq6Wr0fu79A+VDlXQ1
uvP9r0VHREq6Gv3S7uvrRjZX0tXo/5IvVESUNbga/U/zfdvSdyvoavRe8wbe
eztDQVej9x6dPWVObwVdzfey2HJDjI2CruZ5XDxn3LdaH7oavaDpgIJ1m3zo
anRJlkv5MX8fuhq9/EKMZXC1nK5GP7rFP7XfBjldjZ5cZf+wzFdOV6MPDgzo
VfrVm65Gb6Qs+6DO8aar0ffNaJ7nEOBNV3N+fqyet+C7F13N837l6JrorV50
NfrIe9GP94R50dXoTWJreyX/8aSr0XMWp7TYu8uTrkaXul/7HR3lSVejL9e8
ky7U9aSr0VNzC045FnrQ1ehtp71boR3lQVejZ8pSiu4betDV6EH7O/g8uyqj
q9GzZJk9Bk6V0dXoptemxfRyltHV6L/197Q5+9KdrkbvuPiYee5Kd7oa/Wuu
xw4dP3e6mn9/9dr2+/VSuprzZFadodk+KV2N/n2pb9s3w6R0NfqIetGs7oZS
uhr9kECafvumhK5G79btTMv6TAldjd5DJDJb7ymhq9Ht1tbcOFTtRlejn7eP
NNDsdKOr0d9lH/keFONGV6P/mNB70jUjN7oa/dXgtK3nSsV0NXr3r1HjXReL
6Wp06zpJbRc/MV2N7pkms0vTEdPV6GMLF3QILhLR1egZScFH104Q0dW8x4+v
7TpEJKKr0U3c53pv+CKkq9Ff2FvY9dwtpKvRDcaPfzFtlJCuRvc4OmO4uY2Q
rubvjfIukr91pas5n3ds+3B3mytdjX7q6Zaa5zGudDV6mp3ZkxhzV7qa63y/
ae7gcgFdzbntZ9/37lYBXY0+x2DUl1PDBHQ19227lRPMrAR0Nbrg8H/lP2+4
0NXo76vyijf3cqGr6Yc95Sukj5zpavSqUx0Gnx7sTFejL225zd6twomu5v7M
+/ZvfaITXY3e/M+gt9U/HOlq9ONP7ctlMx3pavTFazf8GdvWka7mXLX9IF+z
1oGuRu8vVezZZ+1AV3PdgorDjh22p6s5/x/Odtqntqer2fttCMkutaOr0b1G
6R5LGm5HV6ML31wa615rS1dz/3y7nPF1ni1djX7V5VvVOmNbulqY8uxMnxP/
u0/f/woKFQXS1eitmjV+t+JXg6vRz7jvE3S4EEBXo89s7+R0fVEAXY2+9v3a
l2f7BtDV6GYC3bCq7gF0NXr63FlTo/7zp6vR9Rq1GPPvgD9djX5AO9fyxRR/
uhp99s1PeT+1/nQ1urilUV2onj9dzc/PfNXtxWM/uhp9o7le5525fnQ1eqr3
yA/7xvrR1ejHb2/dUOXpR1eje21LEiS08KOr0YvGjN9hXupLV6PP0unVuuMm
X7oafdWYdZGK0b50NfpRiyfZ+VJfuhq9k/GaKwFNfelqdNe64GrrO1q6Gj3R
akwnn41auhrd5u8wyYrRWroa/fqHVf1NZVq6Gv1QxoAZ75tr6Wr0wXmt9366
p6Gr0YMLvr5z3Kahq9HfRPcS5I/T0NXoW8NHLxio0NDV6F2Lkn8Gt9fQ1ehH
LmWnT3ze4Gqu58rGFi/2qOlqdHnEvdfp09R0NfrfNJuSQSFquhr9Y377G+NN
1HQ1+n9/1/66/KnB1egH293o0++0iq5Gb/yv4InpUhVdjS7dbrPSKlpFV6NX
ZXlNj3VV0dXo8wLvb3rZWEVXo5+0KKvPutfgap7fJXYr5uUp6Wr0UQZbRx6Z
qKSr0V8mdM0wCVLS1ehP1w98ftZESVfz73+5z9pU1eBqdFG/5OTC8wq6Gl2/
/tLedtkKuprntKTGY1O8gq5GL9TsNBwtV9DV3D+F60KSOyjoavS60c8Pjrrh
Q1ejfwhdOyM2zYeuZn+U2/xRDx+6Gn36JVlI8RU5XY1eUp/e3yxVTlej38vK
carrLqer0fdaFNzRXvWmq7mvdu8LaJXmTVdz3V4VrtOae9PVnBuC81d+3PSi
q9EjP5x+YjrVi65GjxmQff+snRddzX34wano4UNPuhp9iGjAqtg5nnQ1+sP/
Hdp4N0+6mt3sgGPFGw+6Gv1Tq+jaR6s86Gr0q6MPXlBpPehqdONFERssamV0
NfryBdUZU/JldDXnWJrl5MBIGV2N3nPkzPnLWsvoanTZunWHQ06709XoNTNq
/mWMc6er+d6ftx7rZOVOV6O/Lo/SDS+T0tXoObLw2+8XS+lq9DGWfa7Uq6R0
NfqNZZfqZtZJ6Gr0NKemw2buldDVvGdnDGzzc7iErka3r+v2s6KbhK5GF7Sc
6xRc6kZXo/dxe7LHdqEbXc11cAqbPlXtRlejhz3tsM3vt5iu5u+dHGa64IiY
rkbfnmtTr04S09XoE5KOicfbielq7rfkjvdM3ojoavSU8pCn3ptEdDV6s80J
Pe9HiehqzpOAFOmbziK6Gn104OAV8aVCuppO+GoxYuQyIV2NPmDK4aPPQoR0
NXqybf3cq62FdDX6t4CyZ85XXelqdKvegqJW813pavSI9w+tB/u70tXobWu2
mtm1dKWr0S/nD94/+rKArkb/tfHuA6v5Aroa/dnzs2v6BQroavSplW9/Nmoj
oKvRl+74+ku9wYWuRl+yIKLneDMXuhq9tWnvX6vznelq9PFT3XTynJ3pavRi
D2V87lEnupr3+Np93qt8nOhq9Lcr9s1MvuJIV3N//opVKPo40tV8L2s/Tfvz
woGuRnf06qfameBAV6Mrynas8q23p6vRz24tn3J3nj1dTT+Yfv8b0tWerj5T
P+TOqNP/e49Nz5i+dg6iq9EH18u7imsD6Wp061eTF545FUhXo2f0zZ0+e3Yg
XY3eb/fb77NDAulqdAfr/t/Pdgqkq9FNzdtlSJ4H0NXoTmHtciryAuhqdOXT
PiF3kgLoavRp+aWra90D6Gr0pgnJkyMaB9DV6Cs/t/tXdc2frkZfYjfNpmS1
P13N3zVh7o/7Q/zpanRt0edkU3t/uhrdfml8Tu63Blej6w/dMTn2jB9dje6x
Pbxd9AI/uhr9+tffA1b39aOr0YUuqrhmZn50Nb/34C7R/o8NrkbvMrzowurj
vnQ1et2bzyZHM33pavTbu4+o9Hv60tV8L05TJPkmvnQ138vXLb8nfGhwNfq6
U5lrZh3T0tXo0n1pba9maulq9KuR5wcH9dLS1ejyt3uXtjDV0tXozR3Stv39
1OBqrs/d0BxBkYauRp87Oi49Z4GGrkbftOhdmDZSQ1ejj/3wpZ2trYauRs9P
WXdW+6PB1ejfRtXHbSxR09XoUVOMWwqz1HQ1+vLHzbc3GqGmq9F/RhTKW0nU
dDV6QqrTk9Dmarqa+3xmxNSbDxpcjV6738xqfr6KrkY/YJ/2aPpEFV2NPtLa
be2+ABVdjb7zryy+WzcVXY1u5RsVeu5jg6vRdZ/G+m8/raSr0Qc1shlQvExJ
V7PHxcw3HKakq/keQx7e3+2mpKvRC+b5qKe0VNLV6CU5YfcynzS4Gl12++jC
K3sVdDV6O7ceCQEzFXQ1euoFp4lNIxR0Nfq7+JkH6+0UdDV6C/FYz/6/fehq
9FsHr0x0zfWhq9H37xGZZ4T60NXo6R9LvPzq5HQ1uvj8ihuztsrpavTRgpwy
SYicrubz/C6Pja7zpqvRW93vN6HRdm+6Gn12YkWHLuHedDX6+w1jvbf/9qKr
0c+Nu/Urf4cXXc316Vfay7yfF12NfsxZ42fQzIuuRl89/NWzyYc86Wr0u/ox
3SJjPOlq9M4dxjfdq+9JV6N7di/OmVTsQVdzzrx9U3lynAddjb7IckJNqrkH
Xc25d7Z54fZSGV2NHvvMSBk0W0ZXoy+rES4bKZXR1egdPpTs/P3ena7mnHTw
W90ix52uRt910rjP/HB3uhr9a9iOyoym7nQ1ukGMX/TX41K6Gr2NX+DRh2Ok
dDV6kPrvV7GFlK5GX7qpoItumYSuRm99aq5Dn6USuhr9o22pa2dfCV3Nubr/
pHPYHze6Gt0xdbT1v8NudDXvo/pmJtZj3Ohq9DnKgs4XrNzoaj7nvZFdyp6L
6Wr0rY/7WcSuEdPV6F72M+Qje4npanS3qPKE8jZiuho9rXT6wdJLIrqav+tV
kIHXLBFdjb7nvMfKbj4iuho94JREkvxLSFejV1hZNVIcF9LV6Hsnvf2WOV5I
V3M/jOzZVSkS0tXoZyq8ElO/utLV6Nc80uq773elq9Gz2pacVSS50tXcP5O+
XChzdqWreS4672/14bOArkaf0vbs6nH7BHQ1eo7Z3VFjxwroavRLZ1cuqHAV
0NXoPcyjfuS/c6Gr0bf/zsgYl+BCV3N9ljw+YVftTFfTUV1W77w90Zmu5v7f
96jfiEbOdDX63+HnrnyY50RXo7fvG9ticAcnuho97tzVLmc3ONLV6P+5VOvo
2zrS1SEzy8unn/vfnLm8fb+hSzBdjR66XlY64XsQXY2+U7hLrlcURFejJ/i6
/SifGURXo5fZttSpCgiiq9Ez6v2jpfpBdDV60TN9w8JHgXQ1+lzbZJfxmwPp
anSr1Yn5o0cG0tXoL8bpzN4gCKSr0QfeMrre4meDq9EP7dmcvqc4gK5G17VL
ylu8IICuRvfa3l9Z0DuArkZPq7Hq+8c4gK5Gbz876+2iCn+6Gv32/OjaiP3+
dDW6n7HrwgGT/elq9O8jduev0/jT1ej6V8eEdWzvT1ej//jXYs7lMj+6Gr1C
0Szs2HY/uhq994h3e14m+dHV6Mfa2OZpPP3oavTRR9w9Xzf3o6vR7d7NHFt0
15euRm8ROjLg9kZfuhr992PVle6jfelq9Pjy4TX//+/wcDX6N5nhtdFNfelq
dPuIbb3j72jpavTnI3yWbduopavRN6SYZ3ZJ0NLV6M0mTBaWyLR0NXrBpMSN
+1po6Wr0Pbu7Xyu9r6Gr0fvO2n5SuF1DV6PnXu+Qcj1ZQ1ej/7k2/ttmpYau
Rg/vWarar6ehq9Hld+yH1r9ocDV6l6nje83Yp6ar0av65Bn6zFDT1ehN/HcW
ysLUdDV6imKkW1IPNV2NbikvXvriS4OruQ7xy64tOKuiq9EbOe+qHLtcRVej
/6d6Vb08RkVXox+8+vv1J5GKrub6RJ8rzmymoqvRzzh/XRLxsMHV6L9+q0KH
7VDS1ehj/RIa75qipKvRJ4ca73UKVdLV/BzbP70rTZV0Nfqt+4dqX9c0uBp9
d/DLNV0uKehqztWlJt5z1inoap6vQp0Kl0QFXY0+rEP3rI7/+7lwNT/H6F+Y
uLOCruZ5d4907H7fh65GXzu594OA6T50NfoYgw9bK2186Gr0Na31s5vcldPV
6NYTDh1bPlVOV6PrrTikm2Ujp6vRTz79sFyv1JuuRp8qte+rM8ObrkaP+CPr
P9LBm65Gd+rxeJP2kRddjT7d+5xg7Wwvuho9+dyW9sNEXnQ1usGvHsptrzzp
avQvLk+vRC7zpKs5b0+N2TvHx5OuRh/hPLzG7osHXY1uEuqXo97kQVejT9Bm
7y8N86Cr0bP3Xnd93MiDrkaP3N3fqt9BGV2N3qtR7tLA4TK6mveaacfxhzvL
6Gr0ccE6j1ddcaer0WO3nT1XOdWdrka/JN0kKhS409V8fsvXgj9vpHQ1usfm
a6ePrZXS1ejOHZa/+i9USlejn7eMzVnWVEpXo797lFy794SEruY9uPZ5lXqc
hK7mPRVcsizMVkJXo9eNUD6+88KNrqY3/kbfuZrtRlejt3rsMtkj3I2uRo/L
PPjIVNeNruY9MvBd1bRzYroaPbWgpKTnVDFdTQ9sVQ3eIBHT1eg7FvmdHPRV
RFfzXjtz8tXq3SK6Gv3CyRn3NSNFdDXXWZK4Lt5SRFej+zgMFLd4JaSruT6V
XfONNgrpavRXTom12wcI6Wp0oaGpdZ6hkK6mH/p9knV/5EpXo1dbLHVrm+1K
V3Of9C00TolwpavR7yQZ1YR1dqWr0YsPDCja9kBAV6O7mZpNTcwW0NXoUat1
Jfv7C+hq9O439n4aaSSgq9HFbwNDXAtd6GrOmcj6y9PlLnQ151WfjL4nLjjT
1bx/h1T+fB3kTFc/0Y39trLkf/e7eM+vr6IQuhr9c8XXLoN/BtPV6HGOisCm
Z4LpavQRr55mvckMpqvRwwfrNP4XGExXo0fsfrK0t34wXY2+tHCJpvxhEF2N
Pmyh0HLXxiC6Gr0g6Z5wb2wQXY3+23FCaqVjEF2NvsrV4FPMt0C6Gv3J2azN
HYsC6Wr0yaYVKxplBtLV6CvPP7lkHRxIV6OfGe+vntsxkK5Gj8+saWn+LICu
Rp/6bp3xj9wAuhpdMKomo3lSAF2NvvF6gVe4ewBdjf66ZlD4PZ0Auhpdr9me
syuu+dPV6G5LbJYvXO1PV6Ob7Ii4eHqIP13N5zQ5Ge1o709Xo7vMujHi3rcG
V6N3GPb38dEzfnQ1eq9+R8+WLvCjq9HDHCK6OUT40dXoU+oln4vM/Ohq9PTQ
nV7zPzW4Gl3hXa+7rNCXrubnzB4VeWe2L12NvnqXyDmkly9djS7utHhhkx6+
dDV6iuW21G+VDa5Gv9xrw8cehVq6Gv1Z4Jra2XO0dDX68Mb7V1v30dLV6B1L
v1/XMdfS1ejtV47f1KWqwdXo3nvEeiNPa+hq7hN3oXnNIg1djT67fdyj4wM0
dDV634qLboX2GroaffRQT+9vPxtczffusPfrqCtqupqfo/uvr9FaNV2Nnv+1
5Zhmo9R0NXpx9y0yB5markb/aZF9eqGumq5Gj9I58tf6cYOruf8lZ37/3qmi
q9HHPkw92Xaqiq5GX75+qXdkiIqu5jysOT/7RXcVXc15YlictbmqwdXosZau
KRvOKelq9NBOhSalq5R0Nbr+p7o1mjglXc11PrHwXZVMSVej397Zos2jNkq6
Gn2X0d+W9S8aXI3eLPfXy4hDCroavZFoXtbnOQq6Gl3e2saxOEpBV3NOvozY
ftNZQVejN3m1XKdLEwVdjb5/7vpF4n0+dDV68P4f7/f396Gr0V2tOphua+xD
V6P/dSsStd4jp6vRLQ+ftnvfT05Xo59u87i5dxM5XY3ebljJreb7vOlq9Ls7
RPN9B3jT1Zw/RVekv1t409XoAybYvrQ54kVXcw7ceTfnSowXXY0+ozpb8ErP
i67mvRBU/CrxjCddzXtz75uNyYmedDX6tZgpCR9NPOlq9AXyH6FPb3jQ1bxf
TpwLVE33oKvRo1sqh3d38aCr0VNtb24a+1JGV6P/+HNaR7ZCRlfzvA8fumSC
RkZXc06qfgc4/nCnq9EXbbrl3m+nO11NPxzrOKRukDtdjf6y9d+z7Tu409Wc
z5OOxeSUSOlq9CMBI/y3TJHS1eiNtXZp3VyldDX6i4tdq1q/k9DV6BVXfE8k
50joan5O0zOPwvpI6Gr0yE9zwra1ltDV6Gcf5JiPOe9GV6Mn/fzdd88UN7qa
839u9qdhYje6Gt2sKOrTsk9iuhq9z0enSHG+mK7mPZtVLQ4dKqar0QPHZmY+
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
6jL3WkT40tXo8y9vOPzD3JeuRm+bd+hvs6oGV3M/HC9eGnpKS1ejG7UrjL+z
QEtXo9sdmb1iSX8tXY1ucbNtqznWWroaffJW13vHvjW4Gn3e8Ws1Fuc1dDV6
o//2j766XENXo68bs1++K1pDV6P3+bsyqcRFQ1dz3R730DH+1+Bqvt9XHWp3
3VTT1ej7t1j3TNuopqvRPyS07zQlUU1Xo18aOVVzQq6mq7mfN3cpF7VX09Xo
qzrNqXr3osHV6M9uxyU/2K+iq9FPVfeL/5ehoqvRvc9/fBzTW0VXo9cWHytp
ZKWiq9G3HdEKymobXI2uONnd6ONlJV3N/dy3ZI5svZKu5r0w6eTE4jFKupp/
v3Vi9SyFkq5G7/AopTbdQElXo388333u8YoGV6M/PFGRZ39CQVejX70m7v9w
sYKuRu90Y0zO6aEKuhp91KjqiS/dFHQ1+gTHHp+8Winoas7/Hmvr8k/50NXo
S9pt7BkU50NXo+cYfn4/TN+Hrub6RJqXfD0pp6vRe1te//BthJyuRr9uNn7g
mA5yuhq9f+ymHgNOe9PV6AdmXnQ/He9NV/NcbI/andXFm65G9996dfqbC150
NXrTTpMP5yd70dXoAWNKer409aKruf+bNx+w5JYnXc15K59378B0T7oaPWvW
6nOBzp50Nbp5UpJd5HMPuhp9+73wts+WeNDVvH8fjEl+4ONBV6PX1dYM1H6V
0dXouc6t7thtk9HV6An1t+/O6iujq+mZpJgRvVvK6Gr06aF3l6456U5Xc5/o
OffuneROV6Ov/jP18CwLd7qac0Z29pjdIyldzfvxQXW0drGUrkZfU6F7+IFK
SlejV879dvhZnYSu5jmqWx8XtU9CV3Mdcl/fCh4hoavRTdx3fD1sIqGr0evz
Ltxecd+NrkbX07YcV7HYja7m+t9SPNjn60ZXo8dPd2v65Z+Yrkbv3L7g77ZC
MV3NdXvQ58rNFDFdzXvkRnVckrOYruY6bBA9n/1eRFejt9t33qVDroiuRl8k
C4zuOFREV/MeDx6VsshERFfzHnx2KmHyYyFdjd764Yuw59lCunrW5o+2pXf/
d45E1zaZu4TT1ejjh/rqjdULp6vRBzcdMOPw6zC6Gj2lYGj0ubwwuhp9XOj3
S7rxYXQ1uvjT4BMLnMLoavQuuk89tV9D6Wr0Jv9tDJcdCaWr0T0v3Pw9YlIo
XY2u/TtXc9M7lK5Gjwx56pDUOJSuRh/9+e7RgEshdDX6lbsj3w9aFEJXo5+4
vuzSrp4hdDX6m5OivqIuIXQ1eqfjgqxvT4PpanRXz0FLvmwNpqvR4wNnKy1H
BdPV6I02jj60wiWYrkY/e/nKO4/aILoavdXg8HLjU0F0Nbpjl/w898wguhrd
vS7BfUlQEF2NHpHivt7EIIiuRu+6KPtuxeNAuho99Wf78vdbA+lq9O5+PW5Y
jw6kq7lPaj2yc0SBdDV64Mbb6tDfDa7mc7byfeB+MYCuRh8b+bPnoCUBdDV6
X2PliZP9AuhqdEVyQoc+ZgF0NXq91flB1pX+dDX6rSuzNwmP+NPV6L1KPz2e
OMOfrkZvd9TJ4GeAP12NLv07NuhQR3+6Gn1E/NM5+S/86Gruw6ZLLt/f6UdX
o8d55RjI0/zoavSfv41Gv1T60dXohpf07xa19aOr0bMvzQ4qLfOlq9FtP6c+
tsjzpavRrZo+zNib7EtXo2ecy9Gk+PjS1ej27w5bJbfxpavRlwY2tt1VpqWr
0Rt/iw3tnq+lq9GnO59Yfy1VS1ejD9lQ2uGQSktXo/8OzDh6T09LV6N3LFk0
X/BCQ1ejJ9mfWFKyR0NXo290v3w5a6qGrkbvHDfWY0uQhq5Gf14zouKtkYau
5vypjbo1/EODq9FDxtb+MDmhpqvRTw9+HqO/QE1Xo++/erCDT5SarkZ3LmvX
Kt9eTVejT3syLyjgV4Or0a8OPlhmdV1FV6PHenY95pWjoqvRRdtVFYsTVXQ1
563bkVGGChVdjX6k8Rf1C30VXY3+Ky9+wovXDa5Gvx6+sbnRUSVdjT7qzq+a
JfOUdDX60x1VSvkAJV2Nvq1rRbWNs5KuRi+1VuoG6yjpan7O4Zi5O+81uBp9
1dz8JHWBgq5GX91n5IXOUxV0NefYzZ9zLcMVdDXP3YHdRQmWCroavXbd+ivP
v/rQ1ejv7IObRa73oat5vkK/C/y1PnQ1v/eAYc/dX+R0NfqY2eL42evkdDV6
VnZheqlWTldzbo/otDbrqzddzXkr3XPsZo43Xc05Zv/i5ZRAb7oa3SC8seHG
H150NfftqRHD3XK96Gr0qk19/4+I+46ruf//OG6VyMws2SNkZLc7nb1He5iR
HZU9K0VCImRlb5GRvQmRSqisRELIrssev+/vj+fz8+/j1s055z1e7/v1z5Xl
6e1KV6N/NjSWZ1Z3pavRd4UWvjh92IWuRh97q2hP5+EudDV6cr5klXkjF7oa
faOLNG3wJWe6Gv3u4B+VdhHOdDX6/rbzI8Z2cKarOZ9ty+3aFDjR1eieaeJW
qkVOdDXv1+d1hjeOTnQ1nfC14sbfCke6Gv3q4UFLE7Y40tXog20iNyR4O9LV
6H9cl/78W9uRrka/LAk79ObcILoavXDJ73OqyEF0NfqA9BZ2bbsOoqv5zq5f
+3lcyUC6Gt2YYmjXfc1AuprnKrj+yWHagXQ1un2r9afr1hpIV6MfXXnc3v7c
ALoavcyqXePLUwfQ1ei561aE5fQcQFejn80/LdWV96er6dhuqg2Sbf3pavS9
T19FHAruT1ejN6w38PaK5v3pap6rQwXHy+/0o6sbd53s/LpouKjxydUud88I
rkZf8LC1fO9GwdXoS7SeXzfMNdLV6PUr++n3DzHS1egDjnQyFrkb6Wp0i8Wu
f9u0M9LV6KsObw6Kq26kq9EXT7yTV++6ga5G79A+VKdOMNDV6HNmth5wWWug
q/m79jRdEtHIQFeji/RBxuACPV2N/np35dL56/R0Nfrbo49Fjwfr6Wr04jE1
p0S019PV6Ocfmbp4vtLR1ejy8TuHqtN0dDX6ntd5bRPDdXQ1elrmxrA6A3V0
NfqGHjmai7+0dDX6JfeWF9Iva+lq9Iade9+4H6+lq9EjPE6GOeu1dDW7XH+0
qKmWrkavnJSw/sBjDV3N/Vr2X5dz2zV0NferX4uhZuM1dDV64IPx4sV9NHQ1
f1flqPvSH2q6Gj2jdWQ7l8tquhq9rsO3dhMS1HQ1+vIQU3GBSU1Xox8bV+Q7
00ZNV6ObVhWs8C1T0dXoVc+TV0w8oKKruQ49TQHnp6noavTRA5UVCg8VXY3e
5vo+bb06KroafcuNrVF17ynpavSDo0zx4k1KuprnodnD0cfGKOlq9KeZ+vbD
+yrpavRrxVdOy/4IrkbfPd6jX+gNBV2Nvtr+xooLqxR0Nbr33qBC0zAFXY2+
TP2hZlt7BV2NPityatsu3wRXoycse9B9TKacrka36lKt2/MkOV2N7lDjlu3a
wXK6mveuZ5M6i7rJ6Wrue5ODn9K/Cq5G/2/5mKLGV2V0NfrNf5bn01fK6Gr0
U4OH7lk4TEZXo++VtV6X0lNGV3M9m9VILv0luBr9dtWltaOzpXQ1594biwOd
10vpavT9b2LvtBkrpavRLSuK6noNktLV6J2rtgVdNJfS1Vy3HtGZo4skdDW6
eUVtpXK3hK5GT7yR/XbkdAldja494Jt+Wi6hq9E7FjusUbWQ0NXoQy2fbWvy
WnA1eutxz4tanBbT1ejj0o8O9FsipqvRk3pkZeYFi+lq3pdHK6Njeorpaq7D
yOjJk/4JrkaP7PM7ec0dwdU8h/PHv/+6w5OuRnca2iMmebonXY1+6NZm41iV
J12NnnXcZuhMW0+6Gj3a8r+0Kx8FV6PfzZrvqsgU0dXc9z+1rMzXiuhq9Liy
/F7/xovoavTLJXZr+nqI6GquQ5JGsbWJiK5GH5ZRuXxFvgddjR5U/rC372wP
uppz79GJacs7edDV6LtmfRrletudruZ8S3pZfdhsd7oaXfP4vfFrZ3e6Gj2k
S5BfjbtudDXfZd+pzWPnu9HV6JK5UWtm2rvR1ejVKk/ef/7Ala5GrznGu/Ty
Ile6Gt39Q/SJZgNc6Wqup/W44JIyF7qa57l2r4JWq1zoavT8KRWd8sQudDV6
+5wTpv++ONPV6DvctwxducOZrkafnXPQsN3Hma5Gvxr4smtXc2e6mvP5gvhD
h1NOdDX6r6JzO5LHO9HVPG/JUt2M1k50NeeJ+bUP+fmOdDV66oyOy7bEOdLV
3McIj25ljo50Nedh3pebG98PoqvRN91qHHlz+yC6Gn1lkwmdJwYMoqvRD9zO
Ko9tMIiu5vw8VnGu0bWBdDV6J6s1e63mDqSr0YeXzE1P6DeQrkavd93v7rSK
AXQ1+kLHOy3u7xhAV6Orpq1ZcHDwALoa3XO9ovmPZgPo6i2HPmv+PBouKkr8
eOyu0kRXo4/vXHCpTzcTXY2+bVztwIN1THQ1+oaXV6JkbwVXo0c0dx70M1tw
NXrD+A0xt9IEV6NvrbAccXqZ4Gp0kevh+5lhRroa/VnejvK3eiNdjZ4f/ie5
l4ORrkafHJX3eHljI12NvqSafHGLVwa6Gn1xRM1U9T4DXY3usOTB1xMTDXQ1
+oEhF1IHOxjoavSDZjtXulTp6Wp0x9xJD71P6elq9OygnzN2zdXT1eifHrSM
cPDU09Xom9usulFlpqer0esVdV3wJVtHV6Pf3r5iW7cVOroaPV4xs/sGXx1d
jV5xM66dtJWOrkYvS/GKtyvV0tXcr13TQqR7tHQ1+tG1s45vCNPS1Vz/ktLY
7v21dDV61wfd7lT+1NDV6CWfrm79ellDV6PHXGnztW+Chq7m+vfdWLDXqKGr
0euuTPEIaKmhq9HnHwt19nympqvRr7TwuzFyr5quRs/97+C7i+Fquhq9ceiB
/b5OaroaPS0ywaxzDTVdjX7NdXq1XrdUdDW6e71Nm8NXq+hq9LBJ7cveDVHR
1ejLdO3ubLdT0dXooXUOT0j+rKSr0VsnPTt+9qySrkb3Dz97tM0iJV3Ndf4p
CT1rVNLVvBe6GfkrWynpavQvk7Xftr1S0NXo+rHHiiuOKOhq9DX6DbGT5yno
avTqI8s+9FAp6Gr07+0nt+/UTEFXo1f6t2jjWyqnq9H9Bhwuv3hQTlejR4+w
iBk1W05Xo7+u/+adWCGnq3luLZr3Cm4qp6vR6+TpFAdLZXQ1etZGlYvTIRld
je4Tc77ev7kyuho9ISLgwl+1jK5GP+t91cvRWkZXozdqujsnrVxwNfqPjE29
Ak9I6Wp0RZB8jmihlK5G3x0y8PgIHyldjT427F/JuY5Suhp9+KRev0yVgqvR
W53T1GufKaGr0Se1edy0+yoJXY1+qDi4RdhICV2N7pyjbP62n4SuRjcf2rLp
tloSuhp99QHXJsmFYroaXZLQsfn53WK6Gj08YWDbDjPFdDX6sSaPHS6rxHQ1
euLESN2GVmK6Gv3ilcAZB98LrkZv4vr28M+LnnQ17131Wb9jkj3pavTZKv/B
klBPuprrNubuXXdHT7oaffS9fiFTLT3pas6BQZfrvSgRXM05M/tcQeJREV2N
fufWyHMRi0R0NXrfA5+vJQWJ6Gr05J+pleW9RHQ1+o4/6xSza4roap7z4u6L
Ew970NU8PzXmFW0I8qCr0aNezJpva+ZBV6OXWk+MszrsTlej7wxb+25usDtd
jf72s+PZ4NrudDW6q1V8VXqGG12Nfnj3kdTpw93oavSlZs9PHq3vRlfzfWnm
oh551pWuRrcZ/tB/8ThXuhq9Q/t7L9q3dKWr6aIgx/96Z7nQ1egLSq0Sj053
oavpk6mjD+/r4kJX03XXHUY2u+9MV6NfSh637794Z7qa339fjXi1kzNdzfer
5ut/TSqc6Gr0FTn/WnhtcqKr0ctndr9Xy+hEV6MX5IkH9KjpRFej9/7eWnzj
hCNdjT59xdI/D8Y70tU8n0d9Jwxt60hXoxdaeCYFFAyiq+mT+/XCshIG0dXo
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
+5VdLdsxSElXo+e0KD7QtbOSrkZf4FJRw+uTgq5Gr6jxLe/YWQVdjb6o7EoT
U7yCrkZfVq9+QRdvBV3NfZ+53GpgWwVdzXX7+/PO/Ao5XY1ef2T1ZtVPyelq
9K7jNCXn4uR0Ndfz+TyHoyY5XY1e44Jjg9I2croavXqrFrNV7wRXo2t9D02v
OC2jqzkHmq8yz4qX0dXon0IMPYp9ZXQ153zaxLfdO8noavQ5DydJMr4IrkZv
O6TQadplKV3NfXFtlR++QkpXcw63O2mxe5iUrkZXjmz1qmlvKV2NntzqxPjz
fwVXoz+1/7xuS56Erkb/rus75exmCV2N3qzd41+NJkvoavSvDqoBWz0kdDW6
Z72i9uMaSehqnh/5/cwJpYKr0QsWb26996iYrkbfmDqrT5s4MV2N/nD60ep5
vmK6Gj1KkrTipJ2YrkZfGO717NEPwdXoMaecKwfleNLV6Dd6xt7K2+xJV6Pv
l46csCXCk67m93/SoHCf1JOuRj9pPFH3QwtPuhrdf9qiBhMrBFejD03f+7zj
RRFdjZ73RZzQbJWIrkaPvD+jlucYEV3NebVutN9uFxFdjf6xg32MrJGIrkaf
73yuvlu2B12N/re0272QqR50Nddtd6bf7zYedDX6sI17Uutku9PVfPcT3+9d
Ms2drkZv2nxPVFR7d7qa67z3aafXuW50NefertTUq7Pd6Gr04+OfvG3a1Y2u
Rr8wfGOTh4WudDX3q362TeM4V7oafV9H/1rn+7rS1egvlncvKC51oavR1yzq
sjx8pQtdzfm5wW7gTE8Xuhp9U2at/MrPznQ17+OkpGFl253pavTaSatey32c
6Wq++/vuT2pj7kxXoxc9t/067pQTXY3euWHbBd0mONHVvO/nVjcf0saJrlbI
Z0W7lv/P5//GeJ2u5k1Xo5/90zvv+FPB1eiH0uOX5F0QXI3e48iJhJqbBVej
a8f8zfWZ50VXo89vsiHwymAvuhq9pOpCL62rF12NfjAk1fCllRddjd6qPPjC
sV+Cq9G3B7aft+qx4Gp+7ve6y5efFVyNvjSmT+WujYKr0W+p96Y/nGOiq9G/
B8670m2wia5GL51z2iHF1URXo1cPHv6rTWsTXY2+ak14p6t/BFejq++VHVxY
IrgaXfUoff3Ii4Kr0T/vuPxmyFbB1eifwmtvnRpjpKvRXxaPvrAnxEhXo9/+
fFn+TWKkq9HTnb86j+xspKvRWxQVp1aYG+lqdI9Ga4rb3THQ1ejP17YN2bHa
QFfz/GR/zh0aYKCr0bc929jR29ZAV6O/L981OvqZnq7mej5L2vBqp56uRrcq
uXNl4Tg9XY3erkvx8yG99HQ1+g19i7+TKnV0NfrH4BctTp/S0dXoq4tT+7nO
19HVPA/mq3y+S3R0NXpgQeP57+vo6Gr0R7ZDMlrla+lqdLcjR74tSNHS1ei5
02T6jkO0dDV67BzFmd8dtXQ1+gTrZ+4NKzR0NbqDWZ+nQUc1dDV6nQm+m5/O
0tDV6BvMQqI2eWroaq7ngNCFq+to6Gr0183GZFy9o6ar0X+mjKvXa4OarkaP
Txq7Kj9ETVejZxYEag7Yq+lq9GP6noMuV6noavRL9XIDG15Q0dX8nkGtT6TE
q+hq9Jg7v/X+JhVdjX4hXGpnaqWiq9EfpmV5xr1U0tXo+6N8tn06pKSrOWfi
MpQps5V0Nbqs2l7naTIlXc3f++3jrMRGSrqa91EkrfP0sYKuRg9JDqgYt0dB
V6PfTXncodcUBV2Nbv1r+lF7DwVdjb4o6nZqiKWCrub3qb3wxd37crqa53N/
32Vzd8rpavTjFyelDIuQ09Xoo75km811l9PV/FxtQfEdSzldje6raNJmxEMZ
XY3e5KFlTrc9MroaXRPr9sZ+moyu5jsyvOPMMRIZXY0+r2//OcWNZXQ1+sBJ
z6uWPJPS1egb1anlkYekdDX63JxbvqvnS+lq9Ox7RZ4fdVK6Gv2yXdv02NZS
uho9KrbGJtN7wdW8L9seNQo8L6Gr0ctUfyw3JEroaq5n4LkVTYdK6Gp0m7uh
2270ktDVfK/LJKIT/wRX81x9TZ38JF9MV/N9OZXRx327mK7mu9w1a/GDKWK6
Gr18g9WMAzIxXc1zkpP793QLMV2Nnlfeo0P1t4Kr0XsnDS+LOedJV6Pff71G
6prkSVejT9/zVeEQ4klXo5s13fdxyABPuho9sUW+2zULT7oa3V26tP/oYsHV
6FUlXwtFh0V0NXrP1/adfONEdDV6RSdR+x0BIrqa746d/Hb3niK6Gj0oUOfw
rrqIrkbvUuPqsryDHnQ1etONNnaOAR50NbrP6f39mtX0oKvRlyyefSI03Z2u
Rh/Rb0lGtyB3uprve9W9XiPM3elq9JWdtD3qZbjR1ejdtaWHug93o6vRrzrM
Pf+//yKhq9H/vvgXcOWsK13N81CkWuQy3pWuRl9X0kfV1dqVrkavrVuya/EN
F7oavfhH2y2DZ7rQ1TznpjNOO7u60NWcPyGtZg176ExXo2+t+Dd8+RJnurow
99dKU8X/fNjGQvxnreBq9IKUEYPjpnvT1ehRTVtstvP1pqvRkz5NrVPez5uu
Rl8x6PLWK1bedDV6wyyX0Wc+C65G149vMzgvX3A1erWvqXF/DwmuRg8c+bJU
neRFV6Mfe9t2esYkL7oa3dh6ssRR70VXo4/5+1HzsKcXXY1uZntmZUp9L7oa
/dbup83D3wuuRk9OCHsSmiu4Gt0jekL5jIOCq9EtehUP3J1ooqvRp/U7n/sp
zERXo8dLaqf76010NfpJx/SHj3qZ6Gp0ebdtXrMbmuhq9KZzsm0GfhJcje70
rWH/BncEV6M/LvbaWuOo4GruS9XkEU1WCa7mvm/xmCWaaqSr0ft/XPMmwddI
V6MfOSw+9nGgka7m+sQ0fhzR0khXoz86vepiuyoDXY2+MmTo4pSTBrqa57yw
elPZHANdja6s/19oDw8DXY2+0WNPjLamga5GP/8vavyuLD1djX4h8GnHQcv0
dDW65mPrI9VNeroa3aZpYjOz5nq6mufzzXQfz8c6uhrdbWabiBNbdXQ1unPu
xUmjRuvoavRmjVcYNT10dDX6xe3nrSd80dLV6C0cwnMzT2npavQ6eTcm+UZp
6Wr0nEbPq7WTa+lq/q6O+Ys61tfS1TxvT7bWHF6goavRfz4Knl24UUNXo/9O
rvEhdqSGrkbvMGHFiAn2GroaPTLv5/2llWq6Gn2tZx+fl2fVdDX63hmtH86I
U9PV6A9Cd4yT6NR0Nfo8/20WyuZquhrdpfqnUwufquhq9MxVIfN+71XR1ej5
edcDDkSq6GruY5OXujWuKroaPWtq9LCT5iq6mvcix2+F1R0lXY0+Oatd2e6N
Sroa3ff3yqCpo5V0NXret4Afs/so6Wr0y/q2V878FlzN85mecLLfDQVdjW6q
GFT8cpWCrkZvZ3Wt751hCrqanzst6/x/9gq6Gv35hfwo7++Cq9Hn/gyb8/aq
nK5GD99rl3FmpZyuRr90M6bb1aFyuppz6cOvZ+Y95HQ1+lFJ4+IFPwRXo8/Y
6tjaMUtGV3P+rHqxu8saGV2NPioido5+pIyuRp8wNGrToT4yuhpdMdS9obqa
jK7mfRnW4V7r21K6mu+yLKGi+2YpXY2u/ZkTFBEmpavRu0yRdPzsKqWrOZcu
uyv215PS1eiLWtW/mVosoat5bt9833/jgISuRm+fr/zYc56ErkY/ftpjXY5O
Qlejry6z3buzjYSu5vwpb9X+xEfB1fz7q1PNql8W09Xoru+D/Rcmi+lq9MW6
GtaSUWK6Gt3cf43WeaCYrkb/WsejaryFmK5Gd/zX2arwkeBq9FkRYXtnHvSk
q3nf5QNO+0Z70tXo6603yCd6e9LV6GWex73OdfGkq9HblqQ+lf0UXI3+5PHI
jxZ5gqvRt1SziTPbLqKreU+/3NriMl1EV6PHesRK09QiuprrM1Y+1aetiK6m
r272CZn02oOu5r8/7OuP3ckedDX6tnWFGV5uHnQ1esamq6siXrvT1eghN45u
qrnana7m+5WRUGghcqer0SWKnh4x79zoavSSnDklE9e70dXoLb/rTt6Su9HV
nBvfp+duqnKlq9HVi652KtvuSlejf/n099JGkytdjT6lx5tdWdVc6eoQ3/k7
Rn8cLtqe5NQwuY8PXY2+vEZk750Nfehq9Ae3Hgy5+15wNXpSjYuptjmCq9HN
QyZ/WLBfcDW6y5hevmYJ3nQ1emGY870dY7zpavReObfGD5V709XoWz40bTOg
szddjT4nUvzRrpY3XY1eTTTn2cAywdXouTueVY64Irga/dGY5fb7tgmu5vpU
bEioF+NFV6Nvc2nRaNlwL7oavXW3hpftRF50NfqXYQmbn7b1oqvRO86L35/x
T3A1ul0n8/IdTwVXo/du+sf38EXB1egrXYf9eLBFcDX603ybe62jTXQ1+tXB
1i/nDzfR1ehVRR59fotMdDX6oGOTTq9pb6KruQ4/YqI0NUx0NXqi3rSwdZng
anRNg8M5llcFV6O7B4b5N98luBp9Y2cfO7dFRroava3R3j16jJGuRs9PO77p
qdJIV6PbWh1VBHc30tXo1pGP3SotjXQ1eveLd2oaHhvoau6vtJX9p80Guhq9
7qIvVTdDDHQ1+lrHQ6OKuxjoavTrt7bNs6vQ09XoFvFNJGmH9HQ1unin/NSY
qXq6Gj1l3PRng530dDX3S3L/wpK/OroafU1xit/nTB1dzXV2LN6/IkFHV6O7
ZmddGGvQ0dXoH5dOWTOrmY6uRj/UvLJP5mMtXY3e9LT3Wtl2LV2N7piYeqPa
OC1dzfuyPO9GVW8tXc37cuTFhvbfNHQ1euqXe57xFzR0NddzytJLnRdp6Gr0
8kVV1n90Groa/cStL8b6zTV0NbrBZdRYvxI1XY3+2L39yAe71XQ1+t/LvyWr
JqvpavRGsqv14x3VdDXP20ePzIzqaroavcvWvmOsb6noan5u9aDfJ1er6Gr0
YesnLUwaqqKr0b/f72i2tauKrkYfat91/psvSroa3dSgc+WE80q6mueq5cXR
douVdDV/V/2Ux628lXQ135F3Uh9VGyVdjT68Rsi9Q28UdLWwj/ODDccVdDX6
y+yuH+1iFHQ1z3/D1yucdAq6Gr1JtkgSZ62gq/n3KUctLF7J6Wq+X0dPlV09
Kqer0fW1s4vORMnpavTxroEv3mjldDV6+sWCBl42croafWDB7oDKcsHV6Gc2
D7iae1xGV6Nf6VPmXRoro6vRL6+vX7eXl4yuRnd40+BNRjsZXS3MK7fKyI+C
q9GfVbztPuGClK7m3FaPTk5NlNLV6Fl/ftjXHiKlqznPn7/7sb+HlK5GH91m
wd/434Kr0dN6/HDZnCOhq7kOrxKPvU+V0NX8XUkzx08Pk9DV6PbF74c5ukvo
ap7P6m3X/v//Nx6uRv9zyslq7DPB1ehqw9h7hUfEdDXP//47xXNjxXQ175fP
eochvmK6mu9m3NP86XZiuhr9SbfLF2/+EFyNPvmT/z/fHE+6Gt1Gf2Zlqy2e
dDV6SMKvmTaRnnQ1+xX7k14yT7qafvjlr7/a0pOuRg9ot0Q0+Z3gavR6jW8m
eV8S0dXobntaukesFtHV6LsuztLdGCuiq+kxz7cXA9xEdDV6ZJfQtR2sRHQ1
+qZa19I0eR50Nfqspod+Xp3pQVdzHjqFtT3S0YOuRt+fVNK60W13uhp93M7i
H6Wz3elq9FoxLie72LnT1ejTztwMLLnnRlejv5hvfGkR40ZXfyqudnxO5f/m
m+n36Rm5gqvRzT1HKJqlCa5GLyvIuZm32IeuRteXr5bsHO1DV6PfeWVxco3U
h65G71IV0WVHBx+6Gj31n9XqnGo+dDX60Jdda1g9FVyN3jLhbeSU84Kr0dt9
Xvz600bB1ehXh/cOXTLbm65G/xxRs8Ij0JuuRo/r1XluY0dvuho9qushm3/N
velqdGXyiRsWXwVXc519NYt7FQquRl9iPzM4/JjgavRlh8XSvFVedDX6hLlp
UuUUL7oaff3A9KElXl50NbplmufqFX296Gr0pSX+5UOtvOhq9NMdSgJVXwRX
o3t2O//ecFdwNXr1Fg93Rh4VXI2enNI45kiy4Gp02VvPuHpTTHQ1eve/osOx
3ia6Gr3/rFLzFv1NdDW6Ke9zwvWmJroavZHO1SX5P8HV6Lf6xNvOLhJcjX7t
+Ore808KrkZf0abj9M3rBFejj8p99/nRLCNdjW6n37uzX7CRrkZ/HGqxYq+r
ka5G793+3HGnNka6Gr3g6pNeef8MdDX6wJIVYSMyDXQ1+sJfD7v3jDfQ1eib
F/4c10djoKvRw3/16DWpoYGuRpdY7ppddk9PV6P7pCV5rVynp6vRE/o2OT1j
iJ6uRh8UbjiS0kFPV6P7ZQ5x/1Cuo6vRn/YxjZx/UEdXoxfOH9hRMUVHV6Pn
iZrGKJ10dDX66G9voxb809LV6GPbHe/w3zUtXc190Y6ZuHWZlq5G1wz4NCzO
W0tXo9fMc6y2zUZLV6MfC+pk/Fqqoat5fmJWeMXt09DV6IeG+tbVRGjoan7/
FNlstZOGruZ8GNNr14LqGroafev5+4mVN9V0NfdRXGvQpmQ1Xc15MiliR1Sw
mq7m/Uq9X7ihk5quRv/e7G3+h/cquprnv6v/2jknVXQ1z2GfG/aeMSq6Gr3t
kdIVHhoVXY3eKkByc3ozFV2Nvq7F4vuvnirpanSDg/xC0n4lXc377tkwOmKa
kq5GH+Yb3naZSElXo9+u/Lz5qaWSrka/bN+y+sT7CroafdqOEGWfHQq6Gn35
Lu2M3pMVdDW6bS/ditEuCroavdP3ojVFtRV0NfuSgCVRBXK6Gv2f2DV8xDY5
Xc13cPRr1dxJcroavajrRet8FzldjT7gXJvng+vI6Wr09sEjdnW4L6Or0d/5
PAltv0tGV3MfrV92Dpwio6vRp4qzym96yuhq9PHb8w5OaSSjq9HLNeLZfk+l
dDX6302hhsh0KV3N/dLP7J01T0pXo6+ddsLWVyelq9HVawKsbVtL6Wr01btX
2dm+F1yNvq39epXveQldzXfcYm1MVqKEruY8/HjyTuRQCV3N82nR0dW/t4Su
Rr/e/feVqdUkdDX68Ccjx966I6ar0V2HzegVvENMV6NvOGxs0WmamK7m/Nxo
3rmLQkxXo4suHAgcYS2mq+mlFd4nCysEV/PdD7MQxV7wpKs5D7cU/jdupSdd
jT5kxJVHCaM86Wr0zHd3Pz0f5ElX85zMt3CeZulJV6NvHzbilOip4Gp0xfsH
YbIMEV2Nnr5lzODYeBFdjd7Pquain8Eiuhrdt+7md/sdRHQ1enBU1+TVZiK6
Gj1W3PbzpOMedDX6pYtzJHbDPehq9NdlA9p6WXrQ1fNHxV5f8W24yCPUKE6f
4EtXo1eaeu+8r/Slq9E1vStLbbv40tXosZu//plX05euRt93LfHnz2eCq9GX
h5k/WnVBcDX68LZ7NytTBVejB3keU1vP9qGr0RP6jn5mFuBDV6NPGF05osFA
H7oafVjU0jt9m/rQ1eipYwP6TPkiuBo9a/L82Nv5gqvRRw2xzVYcElyN7pOo
qV2c6E1Xo7uYt3NbNtGbrkbftWJvWIDGm65GX5T7YYOouzddjd5V++26tI43
XY2es+Vy5ajXgqvRk6cqO27LElyN/nFHjP+P3YKr0T8phyaHLfKiq9HX3csu
/BPqRVeji2wPddwv86Kr0T2nf5gX2dmLruZ5uzLmlZ+ZF12N3iP6v6H+LwVX
oxc8C3sz5ZrgavS3RdvjD+wSXI1u1jXEpfoiE12N/mjuNPPI0Sa6Gn1+xPa3
f+Umuhq91a79b/bYmehq9P43NWZhFia6Gr3OEQ8P/RvB1ej1h7uu12QLrkbf
3rKqaWia4Gr0buObHduwzEhXo+e7a2a+CzPS1ejj3riODDIY6Wr0hX2XT3/h
YKSr0beFPs1YYmWkq9FrnNvgtOG1ga5Gt+pSFup/wEBXo69QXf2oDTfQ1eh5
t0c+mt3fQFejVzx/1rX0u56uRneS+ZREndfT1eiHx+T/8Vugp6v5udEjloxW
6Olq7te2+vHp9fR0Nfrj7IKvve7q6Gr02mZHisvX6uhq9FfhKS4Ph+joanTZ
0CnNa3bS0dXo6mEO4aFvtXQ1+vXgw5pqR7R0NXr2zvy0ezO0dDV669rjVj11
19LV6DefaMw6mWvpavQhneS1tuVq6Gr0pYvbrvJbo6Gr0S/P2XBMOkRDV6OH
SqdOmNBZQ1ejz2wQeib7vZquRh//u+3OkBNquhq9yyBv+35RaroafcDfPV6u
SjVdjb7g5BXb+Y3VdDX6pL/iZd8fqehq9KiMzB1pO1V0Nfrtuo9D105S0dXc
3402hWcdVXQ1+oEJData1lTR1egtaoqvpecq6Wr0Y1MHauatU9LV/P6TJi6O
G6mkq9FD5MOirvZS0tXoJ2ov6uv2U3A1+o8o750frinoas5zzcD7D1Yq6Gr0
ZWXrcn8NUdDV6BF7ShP8uyvoavS27yIbvPsquJpz2zxtyOlMOV2NvtLvxayL
K+R0NfpU32mhf4fI6Wr0hpsPd5huL6er0f/8eJHR5YfgavSaE4e0apQlo6vR
vzuPCO67RkZXo5/93W964kgZXY0evLXZpPZ9ZXQ1122mWPahmoyuRq+uqPxT
eVtKV/M+SoZs6LtFSlej23Q/art/kpSu5rsvahcf5C6lq9Hnhtx9LGkgpau5
v3U/2Y4uEVyN7j14k/ZyuoSuRg/v/muib5SErub8qWkX3cEooavRazm6LO7a
XkJXo997qY8f80VwNd/fv9OinmaK6Wr0ZsbLkSvWiOlq9MAk95Gzx4jpavQv
Q757bXIS09Xoq72/Sn5Yiulq9CNmbo7LSwRXo+9umNdn8BFPupoOtNnbd2Sc
J12N/qLsuusOf0+6Gt1R0dHL1t6TrkafJcmYmvdXcDW/Z83xu0/fFVyNrno5
6M2T3SK6Gt0/uq6HyxwRXY2+42DOvjsGEV1t+c7swa5fw0VLbg7YO6CeH12N
Xm1AsaziteBq9OxHmt3nrgmuRn9p9+LWvu2Cq9HVf/+cOhrlS1ejd79XMfn+
YF+6Gv15zo8vLZx96Wr0+0/DpFNb+NLV6Efexo9+VyW4Gr313Zjg6LuCq9HX
bEzq7HBYcDV6SvzT678Sfehq9HD7DZ5lE3zoanTLJc/XvlL50NXoST2Kbpl1
9aGr0Vs5Jz4VmfvQ1ehWSTaFa18IrkZ/cW9pet1MwdXofVa9CVu/TXA1eqph
UDNptDddjf593ZTddYd509Xope3WdXzv5k1Xo4tur19eYetNV6PfLRz7xuy3
4Gr0W5mfBrg+FlyNvmJdy+nLzwiuRvcqupL2e73ganSH1bkPFs3yoqvRvyVZ
/esR6EVXo6s8xrT76OhFV6M/eZbqntvSi67m+VkWHZz1XXA1em/Z45lPHgiu
Rl9nFrmu4WnB1ejv7pqdG7JecDX6tmzvl1mzTHQ1+qI+zZrrg0x0NXrign+G
T84muhq91ryrq9Nbmehq9MV9rV4t/i24Gr1Gs1WyqCeCq9Hv1PxwbOUFwdXo
HoHXB1zaIrgaXfft7M26MUa6Gt3bZ0JkRIiRrkZfHh/Wp0pipKvRlb4BFqs6
G+lq9K3OF77rahvpavRfXwZbqO8a6Gr03YrxAQ4pBroa3VZ/4oU+yEBXo7dM
1x7e1cZAV6Pnfe57oX+Znq5GD904tvHvPXq6Gn21U/mBXxP1dDV6wNztq/r1
1dPV6B+Ui2/s+Kajq9GH5Ebrted1dDV619WTuvaM1dHV6C3W9gqUq3R0NXqW
aV3Z2oY6uhrdpWBedvsiLV3NOVaQ1uhFqpauRi+59OZUyUgtXY0elv/jWmN7
LV2NfrLpeud5XzR0Nef5kijr9mc0dDX6j67DQ//EaOhq9IFVr9tZqTV0NXpF
3Uz9MCsNXc335UTy5xeP1HQ1usXcb5Y7dqjpavauy7aun6imq9EnP3t15MYA
NV2NvrTPerHDP8HV6PNtHXzzb6joavRNnfu/25usoqv5uSHd6p4ZrKKr0Tst
TDpS005FV3PdPpS+WPhZSVdzv46v3S06p6Sr0euc7vijX7ySrkbvsa+qZJiX
kq5Gn9lsWtDV1kq6Gj13puWkEW8UdDX6MJmN7aDjCroa/dinf6NlMQq6mufk
X3PTMp2Crkaf0+hEsaWNgq5GL3vdu97VV3K6mu/U/HulxzLkdDX6vJrvhpVE
y+lq9JBPlxaL9HK6mt+/YcrQx63kdDXXc1FaWfobwdXoo5672Zw9KaOr0Ye3
XVSr2iIZXY2+79jpnfN8ZHQ1+vhNdf/06yijq9FzQvY07PhFcDXPYeezJerL
Urqa83B32MS0FVK6Gv2jqeyMdLiUruaclLnlNHeQ0tXoh4as396+mpSuRv/n
aCUKzZfQ1ehRsou7S7dK6Gqez6xjD1IiJHQ1etPSmg/ixBK6mu9s6pndaU0k
dDW9UVkmt3wpuBq9yf34MztOiOlq9NED02pOWyymq9Fn1zF2igoS09XoF/2m
tbnSQ0xXoy90aVHl9k9wNe9jZa89X+540tXo10uOOj3b6UlXcw4sSzloPtOT
rkaPu5Bda7TGk67m94908/zbxpOuXj9l8Zsz/4aLns4/UFH/kOBqdP+3Y3oY
l/rR1egJ94uap4/xo6vRt8UOOWgn9aOr0Z+vCPxyrp0fXY3u0LnD67A/gqvR
DRYWK50fCa5Gr3/Z92OHk4Kr0bOPGMzsVvvS1ehT+vcvlEf40tXou4+7jFig
96Wr0a1vr0t7aO9LV6OfHzHzhLaOL12NfiS9etzjV4Kr0d3D/Zovuiq4Gv3M
5+TJ2u2Cq9Gt7PJW9or2oavRyzOto3oM9aGr0a+bFjjJXX3oanSTvGHmHBsf
uhp9UcvM1rnfBVejH/TdqHG+L7ga/evxFfrM44Kr0cUOa7uOXe1NV6O/q7/5
cdcp3nQ1v+efpHFmXt50NXpOF++CPw7edDV6vPPN1laNvOlq9LeLbivEHwVX
o5+r7eGzPE9wNf9+xjvp14OCq9GbhOxtNTvRi65G79LH45F1mBddjR4smrWg
UOtFV6MXvLVpfrCHF12N7rzxRcrWel50NfqaR8nmh98JrkYXDSsZ/ThHcDW6
ptXc0x0OCq5GX61uXW1RoomuRr8fPdnVbJKJrka3PGkbvlVvoqvRywJupfr3
NtHV6E9Mba52b2Siq9mtj5dbfxZcjf7psn2dzncFV6Mvr9aquzZDcDX6XLeW
2qTVgqvRX206Hv5hmpGu5vlsuGD9OH8jXY1u7lvnRjUnI12NHtew4E+GjZGu
Rn+95vZM8x8Guhp9faPldZ+cM9DV6D+TnmdURBvoas6xrtdn9JUZ6Gp0Rcse
gUfqGOhq9P+KqgePzdPT1ZxLPXtH+6/S09W8d/KUW/MD9HQ1eterTUQlrfV0
NXpJ7vxn08p0dDV6Dbt9h2T7dHQ1eqz7sMO6yTq6Gv2jaOzLxAE6uhp9SLdF
JvPfWroafefdad9OXNHS1ehba398uCVBS1ejn12189clo5au5vp4SYfZtNTS
1egyzxm1DzzV0NXoS5eUfp22R0NXow9b38Fh5mQNXY3et0vh8aODNHQ1z488
aUnnahq6mvd05vPD+TfUdDX63RPB9sdWqulq9CvRsb9vB6npav6ut0+6dOqk
pqvRpx94e+DwexVdjb7WvvPKaSdVdDW6ammtosgYFV3NfT/5a95ejYquRo+e
Mmtp8+Yquhr9ccjrauefKelqvjvWh55tTFPS1bwvHR16ZkxX0tXom1tkv64h
VtLV6LoN95stra+kq9EzJh86oXmooKu5v3E7c6W7FHQ1etvvZkOmRyjoanTv
7m3HPHNT0NXo/TIHfVhQV0FXow+4uKpqyH05Xc25OmvK3IidcroaveJYk8Xn
I+R0NfqcvQetxR5yuhr9g/mMfv/qyelq9Jt1tt+veiSjq7kOs4dYdNwno6vR
b5wryEqYIaOr0d2KerfsJpfR1ejKWat+VWsmo6vRx9dvP7XxC8HV/L2nvsYG
ZUjpat6X0b17Fi+Q0tWcb/eeR6R4Selq9FprOvskdJDS1ejb29QpOvZFcDXP
ed7GHy0zJXQ1euvK15eOr5LQ1ehDC773XDpKQlejNzubL14/QEJXo1/4Hln9
mbmErkZf97FkwrAHYroa/bZ147gW+8V0NdetcU2txVwxXY0+eG3atT56MV3N
e7fh75dV7cR0Nfpx0fvCXpWCq7v8qvvrds0Roqy4Y/UG+fjT1egLI+76mzv4
09XozTqv7vfZ0p+uRlccCdn+rVxwNbr5vK27ra8KrkZ3GrlP7L/Vj65Gl925
O/PwXD+6Gj31xQRN50A/uho9PP78ueMD/Ohq9DqJdW+PsPKjq9F75ybFdfso
uBo9zz3uab0cwdXoXlbWzy33Ca5Gr35r1vIui3zpavTaATmvBo/0pavRz/bo
8z5d5EtXo/sGZO6wbeNLV6N7blpXb/cvwdXom+Mvd9M8FFyNvjZW9cfypOBq
9I9fBia8Xu1DV6PXEC+9/SzSh65Gz/wtvltl9KGr0dc8913VqbcPXY0e/PNE
0/D6PnQ192uXT8D9CsHV6GMyWg4PyhZcjV4e+brnj72Cq9EnXtuZmRHvTVdz
/R26d1wy2puuRi97Z9TPlXnT1ejq3+/kSzp509XoHQfkNThW05uuRu/ge2nP
j+eCq9GPN1raJPiK4Gquf4cv3g+2Ca5G/xF0fHxEjBddjT43fUVglxFedDXv
o9S1wzeRF12NfmHRxOtl7bzoavSMHncV76p50dXolRqbvY1KBVej+4368Np4
WXA1+rSwKsuD2wRXc/3L8qw6LzDR1ejH7tn+OxVioqvRY97MujtWYqKr0e/P
mr+8fycTXc3znHSxv62Zia5Gd/iWd73tK8HV6H9ULnKPLMHV6Od+JB2bvVdw
NXpIsG+TuwlGuhq97dFGo2QTjHQ1v6eTdG+B1khX89/vM7k0qpeRrkaf8ap+
Y0UjI12NbjezX4TPCwNdzXsdbpXhtddAV3MONN/6dvFEA12Nvrj/BZtvDga6
Gv1FI5V80396uprzMKpF+Jwzeroa3VT1c8PKKD1dzX9/zcWbT6V6uhq9lrbH
v9C6eroavWlhDfdO+Tq6Gv3E3X+LbVJ0dDX62OJHz5WDdXQ1ujhJrj/UQUdX
oy/Y9ClX90ZLV6MfLIkZ1emwlq5GHz90c9N+M7R0Nfq3CS+fzXLX0tXo1/d+
vvXdTEtX8++bBz44lKuhq9G/2B202LJGQ1eja7JnD7s+RENXo0fPUD/t3EVD
V6OXeG5dcv6Dmq5G31j6a2TiSTVdzfN/5UHYmmg1Xc3z0zB9f6FKTVej97n8
wVbfRE1Xo7/bVyfrb7GKrkb/Gz0urXy3iq5Gv/Nxao5FhIquRj+8aXmPEBcV
XY3ezaVZXqWZiq6mE5aPzDifr6Sr0XfOzS+5uFFJV6MvannI6+doJV1NJ+zX
Nw7rq6Sr0eed/Wnb8q/ganSfDr9m/LqpoKs5ByxXd2qRoqCr0VvWMu88IURB
V6OLzJbP+dZLQVfzXZsb2v3cL8HV6K38r/Q7fUNOV6NPrnt//Yc1croafdbm
u0MHj5TT1egWJ5/F1egjp6vRC1O7NSj9K7ga/an87u9vOTK6Gn3EyN9eio0y
uho9fvh1q9vjZHQ1vTdN457kKKOr0W/v33E/vraMrkZ//7zs2akiKV1N5zxv
PbjDbildzd8bOFxzdZqUruYceHPi8GaZlK7m7+rVffmRZlK6Gn3FzYsvf78U
XI3eeuTs09EnJHQ1eq+TgZZu8RK6mg7cGPSkT4CErkZPMpvRZ1g3CV3N89xs
d51rPwVX8z62LB4zMkdMVx9bkFjvZe0RoqmPdZZHfgmuRj+b3epG/fuCq9H3
ZMb+XnhUcDW61ZHK/dbL/elq9A9X7hbeGOdPV6PPTIyJWiXzp6vRq3UN2j+r
vT9djX5efThgzh/B1ejPJtxZtu6h4Gr0DsW1VHeOC65Gn/Z8aVLnZD+6Gv1j
0baQNZP86Gquj9vcq+00fnQ1uttT9cksOz+6Gr3fi0FuS2r50dXoEyvGBIwt
FVyN3q7jz7ohFwRXow8cbuE/Y6MvXY3+t/8e970zfelq9Iu1X2VW+frS1eiz
u95+PbifL12N3ufVmEPPGvnS1ehVOw5bR38QXI3e+v3Obi45gqvRxyS4lDbe
L7gafcSK0eJai33oavQpc5sYrEb70NXoO9zs67hKfehq9BxNcmRMBx+6Gj30
VNfE59V86Gr0NqLsoGFPBVejFwbrn3w7L7gafbppcfMDqYKr0SVShcXcOd50
NXqx1O/YmCBvuhq94Yi5tpOdvOlq9DoZc8XJLb3pavR14c273vkmuBo9+0et
2/b3BVej+5T/c9x+QnA1ekXLs2P6pwiu5r248mrw82ledDX62zm9bQ74etHV
PJ9q920rB3jR1ei+R05VJjfzoqvR7c+Lmhz+T3A173WjadXfFAquRq/+6dNF
txOCq9F/6LXG9BTB1ejpj1odc55hoqvRNeaf3z33N9HV6PWbB/3e7Wiiq9EX
dH9etsjaRFejz9E03rXgp+Bqfm7kRM8NjwVX87ylTDuTe05wNfrljLTGrTcL
rkbPe7BEuTjKSFejb+q1bHjDEUa6Gv1djS7BR8VGuhr9+p1bThGdjHQ1+jf9
hz8acyNdjR5T8tW0MN9AV/OcPD83c/9qA12N/ijvX2TtQANdzX2ft1SS2tpA
V3PuJXd5P/a5nq5GL12SHBm2R09Xo5flLS3aN1FPV3MOX7rZqk1fPV2N3iXn
rzT7m46uRreY9cAn/byOrkYvmvFPlx2ro6vRA4626NdGraOr0UcHXTLf30hH
V/NcfV91K+y+lq7mfs3qGjdus5au5t97NOy3KVRLV6MPti98ZNFTS1ejdzpU
Y/6BKg1djS570Krt4nMauhp9yNCtlzbGaehqvlOHLEPLtRq6Gr3tv4IGE5pp
6Gr09frJl7qUqOlq9AvzVHNt9qjpavR6vnlSebiarkYflDzKdr+Tmq5G31s5
yUxeU01Xo2+QamvY5KroanTDWP9mXdaq6Gp0cWi5aPwIFV3NdyHcEP/KXkVX
oxd8L3m74auSrkaPO1waFn9ZSVejD1i/xerAMiVdzXNYf8hjiwAlXY0efSso
e1NHJV2NXuNfYen4jwq6mvNZY9Ep/KyCrkbvW2i36mC8gq5Gd9eO6dPRR0FX
o5dU/VftTjsFXY3e88i/miffy+lq7m/dg66FZ+R0Nfot544H7RfL6Wr02P5x
/md85XQ1+qUDH9xiOsrpavSaHeeHRH8WXI2ueqvOOnlRRlez9xk/yW65jK5G
P1T3Q+DtwTK6Gn35tJdLD9nL6Gr0oaGDzW/8FFyNfuJm8K2W2VK6Gn1jypvi
beuldDVddMvCbeQ4KV3N8zn39PvBTlK6Gj31/vdPy+tI6Wr0gz0vK388lNDV
6PE/6nzbuF9CV4vrNmrz0/J///6CmeVzdgXQ1ejH/5PMGx0dQFejfzu6K2Ji
cABdjX5qQaOsxIEBdDV6YMinqOzGAXQ1esaO/Zs7vBdcjS6qt7lzyg3B1eiD
Kju06LzTn65Gfzl06bTbUf50NXp8+46SNcH+dDW653+9F0wf5E9Xo+vXfu4/
pYk/XY3++fm2IUs/Cq5GH1gx9e+FW4Kr0ZObrrdusFdwNfqWnoOOzIzzo6vR
VfGRWX+H+9HV6FvrjRu61c2Prka/GNhv5hAbP7oaffPdF80HfhNcjV7n9FLX
7gWCq9EbivtUOB0RXI0+Nu1hp9DlvnQ1z4MhriJtgi9djf7pjL1nA5UvXY3+
3/lrdsu6+NLV6Pkxkm2da/nS1ejrN6w89KhUcDX6e+t1PmkXBVej52x1Tl67
SXA1elREwPgtc3zoavSV0TklVwJ96Gr0GovCPld39KGruf71G+wc3NyHrkYf
ED/3+90qwdXosX6xn0bdE1yNnvb8daLVUcHV6DN3Tb77eIU3XY3u6Fx08dJk
b7oaXTLxvv9lvTddjR4i6576pKc3XY1+vtWC5c3qe9PV6IlbljuMeye4Gn3f
61+xD24Jrubvio1cMjJNcDW/z/y1srpLvehq9KHT6p3MGe9FV/Oebpn8bL/a
i65Gf/U4OHNndy+6Gt3mzNgRZ+p60dXodxO6n6t4K7gafeSovoWOtwRXo0sd
G6RvSxNczfteoFR2WWaiq9EnfBm36/pEE12N7iv+en2BzkRXcx5OmZwe1MtE
V3OuevoM0Tc00dXobWa3KxzySXA1+uG6uhYJdwRXoydYGDvnHxVcjT7pTGq1
fqsFV6PX375j/5FpRroavcXCu520/ka6Gn3U9NXhNZyMdDX6mhJTUoGNka7m
falbWmvhDwNdjV7TYU/KuvMGuhrdbMLJorIYA13NdX6VmzVabqCr0evmbpvY
3tJAV6PHBL7MapKvp6t5j17Kit3W6OlqdNcfEw5sCdLT1ehZQb+cndrp6Wp+
H9tVS+q+0tHVfKfScjc1OaCjqzmvnopm+ETq6Grui/l861xHHV2N3raqcfy8
f1q6Gj2y4cIrode1dDX6kWHBeQsTtXQ1eu76pgef+GjpavQ+PXuMCLPV0tXo
l43W7/u/0NDV6A4NDd79D2joaq6nt2vKhKkauprn5z/NqUeuGroafW/mi7Mx
Zhq6Gt1u1bgdw/PUdDV6F4VTxIy1aroa3aUk3e76cDVdze8zr/1NbXc1XY3e
bM4Lf8sqFV2Nvmucoqj6BRVdze/ZIUXusFhFV3Mu5bdMS/FS0dXonX81MR/Q
WkVXo9dafiPQ8rWSrkb3ejVlr3WGkq5Gf/TIUDVsvpKuRv97LdmjRKWkq9FT
kyYvW91MSVfz3TnR7MmCUgVdjT474Ei/fQcVdDXPofuE5NqzFXQ13fJ87K9N
cgVdjT55Vk74xCYKuhp9/p9jVZHP5HQ1ndPfPeHIQTldzfU5E+3QdY6crkbf
bp78rkgpp6vR7WfFXTzfXE5X8/sPHZNW/EJGV6Nb/ZAf7Zcho6vpkIQeRVdi
ZHQ1eqh/G+slRhldTR8ebzsvoa2MrkYfUb9PrcsfBFfTFS8Mhx0uSOlq9HEv
psc+SJTS1bdXJvdu2Oh/bpzVf9taUyBdjW7/RT2jUY9Auhr94pcfyTvNA+lq
9N+dT3/1LhVcjW4e/GNnm3OCq9H37Oq0tdbaALoa/fq8zW/NIgPoavTbTzIX
ddAF0NXo0uEV04O6BtDV6NWGhJ4/WDOArkYfbDZ3sO1TwdXop6Om+O0+I7ga
fX2NJQc1Kf50NfrZD99G1ov0p6vR/3v9cc5rnT9djd6pcvO3p9386Wr07XE9
Hn4x86er0U3bz3Ro/1xwNfqJ/0KLxl8QXI3e4IXs6+0NfnQ1+sSdE+OMM/zo
avR5vuUL3nn70dXoX60uVO5w8KOr0Z3qVj2YXt+PrkbPXR7fP/St4Gr0fr0i
LSZnCa5GD8jc67d6p+Bq9P0JrdoXxvjS1egHep8Y12eYL12N3vLNsL77XH3p
avRn0b/mutr40tXoIePHaCq+Ca5GT787b8vxQsHV6LZHms7ZmCG4Gj31/p+n
qSt96Gr0xzVq55+e7ENXo2e++aH9ovOhq9Fr6VID5D186GreI7PDVcfr+tDV
6OObVXbwfCO4Gr320bYvy7MEV3Pf/d657t8tuBq9zW3LHosXetPV6M2UPY/F
jPKmq9GLA38XpUi86Wr0l83bp2R18Kar0W1aiiqb1PCmq9EjEn5+nFMquBpd
O/BD4r9LgqvR/dYcz9u8VXA1enxBeUZgtBddjb7rRUsPh+FedDV6UtzDiA4i
L7qa/472pM6hnRddzblx2rUgsJoXXY0+e8Bn8y3PBFej/+sSWP7vkuBqnrev
/02fu01wNXqijfxk0wUmupp/3+HavhshJroaffqFCsM6iYmu5pzM7p0W28lE
V3PeBtQ6v8TMRFfzXB17uOjgK8HV6GtmtK77LktwNfrRhc5K+T7B1eht26wX
n1tipKvRfz7b/FM30UhXo/s+SI/4pTPS1egLorvtu9rbSFfzPOdP3L6vsZGu
Rv8Utfe8T7mBrkbvvSfiYmKaga5Gnyp6rv072UBX8z7u2z52d38DXY0+MNav
2aIferoavdGFVN9NF/R0NXqLtIY93sXq6WqeNwvZxkiVnq5GP9Yob5dDQz1d
jf5r0SB9l0IdXc35cL3OWu+NOroa/XjOjQWnRujoanRPTVUT3646uhpddri2
rttHLV3N+TxgtsOAE1q6muv89sKlmfO0dDV6t+vSalVSLV2NXjdt+ufd9bR0
Nc/VrLMpKws0dDW6hfX0LxmpGroaXRlrVrtBqIau5n3Jv1q0paeGruY5FFuO
GvdVTVfzc3U9joy/qKar0dftmXFpx2I1XY0u0TutbuqlpqvRa64+3et8KzVd
zfvYzS1500sVXc11szO7fPyQiq5Gl7cynDebraKr0VdY+iYkSlV0NXqHeJ2d
rqGKrua5TZuwXvpISVejBzs8LZ2yS0lXc85PKqjxOFxJV6PPGDf17yxXJV2N
PuXxiyKjhZKu5jvorFw+rEBBV6PvuHy+y+6tCrqac2nuiO2dwhR0NXpXnbbm
YycFXY3+oXKV5qa5gq5mt9bM+3hPTlejx/jHbNBtk9PVdJerZFfZJDldzfsV
uGHLEVc5XY1+T5a49GRdOV2Nfmp32wn/PZDR1egTnLxEE/bI6Gr0yw861Lee
LqOrh1g38+zU9H//XXw5xrFWtSC6Gt37ksMJy0eCq9E9YqOH9zomuBrdeuN7
p4nLA+lq9IEH30uvjQ2kq9FTV32MdZIE0tXoJXODf9xoHUhXo9+ou2rPlO+C
q9Gl4Z9XON0TXI1+d/mtkzbpgqvRrZqEt2mREEBXo09bYZfVa1QAXY1+NLX/
sREeAXQ1esu398oP2QTQ1ei7R7iOsv4quBpd7brFfvMdwdXoc1p1FbkfFFyN
vqH9nx0/FvvT1eh963gE5o/yp6vRg13rhFwR+dPV6D/fRly6betPV6Nfa7dk
+vfvgqvRvz4assi1UHA1+h/bqs8bjwiuRvcyM5xtvtyPrkafWjrhxYHxfnQ1
+mhPyeShCj+6Gr2b5c0h9p386Gr0oYnvjjSp7kdXo29euS6sRYngavRNkzKS
B54VXM2/t27bMWKdL12NnjfodLusab50NXrD3sGJjt6+dDX6pIGPxl9z8KWr
0SeMrn02rIEvXY2+78ahqD7vBFejJ41JPdMoW3A1+vghyWGWewVXo9uVeW1o
v8iHrka3H7ZR7D3Kh65G10zpPHar2Ieu/j8i7Tuq5////3iDzOydXRGyKmWU
QrTHa6+2skcIIbOMCCmVLbOQEZW9Um+ypRRllh1lb36f7zm/2+3x1+ec6+m8
Xs/X4/l43B8X7/NB/1c/rWG9LnK6Gr3u+ML+q/8JV6Ofs1Het3wkXM33uPxh
rVdnhKvRjX40zjm3Wbia+ydj3fsjc2V0NfrSAMMj5zQyuhr9zCSD3y8Hyuhq
Ps8LiyLLNjK6Gr1PivHg1d+Eq9HPNnbuW69EuBo9MssvOzVHuJqf/1/lDVmy
cDXXP3zM3K6zpHQ1z+ONcWcaKqV0Nc/1t6lJzWyldDX6qCZ/jGxaSelqnl/3
Nc2mfRWuRn/9advJgnvC1eg+i9L+OBwXruZ6ruvw5EaKcDX6LP2IkDmRErqa
5/dtu2VOGgldzZ610NN0sISuRi9oYXy8i4mErkY/1LnX5SG/hat5X/g6Lpj2
ULgaffKKjIe554Sr0d91vfuib6pwNfrCr002n1jsS1dzzgdc/OU32peuRtc4
O9TvMNKXrkbXNyu7/L2bL12NntaqekBNXV+6Gl2ZmXTA6J4PXY0+euc8Segm
H7oaPdSqZ9CPAB+6Gn1+bbsH+aY+dDX6Ckfr3IJX3nQ15/a6A+1qH/Kmq7l/
3CxezJ7hTVejv9f07t51kDddjX5h8uAnhv+86Gr04JqrzTvke9HVvB/bK/Mm
r/Kiq9GNjXw+f5F40dWcA/vN9ma38aKruQ+/DyvPeOxJV6PHPTLeWLbXk65G
r6V4+2jYFE+6Gj16wqAjjwd40tXoy71ljbP/eNDV6G/94v9ezPegq3mfWjgv
MlrjQVfz3ll2LnmJ0oOuRs9K9nC27eRBV6P/uGO9qssrd7qa92mTM5OdM93p
avQ6Kebvt811p6u5Ph0ONerv7E5Xc06Wrb3z09idrub9kqA/6HeJG13N/Z9g
6zJgpxtdjT7tasDfPZPc6Gr00qt7g7zt3OhqdMVdu/A+Bm50Nb/3vl3fUTdc
6Wr0RgkF25M2uNLV6B3mNsxrH+pKV/OefdR+W1lfV7oafeyL5v0KfwlXo4/f
UCdK74oLXY2+6nn9mDHrXehqdLsjvd1rBbvQ1byPiqJu3+/tQlej1+5j0Pbl
T+Fq9J6788wtr4yiq9G/W175np40iq5Gb1VivN5/9Ci6+k1qinRQm2CnSZqg
gxePCFej5wd+GaReqaWr0RuEDnpQL1RLV6MfeHow/p6Dlq5GX6C+EXiutZau
Ru81uYH7xQ/C1ehd6hVLHl8Trka/NCd+Tpu9GroaPXrN1kuTFmnoavQ9OQqr
cq2GrkY37NjwypgBGroavUeB8fKGTTR0NfqrIzum3XgjXI3+ubzuyn35wtXo
sgULClNT1XQ1+um6A72OzVPT1ehLPMJ+P1Gq6Wr0biv7Pethpaar0V8kntNb
Y6ymq9Fty/pojV8LV6MHxG2uScsTrkbfuqvtf/6pKroavaXhyfI+USq6Gj1z
eYytiVpFV6MP6rikuKuNiq5GH1Ny9PTIJiq6mvvkV7O30VXC1eg3O24Ke3hF
uBr9rNWQ3tI9wtXozTdVjni2WElXo4cPXnRgdYCSrkbXW/MpTD5ESVejt8/u
NNO2jZKuRrdZ/vSB9RfhavTRu5pu9CwUrkb/tCgmc9Fh4Wp0k4X1u92OU9DV
6E8/T/0+eIKCrkZ3dprf86KLgq5GH1z89WyIuYKuRo/33JrVyVBBV6O3mt67
yfcnwtXoL6VBhW/PCVfzez3e/v65RU5Xo1c2X7TOfJ6crkZfeev6uokaOV2N
/rx11L/rdnK6mp9ff0C5Wys5XY0ukW/u8eyzcDV6Cyef10l3hau5DhfetQ87
KlyNfnFek/981snoavSE+14vFOEyuhr9XYNBC2f7yOhq9CkmIQlZfWR0Nbrl
R0UX40YyuhpdNWZb78XvhKvRDzvnnmhyQ7gavaFuZN7pDOFqdP8l6ZIlcVK6
Gj0tfXxI6CQpXY1e+sDwe7CnlK5G9/Gubj7PUkpXc50n7Dh+uKGUrkYffyeu
8l+VcDX60Aldtky8IVyNfnXc9ccfDwpXcy4pvx9JWiOhq9HrdzBuKp8qoav5
OfXD9fv4Suhq9N+PoqNN+0voavTOt9M32DST0NXo1uvthwd/Eq5GvzBu0+J9
RcLV3LftTNTGOcLVnLfGLS/HpQhX83wNL7/VfY4vXY2+JiR3xiOtL13N773Y
KuuIvS9dzfc+vlvCto6+dDW6or1943Q9X7oavfslJ82mfB+6Gr1NY+sSk5U+
dDX6dXXJpiJvH7oa/fKKzL15zX3oanS107A/b0u96Wr0iBf6O9y3edPV/Pus
CeufjPamq9GVF9/fP9jDm65GX9H4z4yj1V50NbpXil7Y+2wvuhq9jizocHCU
F12N/sZ9oaLhCC+6Gv3t9jOa9/W86Gr0YSkzztW540lXo7vu+bVUvcGTruY6
R6YffRLoSVejFxpcHZXa3ZOuRu+4PMM5pdqDrkafmLrhUP5xD7oa/YzX3WW9
FnnQ1ejzf229dcXVg67me1xtu2prUw+6Gr1gfMnpfQ/c6Wr0WQuPj363y52u
5n0nq7903GR3uppuqa3X1cTOna5GzwrKt6+t705Xo9ctiy7pds2NrkafvCf4
88IkN7oafXfm4qQmQW50NfqA04ZnS3u60dXo/XxrTS794kpXo8+5vyWt8UVX
uhr91s6KKQviXOlquqvibZ6Z2pWu5vvNzz9gYOZKV/O9TF5g3qbGha7m59Tu
bBN2xoWuRs89l3n/9QoXuprr89iuzV6FC10dadEu1Lv9/+b5sNv/bo3W0dXo
l25vMPhqr6Or0YOSzPTsWunoavQPP378TKgWrkbv5b/hS70C4Wr0FKvIj5t3
aulq9KKuDT67RmnpavQGvc78bqLU0tXoXqerG33uq6Wr0c8WGfb+WE9LV6Mv
7OaraVApXI3etWe3ZMdzwtXoMY53nq/ZoKGr0bdfTnb/MV1DV6O7Oub8t8BL
Q1ej/6ce79fJQkNXoxu2rDQuM9DQ1fyccvnDzIfC1eidkyuv7zohXM31v5Dz
6Eiimq5mX/G6xf0paroa3e9R0rT27mq6Gj191a2vc83VdDX6Yfc9ez/rqelq
9NL7naNjy4Wr0cOauKwZdEK4Gj36Y+urtdar6Go+Z96agW+nquhq/t7OO8uq
PFR0NfeJgXN2PQsVXY1+qDL48rBaKroa/cnlyuZJT4Sr0b+5Z24xPCtcjf7q
ZNro1RuVdDX6g467J1jNUtLV6NelC459lCrpavRw4/pON/sq6Wp09y+tmuU3
VNLV6M8OhfcqeS1cjf7z7aPVtS4LV6MnzDUf4rVbuJrnTlZrQOZiBV2N7pBm
N79foIKuRjevnt3ymr2CrkY/+G3Ov0XtFHQ1e/V7e+l34Wr0JjNjbg29J1yN
vn9H5YlRWcLV6M3a5PwcnyCnq9GzG29JTg+X09Xo8mDbNQY+croa/VRCl4rZ
veV0NfrEZ1+T6zaU09XodjLPA1lvhKvRxx/P6hJVIFyNfv/0+V8B6cLV6Pkf
fwz2Xy6jq/mcj6qezBojo6vRbX51rD4wUkZXo+debT72t5mMrkav89DDfVwt
GV2NfuyB86bqCuFq9DNr5qgTLglXo1dWBy/z3SVcjd635wzzntFSuhr9dlon
u06jpXQ1+rx2JWf6jpDS1eg/oo1O6EyldDV6Pcc2PXcZSulqnq86ES2MKoWr
0eNrLYyMyROu5nPe2KzquEe4Gr1VRM9jd5dK6Gr0y6tXxO0eI6Gr0YsHNn0e
7yKhq/nezTuc22AhoavRjbYatD1TT0JXo1fFtvz2841wNef2gjSN4rpwNc/p
6TrDrx0UrkZfNig602+tcDW6ycHQffWm+dLV6GPXfu5ZKPWlq9FHmM2xy7Hx
pavR9Rbb3s5u5UtX83yZP6za8cGHrua96Z6rbJzjQ1dzrt5JeXJsrg9dzf1Q
UxS31tGHrubznK/y31nLh65GfzPCW1lV4E1Xo3+eHxo5ea03XY0+YXryf+YK
b7oa/aWty4iWJt50NbrVn+KaIU+96Gp0x47b7mxM86Kr+Tlm3172meJFV/Ne
KLWx/WXjRVejL3ZLO/f3lyddjT6/ZFP0oEuedDXntqN6+YGVnnQ1esO9Ztfl
Uk+6Gt1i6zD5gHaedDX6LKt3XbyeedDV6OVfg+227Pegq3n/1i1J7jrDg65G
H22yaPiTIR50NXq3mNX2xbU86GruT0fL5fo33elqdOnvpWZhKe50NXq16cVW
esHudDX622d6QYU93elq9LL+YQbln93oavSjD+vrdTjvRlfz/l3bQJcU60ZX
o9+7N7/lSLkbXc1z2ntmf8tObnQ1+tLaBpnub1zpas7zq/2TU7Nd6Wp0ZXWj
it6LXelq9I4fUjd+9HSlq42ObJk5uvP/7vc5d/r2betHV6PXaW7S5PkH4Wr0
uq2HF2ZfFa5GP1JxJ3LHLh1djf7nlLdRepSOrkZPqxgwv0Cho6vRcwv+PK7d
V0dXo4d2bNXfv66Orkaf/PXl9FtPhavRq14Vp/mdFq5Gl1naF9ZK0tLV6NbH
wj9fnqKlq9E1rpea7HXV0tX8/H3ze2zvqqWr0f12Vzgd+y1cje5saa15dk+4
Gr109u4Iy0zhavT7rSckrVuloavRTzbOPNt0jIauRp/4LrU6w0lDV6PHPdH1
Hm2ioavR793+G2nzVbgafW3EjqLOd4Sr0e+GKYdbZAhXc58M7JXnvlxNV6N7
x1n4rQhR09XoBebShk8d1HQ1+ow/e+/J26rpavRJii5nKz4LV6NfupZzcfVt
4Wp0+8nqF9IM4Wr0Lpc/WlqvUNHV6IN/TE7pE6qiq9HrXT7YfaSTiq5Gz05f
93hWexVdzfdV9vnCpe/C1ehJMw7d6FUsXI1+bNy6OoczhavRe+2bFO61RklX
o0u7N6hfZ6KSrkZv+dr6XpmLkq7murXaf++amZKuRi+v09u4RF9JV6Ovk0fO
+/NIuBpd/8kIU8czwtXoOS9HGG3ZqKCr0cOb9OjWYraCrkZvPSM1Jk2uoKs5
B/bJTJVWCroafWXZK8POTRR0NfrvAgOL2u+Fq9ENyp3W1b4uXI3eu6fjsC77
havRPVcmD1KvkNPV6Bs2lc/bP0ZOV6Ob3NhVr81IOV2NPm76vMpUUzldja7M
qzYeaSCnq9GP1sQur/VUuBo90vS29PF54Wr0r/EjpxVvE65Gv7lwQuWL+TK6
Gv2E9MzB5v4yuprPn5B9U2cvo6t53r/ccD1vIqOr0b9Mmtth6C/havQrPXp7
lz4QrkYvTlOUrz4lXI3eIyeoIGCTcDXP0cITrTzmSulq9ITEvHypVkpXo298
97pk5mApXY0e8Held1Y7KV2NrjtWp1ejX8LV6NcWnJ0SXSZczc8JrGPS4oxw
Nfq/lw79L2wRrkYf4XL86PL5EroaPdP7cuqEAAldjT587vnf4xwldDW607f3
l5d0ltDV6HMP7DQ8oS+hq9G72ptn1q0Qrub+aXH+TkSecDX67kk5Y37vEa7m
e/H1mbZ9uS9djR6y+9pH//G+dDX65z4Tq+w8fOlq3iObJwb27u1LV6P/F13X
a2hjX7qa87ny66TiZz50Nfr24m+DwtJ86Gr0kicLDC0n+dDV6JLmn6716O9D
V6NvWnM8KeCrN12Nrk7sNfrqaW+6Gn1A3H7byYu96WrOmTZxzVxcvOlq0c1+
qIy96Wr029m5VdvvetHVnCeTs6o7bvKiq9EbdxheqzjIi65Gf14v0zK3uxdd
TT9UDZ/44r0nXY1e8X1A7rAcT7oaffqbPOui+Z50NfqP+t1zt470pKvRFzrE
T91m7ElXo58x6j/0XrEHXc17Ldm238htHnQ1etHtqy5vx3jQ1ehXFS2WX+nr
QVejD1tlW1P+3Z2uRn+5W7LUItedrkZflrHE9cAqd7oaffPKiiFhCne6Gr1P
o1XByk7udDX6oC9xpxe8dqOr6cPPPzweHXOjq9FXn3vcYuYCN7oa3cbYrc0I
Nze6OtGu0/JIs//9+1Ev1OHxbeFqdEW3qBDzfX50Nfr5V+t8ly32o6vR928b
UN9A60dXo5+dVrNug5UfXY1uscj5jVsDP7oaPftPRstWlcLV6Ftk21r9OSNc
jX7UcVn13yQdXY3+8+O1nSZTdXQ1ukff21YyVx1djW4e+m7Hni46uhp90LXZ
H5v9Eq5Gz4g+221zkXA1euBBo2FDD2npavQ60Ukjfi/X0tXohTP29isO1tLV
6Efsw+sXDNHS1egr9MzulrTU0tXoUUHv4vRrhKv5vYkfB426KlyN/n6uvHzP
bg1djb77bJ9ZnRdq6Gr0X6Up9XI0Groafe/AHRvG2GjoavS/7ipzq8Yauhpd
m3Qxs80b4Wr0/leeObbLF65Gjyw8ccc2VU1Xo5/5bD9+yjw1XY3+/e7ouheV
aroafc+qDpl9rNR0Nfr184qw48Zquhp9zqFP3XSvhavR7zg9+NY2X7ga/bfJ
q/ufUlV0NfqYzG83X0Wp6Gp0fZ/Hpd/VKrqave+0H6YDVHQ1esfl86wmNFXR
1eh6G64svfZOuBo9/3THLy5XhavRMyOcljzeK1yNPnleVZ+EaCVdzc+5/vB3
YJCSrkZfefzaO1cHJV2N/vr1eEOvdkq6Gn3cgnGOk74JV3Of1I3YtbdIuBp9
9q4B/X9nClejN/spfTNprYKuRp+vmnL7+yQFXY1+8Ui359vdFXQ1ulFm654h
Fgq6Gv1F3v1URyMFXY1ebm7gMbBSuBq9+/OuPT1zhavRN3+96jgvVbia6zBk
2er8BXK6Gn1s3MMWvfzldDW6X56y5MAQOV2N3vxqxD2XdnK6Gr33puPN/30X
rubz+26Jv1MiXI0+zXqr9/kc4Wr0hJP9fa4kyehq9OTkm4lVETK6Gj0493kH
S7mMrkZXL3nxfpm1jK5G7zDdoe6fZjK6mvfRKvnENR+Fq9Fd+ie2HVIoXM25
ZBXQwvCocDWf535r/xfrpHQ1urKq05fKaVK6Gv3DqbsP/0qkdDXnuemaNjZW
Urqa67YpbW9MMyldzf1vNSu25qNwNfq/3V65s+8KV/PcKRZK22UJV6Pv8NMO
KV0vXM35vLrXgsyZErqa8zzKof1epYSuRh+4vLRVjp2EruacKR0+9WkbCV2N
bhl+oZvFT+Fq9PGWiUNXlglXowdc+3m8zlnhavT2n23Wp24TrkZvaD+/SL7I
l65Gr7Y0nmsW4ktXoxt4tF/W2NmXrkZf1O7Jj5bdfOlqro953D27ur50Nedw
rd2D3xT50NXobw/mbtu80YeuRj+We6ssOsCHrkYf/aXr552mPnQ113lIkzff
X3nT1Xy/916eX3rIm66mr4K+znaL8Kar0R/cjWnhPNibrkZvkFKaMlPPm67m
fl5qXevRf150Nffb97u6+au96Gr0uKLPqTK5F13Ncx13ozjIxIuuRl/QL+H3
7meedDXfY8SM1p33e9LVnIcntlkUTvOkq7mfmw+1Oj3Ik67mve8XaVum70lX
8zz2mWZnddWDrkbf9d3V7kKCB13N8/i3/cClOg+6mk4Iq2O/2MyDrkZPs+80
MuudO11Njy2OVHQ87k5Xow+wNJt6fpE7XY3exrrf+hR3d7q6y/kdG1ZbBDtF
ly63eLLSn65G/1L/zI+cEH+6Gr2ofot56YP96Wr0Pr3MD2c186er0Y8tnr+h
7I1wNXpY3d2DOlwSrkb/ca5N0pzNfnQ1uuE1+cGaGX50Nfr4lKsxSzz96Gp0
p0/PO/Q196Or0c/1bTjv6x/hanSFw5ZtpfeEq9Ejr7xfWXxYR1ej2yqUw9+t
0NHV6BnaTpc7hejoavSx/vEmk4fo6Gp0n3pvhhW30NHV6F08xtqr3wtXo78d
52D89bJwNfqsdltyDu3Q0tXoF1IPDl4yT0tXo38vT94crtDS1Vy3sbPL5vTV
0tXoUbvH/95aT0tXozcpX6L3sEK4Gr3Q8+5r23PC1egbh405dWCDhq5GX24+
PGLIDA1djb47ZVzbF14auhq984J7Bw5YaOhq9OFtY3rHGWroavS8lmGpyx8J
V6PX2T7OaNtJ4Wr0LeFzgm+tV9PV6Otfzj9mEq6mq9GTm6v/LvFQ09Xowy4/
H1G7u5quRk9M11u200BNV/M5nRb8p30kXM3eoF+dPqeEq9Ezl1e4tU9W0dXo
q0aExJtPV9HV6M3fTyt381bR1egtQ4v6xvZU0dXo0nMucRVGKroafUXgsk/q
CuFq9HJ9l7GvzwtX8/zm2b9ev0VJV6OH27aep5ujpKvR749d0tFBqaSrOZc+
dCseZK2kq9FX1t6fKmmipKvRl806uCTmnXA1+pXLt6IKrwpXox+yzYgfki5c
jT7zvwfnzy9V0NXogR41DQJHK+hq9CUzF8xqO0xBV6MfLWuuX91RQVejv6xt
f/Dxb+Fq7pPZC6PePhCu5vqcHB3e7KRwNZ8zbOJKeYqcrkaPsWx1PXOmnK5G
71/5xLanXE5Xo+uvGXn9rJWcrkZ3Dj69elJTOV2N/u1uTpRtjXA1+utd+zaZ
3BKuRp/+2OC1ySHhavTP7/qMt1sto6vR4zektJ8ySUZXc141213rgoeMrka3
1jvZtXcvGV2NfmvxwMjs+jK6mus2cImR5o1wNfoin083W18Vrub6R78o/LBP
uBp9RK+s5i9jpXQ1upn90YRv46V0NfoYuY3E1F1KV6M/vrDKd0JPKV2N7hpT
J+F6fSldjf7T/3Mr97fC1egN72x58uyacDX6qZ5uNckZwtXojWMdXcasltDV
6GufXnrhO0VCV6Nb1mlzW+kjoau5H47MqxXZT0JXoxsvslya1VRCV6Pvrz1G
1vCTcDW6W0Fw+MIi4Wp0d2/Vw//7/8nD1egf2kZtPp4iXI1e66RhRtQcX7oa
XZbfqYm/zpeuRg94+++K2sGXruZzVt8pmdrJl65G75V10WGnvi9dzbk67+O3
x5d96Gr0+eHDuh+N86Gr0VN/nWlwWuJDV9M51ofSfrbyoavR727R/gkv96ar
0XfY1Grccac3Xc37IvL1I/1x3nQ1ut70kVPb9/Gmq7k/z/rkTv7sRVejeyTZ
P/hyyouu5nl5YH8ya7EXXc333mFB8H5XL7oafdSensX3GnvR1ejBUeNbDS7x
pKs5tyMCuhdt86Sr0autetbfM8aTrub+HPDmQkYfT7qaHis/4fX2qwddjX57
xsGjQec96Gr0yoHlHxqu8KCr0YNGK41rfD3o6kOjzPbvtAx2OvLP/kN/lwC6
Gj3qwoPijR0D6Gr0sqgrkvZfhavRi1akjj15Q7gafe6bL22n7fGnq9F/zpNP
HDHfn65GtzQeFtBP4U9Xow+MGfTFrrc/XY1u/SfLSlvbn65G1702bZvyULga
3bt3zf732X50NXrg0Plvgtb40dXoZxwtHrwb40dX83s7ukYlOfrR1egvD/S+
q2rjR1ejG582fWrzQbga/Yfd1HTLq8LV6A+G+/Ry3KWjq9FjXf9MnBSlo6vR
G5ocnJSl0NHV6AH1Vvdt3VdHV6Pv+Jqfs76ujq5GbzFtXq3ez4Sr0etfudbu
yWnhavSvXW7/OpikpavR56/bsi95qpauRrfq6dRtk5uWrkbv1jJ/xglTLV2N
nr673/oPf4Sr0bePjY4dWSpcjX7D/qQi66hwNfrQsIKfDqs1dDX6zuS9c5+N
1dDV6F2NHUt2DNfQ1TwvW6KaRXXQ0NXoQbnOfaZ9F65Gf5wVabn4rnA1eoeZ
XxplHBKuRu/9KLHkQ6yaruZ5ybJYIQ1T09XoT47HdL3ppKar0ZccjEgPba+m
q9H/m3HRpNV34Wp010b9Fjy7K1yNPjFr8Z2Cw8LV6JMfz2h9fZWKrkavrb4g
eT1WRVej7x7RYUkXZxVdjX6uv8P+iM4quhp9usWta89+C1ejh2UueDXxvnA1
+rvnn/Sb5AhXc27Mu9v2VoKSrkaX3TzXf99UJV2NfrBa5rHNU0lXo6cd6j3u
UA8lXY1+a3dF7H0jJV2Nfs2p/tFOlcLV6L53rJ4tuihcjX567VuTP9sUdDXn
2P7zQeujFHQ1eqW33dFRWgVdjS7JKmnaYqCCrkYvNDNd/Lulgq5Gj6+zUV/v
s3A1er032es7FgpXo6+J/TREfUS4Gl1TfuV7xho5XY2+rd3+6+0ny+lq3i+X
655M85DT1XzvJ2XnvXrK6Wp0O9NvTxrVk9PV6F82+3V6+1K4Gn1j97fznv0n
XI3+bWid75/3CFejZ5Y0S+q6VEZXo/eYNFk+MVRGV3P+G0bY3Roho6vRl9st
dvQ2ldHV/F2O7ya/MpDR1ehvPxnnbX0mXI3+t8R2xJRc4Wr0K51OVml2Clej
hx6vuBi0REpX8/PdDPOWhEjpavRmriGfzw+X0tXope9d5W1MpXQ157P3n8pV
hlK6Gv2f96W0dpXC1ejtTpVvzcsTruY5dYi9ErtHuJpzKcKox4RlEroavc7b
tRfCxkroap4vs8D4KFcJXc37dNeBjYd6SOhq9Ffv9j/8VV9CV3Ouxsf7h1YJ
V3M+9FzT7tUN4Wr0PhPvtlx+WLia57TjGt9h64Sr0df2fnOt1Qxfuhp9xd6m
sXUUvnQ1+ugLlrHN7Xzpau6fJ8E3Brf1pavR3ww9cPDnVx+6mu99i8Ir57QP
XY3+62utqPRFPnQ1XfTu25A7I33oanS9g+PX9mvgQ1ejP/2xLvK/2950Nfok
uz0/EpK96Wr0lGlFLZL9vOlqumWM1/VbXb3pavSCuMFdnV570dVct86X2rw8
7EVX0zPdGxzNm+VFV9NdUdY1pQ5edDX3VZGm2LS2F12N/qxgw+g91z3pavSe
lXW2+q/3pKvRN289He3p50lX29/ce/p4v//9u3VWdEpR7UC6Gn2wS+nXG+XC
1ejmjoeLnh4LoKvRXx9Ps26yKoCuRh+boWmlCQmgq9EHlCkWnhkUQFej731l
Pm1w0wC6Gj1+oef7wlfC1ehh00b+WHpBuBp9T/HS9bIN/nQ1uo9FVO6QcH+6
Gn3H2PilQ1396Wr0gP5mT3Sd/elq9K+PEooSvwtXo0/a0T/sxW3hanTfLT7r
Zfv86Gqup55taNliP7oafZCZRcl8rR9djX5+++jqwdZ+dDX6xpDOh5s19KOr
0UfdiG9T+7lwNbr3lae9m50TrkafVzb4w6AUHV2NXsf5XGhUuI6uRj9ZP3bl
fTcdXY2uanssVGKqo6vRl/v4fKn4LVyNHpEycei6e8LV6I9/NBmuOaKlq9E3
Z44wsF+ppavRfw41XDwoVEtXo4+f635BMlRLV6PrpTXOjWmjpavRp8U4ryj8
KFyNviLoXoshN4Sr0bMtDo0/l6ahq9F3zT2ywm+Jhq7m92afndHSX0NX8z3W
OWr52k5DV6N3jg7LLmmmoavR31tkNH76Trga3fCnwqF2gXA1elejvk7Ou9V0
Nc/p3H9tty1U09XoEw+vut5Mp6ar0ZPt1mt22qrpavTcquJcz2Zquho97U+9
+s3eC1ejO/963u9jgXA1+s7nJoPe7VHR1egXBmrNDJeo6Gr0v989PlsHqOhq
nqPzG/YvHKyiq9Hr5Ve6vmiloqt5Xmpu3x77SbgavejRzxG1bgtXo5d++L3r
dIZwNfod9ZSPq2OVdDXnW/uKfvPGKOlq9OE9q4KiRyjpavRW/q1j9nZW0tXo
ibHVmyv/CFdznyz/vc+hTLgavdvgS4czTwhXo1dtzT/klKygq7k/by5JfzND
QVej32s8e9thiYKuRn9WZpKwtq+Crub6vHgZs9JYQVejp/T0iUx9K1zN++h9
7uQ7BcLV6FvvZI7pkC5cjR5+e3lozDI5XY1e6XNonFGYnK5GtzSLi9g1Qk5X
o//asDRW11VOV6NnzPmd3kdfTlejP2rjW9T+iXA1egP1w4bdzgtX8/0e/itz
3yZcja62aXggdr6MrkaX7dQ1r/ST0dXoMUFOazT2MroafWFsgw5vTGR0NXqP
jw0uJv0Srua92W/NPL8y4Wr04h3lXkNPC1dz7k13HDRks3A1utWu30Nl86R0
NXp5Y3XQMp2Urkb/MTNxW9EQKV3NuTf3/U+H9lK6Gn3dkb2zcn8LV6Nrt31r
FvJQuBq9cV67O+3PCVej99nhcvTjNuFqdPtTx45XLJTQ1egrtyU8qw6S0NXo
a961tGk9XEJX8970m3xQYyqhqzknT//nc7yWhK5G1/3yat/vhXA1+rf+vVvk
XRauRm+SGjdwxj7havSOOQkrHVb50tXoQ9uGNjCd7EtXo9dKNz1j6uNLV3Od
F37c6tjfl65G//yvOnNWc1+6Gn3yzhkf1731oavRY2+VvJ50xIeuRn/YdJjn
gpk+dDV6p+1PTP4b7ENXo58NqtQ66/nQ1byXf89q8CPfm65GN314vm/lKm+6
mvttcEVBbak3XY3e3syg3L+NN13NORMzeFzVIy+6Gn1Ln7TwzD1edDXf47PA
bxmTvOjqq4oeN67b/O/fRw46kyv/CVej12zL8pNtDaSr0SMkVwx/zAikq9Ht
TgxuftI9kK5GH345fXVil0C6Gv2lefrMFd+Fq9EtJZdvpNwSrkYvPrN6w8W9
AXQ1+u1P80prLwigq9HfHm8QH6oIoKvRUzofufjQMoCu5t+fKJ46rVYAXY1u
s/XZlk7lwtXoqhRbj1fH/OlqdOMhveZfW+VPV6M31m8xoGC0P12Nfjh46Myn
Q/zpavQW1R8cW7Twp6vRx0wJTwmuEq5G/1rzZX5BnnA1umvViS8eW/3oavQi
yRu91zP96Gp05d7sHanefnQ1unObYQ+md/ejq9H7Jh/MCNTzo6vRXSpbmYy9
L1zN/ZOZ2D32qI6uRvfMGFCUv0pHV3M/pNQz7RCmo6vRP+lat1o7VEdXo+/v
FHLYpI2OrkbvpXhVk/tBuBpd7/au8phrwtXoIfdiI4L3aOlq9F9Wq06pF2rp
avSoUeuPTNBo6Wr0KW1Wq1OstXQ1evdxmqxHxlq6Gv3zmdJ8p1fC1ejtZ71Y
czZXuBr9wgNNU8VWDV3N/WBh5FMnUkNXo7fcc8qtSKqhq9Hl6cMNz/TW0NXo
Qw+HzT9XV0NXo78b+/JkWYVwNfq/88tPNT8vXI3+84PB4jGb1HQ1enVC08ZF
M9V0NffP9nFj/CRquhq9avnJFf8s1XQ1+u6hR2efraumq7n+w//YJFcKV6P/
d2BYbuwF4Wp0zUDTLhu2qOhq9IfK4bKLkSq6Gj3Qyl5bW6Giq9EXnt1vF9pf
RVejJ541e/fQWEVX83OKHaKmvxGuRk9fu+xFl8vC1ehXxsf1rtqlpKvRLz28
L72zSElXo4+d9FV1x19JV6P3TBsztGqwkq7mXB2UUadrGyVdjf7n08js6V+E
q7n/Cw+7PioUrkafX3f0pdAjwtXoaXXvdTNao6Cr0U+vjorInaigq9FTd10+
uNFNQVej7zhsXrSqu4KuRjeYY/B6Q20FXY3u1f/yuwsVwtXoDlEPKgxzhavR
v8xOvR6cKlyNnps3d9+DBXK6Gv1k3JV5U/zldDX6glUvnDvYy+lq7oeWfY1e
tpPT1dyfnX5euPZDuBo9eNTWWddKhavRrYomWrw4LlyNfqggp8QkRUZXoydX
XF86aZaMrkb/sOOndalCRlejb/JeWREwQEZXc38a5iXptZTR1eimR995nP0s
XI3e1cKjTlKRcDV6ndYdC5ZnCVej32y7NyFpvZSu5nk81TnsXISUrkZvO7dg
mIFCSldzThbe7xE8QEpXoxsOi+1Y1lJKV6O/cTHuEv5VuBr96KyNVp1LhKvR
Z08JlL89LlyNvuzlmuV3NghXo+/MUdwonCOhq9GnFz7uVq2V0NXokWpVUjd7
CV3NezOhsu2cDhK6Gn3Nz4PZL/4KV/PeH1Y6fuoT4WqeL9kyu+a5wtXoP7T3
OxXuEq7mvLpcY5qx1Jeu5j0ieeO8Y6wvXY1e+vdpdKabL12Nbmbx8Wl5L1+6
Gr1hlHWQaSNfuprfW3fuv3pPfehq+kTmGm2414euRj8z7YeX9UQfuhp91vXM
4I39fOhq9Du7Ei4M+OpNV6PXb3NqUt0z3nQ1enj/EeOaLvGmq1UPDzx6OjDY
6XiPkKFGI4PoavRjFccNW/YLoqvRr96Pre5nEkRXo+flWRpqjYLoavS7gysW
dq4Qrka/r/PwTjsZSFejrxplHuEaH0hXo5cO+fPJcGwgXY3uHKO+fd8hkK5G
/7M2u8HVFoF0NfqnlnHpRW+Fq9EbWnnt+5ErXI1eL3p0k0GbAuhq9G4u1k8S
pgXQ1eg7ItuZ1HELoKvRW74Ov5TUOYCuRh/jt6Js6HfhanT7XRlhBreFq9GV
WaahT9L86Wr0X/m975cu9Ker0V3G1L78VuVPV6M3Snzct20/f7oafd6dty2D
6/rT1eh7neXzLj0RrkYflOcQ4nRSuBq9y8fL10vW+dHV6Pd8jM/GTvCjq9Fj
ZaYDlCP86Gr0sVHt7Bza+9HV6DFj/uYN/SJcjZ7zqPiJ9qZwNXrgl51x69J0
dDX64qajrz5bpKOr0R8ZNN7irdXR1ehvm282LLbW0dXoiSbfDGYZ6+hq9E5r
Gm3p/1K4Gn38miu361wUrkZv9bfOru+btHQ1+vXVB1rUmqmlq9Ftb6zu3tNH
S1ejOwxe+nBCDy1djT7TN3Tgf4ZauprnIuXHIPtHwtXo5441rrx+QrgaXRY+
eWBkooauRk++Uzxw6BQNXY0+u3Pdlx3dNHQ1esr3887tzDR0NbqXIlvW759w
NfqtbVtaBj8Qrka/lNMtLiNbuBr9VC39k83Wqelq9FlLircmTlLT1ei3L7vb
93VV09Xo6a1qJT83VdPV6B5jdmTk/BOu5vdOOb94Z5lwNbpB1rdW+44LV/P8
xj+ZfDVRRVejfxlmvMIoXEVXo0+tNh7r76miq9F7npja8JaFiq7m7z19Zo6u
toquRrc2jTpi8Ey4muelt9XRvHPC1egfBgQt2rFZSVej178Q035jpJKuRg9f
aLLigEJJV6MnBG/NK7VS0tXo6uRFdzs3UdLV6L02DsyJfidcjR48yHaK/jXh
at4XO1/+3pguXI3uNubEaK9lCroaPWBx090moQq6Gv31GM35WsMVdDXvO6PP
OXU7K+hq/t7i4XHd/wpXozco2u0UXC5cjb4wZVZx9inhap5f32ae5hvldDXv
uzu39hyeLaer0cel1KqUK+V0Nd/jbcO6LQfI6Wr0+OCOzWuay+lq9GbVO41e
fBSuRh/27GHF1zvC1eju4W0zumYKV3POp24NGh8vo6vRR8mPGFybKqOr0X+4
JSW6+Mjoap67bmtaPO4jo6vRh8x9sGxdIxldjW743/G3Ae+Fq3lfLAl2drkp
XI1uY940wf2QcDW6rtvf4nFrpHQ1P8cooOnOKVK6Gt1KHjryq7eUrub7yhw+
I6yvlK7m85dabKluLKWrOW93OF9cXyNcjb6mXm6F/I5wNfpj62u1+h0VrkaX
Tl9h3i1RQlej33Ht7GIXIaGr+b3Tj08YrZDQ1egRL8PX7beV0NXoPo8nn2nY
RkJX0xulN6pifwhXo0/adMi0a5lwNfohe8uQ4jPC1eiePYL37domXM1z1HXM
z7hFvnQ1+ktnqXJdiC9dzf3cZMi5I86+dDX6tDE21m+7+dLV6LsTfXOc6vnS
1ehOqU7rQkp86Gr0jJVh9+Zs8aGrn4f2qflq/79/h/o9fng7Tbgafe6TmF/p
CcLV6G+OulqvmS9cjd621ZJli8YJV6Ofio75ulAWRFejZ57bHhM3NIiuRk+o
7GS1t0cQXY0+b4GX3o0WQXQ1ety6yTV6ekF0NbpNQHSdmHvC1ehn6zaZ3flg
IF2NHnz3a/+S6EC6Gn1oxd7B6dpAuho9//2KxMT+gXQ1erT239CNdQPpavRL
8jGOJx8LV3MdapqnfMoJoKvRWw1Tu7quCaCr0d9Pm684HhZAV6PXe3b5gpND
AF2NvnXIrLjKFgF0Nbpf3MVTO6uEq9E9/R96zcsTrkZfVfDNZcoWf7oafUjS
oAPzIvzpanTXEf/N2eXpT1ejN+11Jvu5mT9djR6/2iZ4+B/havSv+0YsOFks
XI2eded7I49DfnQ1+tKogJbflvnR1eiTdHMTzwb60dXoFRO9Vm0b6EdXow+v
X/R3Y1M/uhr9tKFRzeE3wtXo2vR7QU8uCVejdyi3kfXaqqOr0XtZNCiIn6Wj
q9FDrznmNfHV0dXoKVezRh3ooaOr0bP1XKVBhjq6Gn1Qn7uv+j4UrkY/XNey
YbvjwtXou9zMznVcp6Wr0aVnY/WGTtTS1ejdJN2KZ4/U0tXcn10uOFzvpKWr
0ZfEtrUf8lO4Gn2f5Yc7eUXC1egt6hrojz+soavRL883vNZ9pYau5vkK3tdf
P0xDV6MvNNpt+8VRQ1ejz3JLLTM00dDV6MbbXbr2/ipcjb6xo1PDaXeEq9G/
rbbcfCtDTVejP5qUcdt1hZquRvfW8ztUPlpNV6PP8C8asMpRTVejB0UcGCc3
UdPV6I/bRbgO/CZcjb6/1bl7tneFq7lPurdq6XtYuBo9pJlR7ZhVKroavf6+
FumFY1V0NXrde/n/hjir6Gr0t7s3GV/orKKr0Rt5Nr0b8Ee4Gv3EgD2SNg+E
q9Gr6t5aWZUjXI2++WitRWWJSroavfWUk1bPw5V0NXruDf/d9byVdDV65KXA
e669lHQ1ek56z6s76yrpas6HUd0Xt34hXM174fHp33svCVejJ1l5DpXsUNDV
/PvYQS6tFiroavSoU8/afPVT0NXojW12Z9UMVtDVnMP6pSZGbRV0Nfqcu8U+
tt+Eq/k8Rp8ki4uFq9EP7l9i+vKYcDX66tji/LEJcroa/UHvwYMNp8npavRp
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
+kQG0NXo0Q8f7fnPJ4CuRg8r6B4xp3sAXY3+XHZo+ah/wtXch5ELn/UuEa5G
L52wa1nfw/50NbrLvg6zPJb709Xo8xq/O7o40J+uRo991cCx0M6frkafqxfe
3qGJP12NfjG7vlfuK+Fq9Bb1CwqDLwpXc38eTTxsssmPrkaX9fR5Xj3dj65G
Lz9bNvORhx9djd5re8vRL8386Gr0Gx+LDtX/K1yN7vD4nda1RLga/fDmfuNT
j+joavTxC8aXNVupo6vRH9YPPrZ9tI6u5v75V/ZxlIOOrkafMHrz5rqtdXQ1
+upEv8OVNcLV6E987vctuypcjV73yuWOVbu1dDW6XvqD+a0Xaulq9ACzi97+
Gi1djR5h1D3xrLWWrkbveSLLc2AjLV2NHunTeP6NV8LV6CabSs3nXxKuRo+3
OOzqsk1DV6N31PR52WuOhq5GPx/y3qCXXENXoycExmx17quhq9H9VUtORNbX
0NXo/7nNVlx+LlyN7jmwema/i8LVnGP9ZphkbVHT1ehD5LEu0kg1XY3+7nnW
r/pyNV3N8+Uza9Cjvmq6Gj2xl4fB9QZquhr9tO8hVdFL4Wr0tyWth3y7JFyN
HtTtz0GbVBVdzf3w9XZmXJSKrkbf72/o+k+toqvRF9/Xnx43QEVX836R2fW3
aaaiq9H39Wi4/Ot74Wp0p0EvIu5eE67m51RY/L6aLlzN+dZyQMeHS5V0Nc+p
ZHx5vdFKuho9O7vLQImTkq5Gt9A/YXWsg5KuRr+7NfpG31/C1XyevffrXS4V
rua5rmr4OjJHuBq9TG/KpJHrFXQ19/kgjyTL6Qq6Gt09pya0j6+CrkZfODG9
3L2Pgq5GDzQ79WdxQwVdjV5/1cSCu2+Eq9Hn9NEb5lQgXE1XrDgZdjlNuJrr
YFgycPwyOV2NvkU/+bR5mJyu5j3yuH/17xFyuho9/E9F0fuucrqa91FuxeRf
+nK6Gj1595jTXZ8KV6P/7JF6LvSCcDXvx48XIy9uF65GTz31683AhTK6mvd+
8LxW1wJkdDX31ftJv2cPldHV6NWJP7c6dpTR1ehdj3v+7vJXuJrz4VNsm06P
hKv5/B1LPtmeE65G3+GrWjt+m3A178eKXlU5C6R0NbphVESDToFSuhp9ekOf
9zscpXQ1euj9kiTHzlK6mud9QQ/D73pSuhr9WI2f3bWnwtX8++Wx1idzhat5
b/7M+35xl3A1PTnBdMXzGAldveZXtpmtW7DTqor6CtMS4Wp0K7cVmeqLwtXo
H3u3N9x8QLgaXTPf3ONNknA1eoth/1aOWiRcjd7gmF7e4QnC1eh+PvO/mSuC
6Wr07Od53fY5BtPV6A77TWWDegbT1ej/+wft/Hstgulq9BGvRqYv+idcjX5c
Fn/X7o1wNfqcmn96v4uEq9H337/V/8Z54Wr+fZXd2AP7havRdfcm7UxOEq5G
/9Y1tXLNIuFq9Gduen3XTxSuRr9z+sSSvcoguho9p/rDk/xhQXQ1evDUO+4f
LYPoavSqijkXe7UJoqvR33VpMGq6YRBdjT5pgvOxVQ+Fq9Gb3z/60zMrkK5G
zy+ID7VYFUhX8/da1P3UISSQrkZfccAhvfegQLoaPa/Cd5mqSSBdjd5N6bd2
80vhavRTq2fm/zgXQFej3+t7sOf05AC6Gn1f48YXa00JoKvRLYftXJk5MoCu
Rs/oNT42skMAXY1usyX4vOaLcDV6h5KYPoobwtXohfsul07Y409X8z3Oa3dh
03x/uhr9acD4F5UKf7qav7fzFi+3Pv50Nfp1TfK3y0b+dDX6sfl2L4IeC1ej
r36jNWlxwo+uRn/4rWTD03g/uho9vfaSoILxfnQ113mlRcS14X50NfePaUrx
SxM/uhp9w7akZR2/CFfznDZ8tWLqTeFq9NSr3o8epOnoanTXxGUrghbr6Gr0
RitcY/V0Orqa6+/o/uyUjY6u5noWOiStbaSjq9HTXtzZteCVcDX6l1OZjVfk
Clej29osfXBgi5auRi97WVP7zSwtXc250T05cbhES1dz7jVovjS7l5auRp++
0KB8uJGWrua6uf/e+OaJcDV6LZOkCxmnhav59wkBkthkDV2N3t3zpdeiaRq6
muv/5tTxdZ4auppzo2NI/NnuGrqa7/1YyH1DQw1djV693nF96CPhavQXZZG5
j08KV6MfKV4VNjNJTVej+xh/WmA+TU1XowfKuzWp8VTT1Tzv1za1K7ZQ09Xo
S9/mbi+qpaar0cfHNdrx/olwNZ///ZtOpmeFq9EfXcrtMH2jiq5G97L5u7ls
poquRu/92mBLoFRFV6NbNLfp9LePiq5Grzf9Y7fjDVR0NbqZ35asla+Eq9Ev
5a8uiMwXrkbv7Np57OKdSroafaPFgTW7FyrpavQdgdHDnvkp6Wr0gO2/Fg0e
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
ar7HKwuvzbULoqvRL3l32XO6axBdjf5+dt8F9RoF0dXoD3aNPXzlo3A1+hb9
iWEbCoSr0bfGT++8JDWQrkZf2zP62dLZgXQ1+mDjrQd3eQfS1ejTq05Hl5kH
0tXocw1LxvT+I1yNXmn+VL2xSLgaPen2FV2njAC6Gj1vUOS089EBdDX6qODi
zXN0AXQ1+sjOueVe1gF0NbpqYHtb+wYBdDV6VcjZfc4VwtXoXwLnDRp72p+u
5nmsZfFyV6I/XY3+3WVd1s+J/nQ1ur188a6Jzv50NXqzdeeyv7b3p6vRs482
eLf5i3A159V/3T10N4Wr0ac43bxjk+ZHV6MXGB1fYrHIj65Gj16YHGir8aOr
+V42d5gQYOVHV/M9Vv7YldrAj65GN15a3OhPpXA111OlyphxTriac/hD1wW1
NujoanT3/aVLD0/T0dXoehkt8yM8dHQ1evWPGQ5ycx1djX4qamWN1z/hanTH
hu8eB98XrkavmGNpHH9MS1ejKzbdm1O6WktXo8/2mdV9yDgtXY3+Y11i6xPD
tXQ1+uK5xzx8Omjpas4lD3W+3nfhavRPkfrLrhcKV6MnHOu19uhBDV2Nvqza
99nRFRq6Gv3N5FeLbozW0NXoLvljJhk4auhq3juvHfZK2mnoavR5Ax72Pf1F
uBp9dHhmfcc7wtW8H0vNBj7MUNPV6LkW208mrVDT1ejbdi6NHxeqpqvRVzUf
ck7hpKar+XsfdnL2b6+mq9Gb/11nuvC7cDX6rJbv/E8XCVejF01e+blppnA1
+gv9i6+WrFbR1egmMc+HNJqgoqvRTcPcq4+NUtHV6MsfONaKMFXR1ejq582j
vPVUdDW6Vt1MPeKhcDXvnUcxG6WnhKvRLfSPDYtKUdLVnFe9n0kuRCjpanrg
rOJaR6mSrkb3+uZ9OKWvkq5GtzQx/tfTWElX83eNvnG69I1wNe/9htdepF4R
rkY31zoujt4rXI3eaktw3KIYBV2NfsFmbL0NIQq6Gv3M1ugfBU4KuhrdevIr
/1adFHQ1faXLt5v/R7iac2+U64q/ZcLV9Magrb6bTglXo+eHv1/nu1FOV6MH
+YV6dYmU09X0Xrp5TEOVnK7mPnRU2TWzldPV6AG+7cdZtZTT1Vx/aXLryZ+F
q/k8dZ+Pyr0rXE0/xHb71v+YcDXnp9PsHmcSZHQ1z8uHD4+Cpsvoat77Fw63
6SyV0dW2CQ6amYpgpzQf58ynTUbT1eie/rM6zPopXI1u26RQ07pSuBpd1vTc
2PwbwtXon4y3ui46LlyNPu7qjT8uO4Sr0aNsDqxov0q4Gt13ZtybPxHC1egZ
BvlmVQEhdDV63yO7B750DaGr0a+fn9292iqErkZ//mHZR8MOIXQ1umtS683m
dULoavTQ5Ild5R+Eq9HnrLkYu7ZMuBp9cKG8sCRfuBq99SL/P5ZHhKvRNWua
NFy7Sbga/VDp9n9/YoSr0ff0Hnx/zlThanZdg00G2mC6Gv2og/2IDc7BdDX6
u8sfiwf3Daar0Q82l8retA2mq9FjJs49s7dWMF3NdVbGNguvFq5Gr7dno3LU
A+Fq9I5zLsX2yBeuRu8gb3+w7RHh6v9X1H1H9fz3fxw3QiGzKCpFZoQGspNo
UEbzs2dFIUlGO7Rk7xWFkp3KTEUke4+ioiQqMjIzft/rnN/j+fzrOud+PufT
+/N+vV7P180517ku9A+9zlzqtotdjX7D5kCxcSy7Gt0t7NPlkQvZ1egZjocz
hSIZuZr+7panW5KmysjV6GfqIwNvWMjI1fR+YtIn6RrJyNXoyhEztOdpycjV
6F3HfEnd/45djZ6lP8k4rkBKrkbvY7ti88ptUnI1unHioea750vJ1bSfw/fO
uW0vJVejz/GZeUfPUEquRveS7B8e0ciuRneShWz5c5Ndje7qkd60db+EXI2e
O6Cjj1OohFyNnnwr5kn32RJyNf3dWQ9d/g2SkKvRg77cvtespYRcjZ5oPFZi
8JxdjX53bdWPmVlicjV6X/vY1JTVYnI1zauMSlE7lZhcjb4xKWvgurFicjX6
5FEn2w7RFZOr0XsuT2pe/Z5dTfvn5I+OZ4rY1egbHqWM3L9XRK5GX58wfHnG
UhG5mvatqUvJ9ZkicjW9h7M7PTTMRORq9P59znzx0hCRq9EddSeeulbGrka/
Y3R304wzQnI1PefZXzu+rBeSq9GfuXgUnZwrJFfT73UO6hE/WUiupm70Ytsy
IyG5Gn2Bo9HEVT/Y1ejP/Qp0jjxgV6NrjJ3ave6ogFxN63LCytE+TkCuRq96
3eboObmAXI1eMW6crcNYAbkafY3Cpe2nbgJyNbqH8ynN7E/sanRtx7JxG26x
q9FbaNseiU/3Jlejx2ZOm7UzxptcjZ5wKcCqSOxNrkY/ObHd7PY23uRq9M5Z
604E6HiTq9G3m0qdaxrY1eiXhr3oH3aTXU3rruU7xSzdi1yN3jJKfKgxxotc
jf5as6frM4kXuRr9z9UfY56M9iJXo7dKmh74oZsXuZrux3fz3ht/YVfTPTvk
aPa8u+xq9C3zvK49OsKuRi9fU9DPI96TXI2+237Yo08qT3I1+qJ+n+6l23qS
q9GHpzoZLTXyJFejm3WOuahoYlej154pPeH7jF2NPun2lm+xOexq9NZRnzcW
bPQgV9P9+3tIrE6gB7ma5vyiFfdjpnuQq9H/9hwc0s7Mg1yNbjdeuvi4pge5
Gn2r1ax7/m/Y1ejLg0bF211hV6PnJNglW6e6k6vRBw/d33VSlDu5Gt1m4qp3
fhJ3cjV64DVdk8Nj3cnVNE+aR15o1dOdXE2fV7w7F/qTXY2evSPUsP0zdjW5
a5ug5vRpdjXt8/UZemFb3MjVtH80Ek8Jg93I1ehf83uedp/tRq5GD68MM51r
4UauRj9bef3v9s5u5Gr0+RsNp1R+ZFdf0S+Ym+gtnxigN97rWii7Gv26lWts
P7WSXI1e2sx26UYXJbkafUFe2NB2o5TkanT9I77H1psoydXoDV2UX3q3U5Kr
0ccrb7W43MiuRg8Z++fFvHJ2NXrBCucV/YrZ1eijg7W+12Wyq9GPnlhlk7eL
XY1e5NJu2p5V7Gr0UZ9eDU1YwK5G73Z7+ptobwW5Gt0ob11gnJ2CXI0e61Z9
d8cQBbkaXV0V3+pcdwW5Gr1mbWaX6uYKcjV6c8GmH4b17Gp0bSvpWeUTdjX6
w1Z2s08XsKvRg/Pm3NA9wq5GbyNrMorZwq5GL25nOKspkl1N69Xhkyp6Lrsa
vbx2q5fOf/sOrkZP8DUzz54gJ1ejP9pW/EY2SE6uRm/2dtWKHrpycjV6ev+l
rV79Y1ejCzdnzsuuZVej36myvbj5Mbua3qfLiK/RBexqep/bdnQLO8KuRr+o
F9x7xVZ2NbrerZv626LZ1ejLZx34cyaAXY1+6+/fO9WeMnI1+pjy0rXGdjJy
NXpdgdV4P3MZuRo9aVKb8lx9Gbkafd0DpwVGrWTkavTLS+uq9V+xq9HLJD8e
djorJVejn1iz77DJOim5mvZz7yv+03yk5Gr0tGET9DeMk5Kr0d/ffZfdoCMl
V6OvNNs+0a+eXY1+Y12PvF+F7Gr00KXjhqbvkpCr0QcmX98yb5GEXI2+peXK
L9OdJeRqmj8tzJ0c+kjI1ejRglW7RE3savREm8nvEh+yq2l9p5lYPzwiJlej
t71+N8p6pZhcje61/N/tTJGYXE3n8ZbIyMFaTK5Gf/l0/aIf2mJyNfq3ANu7
l9+wq9FvGnW2TM9nV6Nbuuzdd3C7iFyNPscqXj9voYhcjS57r9r70UlErkZ3
j7lpOc5URK5G3/nF5dn+P+xqOneTIteaPmVX0zqGvfPMPykkV6OvvdR9RHCi
kFyN3mLmhkF2KiG5Gr12femIweOF5Gr01O6LRUP1hORq9MLsit3TPrOr6R5Z
tvXnilvsaroHL3cJfpwmIFfTvTbhprZttIBcjT71p2VxkVBArkbPkOYd8Bkh
IFej951WcsC4s4BcjT67/afrjXXsanSbOQt0q4rY1ej3j1+Ir0vxJlejl2SN
7tsh3Jtcjf7rpUu9k5c3uRp93CivihRLb3I1urUo+1+Xjt7kavR3W/NckmvZ
1TRXX929bVfErkZf+HZ8RMtUL3I1+ojuMnlZuBe5Gr3zzlVL73t7kavRK33+
Xamw9iJX0/fY9XTQ7OJFrqZ5eMO0pfMHdjX6smD19/Qb7Gpyzk7Tfr3SPcnV
6Hcj09efXOFJrkbPmj18lEjmSa5G/zS6pVHvcZ7kavTDs0V2LXp4kqvR4y8s
y/j9jV2Nbr5l68zOj9jVNCe168dOzGRXoy9VZAYkrPUgV9N8q+5ZWe/vQa5G
f9pSmjzX0YNcTfPH8Whqi/4e5Gr0z36WH7M1PMjV6F3G9o6PrmRXo/+7dcDf
r4BdTZ/3rt41J9mdXI3e3aN9j1Vh7uRqckXIxJrzAndyNZ3Hk2ka7WzcydXo
+WMVixZ3dydXk4tSN1v9+squJlecETvueMSuRp9y4PmpWVnsapo/7wYF9dvo
Rq6elTIpbK/4v/0T32z+4xp2NfrB4G0b/t1jV6Or9a8HjDjPrkbv5Na8+fL9
7Gr01MZ01xtJ7Gp00/vGgv4h7Gr0qGc3TTZIleRq9E2mrQ61cVSSq9Eb2vX9
kGihJFejT7WM+trDQEmuRrdO9s0/00pJrkY/kz9guryBXY0+I1F7X/cSdjX6
oUjRudLL7Gr0mnyvnYePsqvR0/QmTY7byq5GD+3qfjYwil2NPlPj5nefuexq
9GHdS1vOdVOQq9GbS3LKlo1XkKvRz5YlxW4doCBXozvvWvMvv4uCXI2+8tAr
x2+/2dXoVsNO+tjUsKvp8zGGngn32dXoGcbOBm8usKvRVxR7nnFNY1ejt4iS
Dixaz65G770vdJFjKLsa/UrF5a0lajm5Gl0lcdwcMkNOrkafdtx4nvEYObka
/XW5Z++nfeXkavSk2KbsnZ3k5Gr6nlu6/fyb2NXoixceD3F4w65Gf1x6I93i
Prsa/Z3+/PMDc9nV6A++bj8xJJ1djf7xi2P8+I3satqHsnB7UTi7Gv2A55C3
sX7savRut2YuzJstI1fTHFj/8lWLCTJyNa277PZot0EycjWdlyqt8FO6MnI1
+vULqzIMm8vI1ehtO4hjzErY1ejuDysSrE9KydXo/Qf6+nvHScnV6MXbLw/Y
JpGSq2nOvLxY+MFaSq5GL2xuMl6mLSVXoxtOP7mj7jW7mtYxcPCz9bkScjW6
zYpZTa6bJeRq9JddXmgMDJCQq9H7DY381nOyhFyNPj7kw/0BBhJyNXqIccl2
10Z2NfrNdnXT1t9iV6MvuHarofaAmFyNfi+5zwppuJhcjb7uwAbND+5icjV6
wMWc6K3mYnI1+prDZh+92ojJ1fQedJLcrV+yq2kfbgrIMjsnIlej+12Uthu7
UUSuRm9m9lXi4y8iV9P7X3nuxOHJInI1ep/EEf80jUTkavQ8wy8u0d/Z1egn
nRft63qfXU37323U1/zDQnI1vYesApfYlUJyNfoys/jjPhIhuRq97GabbvJR
QnI1zedfObGLuwjJ1ejHl7ducaCeXY2utXRuQn0Ruxo9fvUMI9cUAbka/dsV
08s3QwXkavSep2aEKDwE5Gr0wz5jxnYdLiBXo0escNQtbycgV6O3Hl/WovAN
u5rW19ej9eVL7Gp6zuAuJs93e5Or0RtjAtw6LPUmV6N/kV9MEc72JlejD9ou
bFto7k2uRj82d9e6yW29ydXok6vuWLysZlejD31q/3XLJXY1uuz99GfqPV7k
arqnDliUuS7zIlej6wnGtXJz9yJX03l3yZkZNNyLXI2uPF5ReFjbi1yNPnDz
P9Gfd+xq9ODOHkZzi9jV6KMse2t9SvUkV9M92ybFaGOkJ7ka3Xy/tmy6yJNc
jW7bP+VObxtPcjX68KKN/l26eZKr0cOudx9l8IVdjR6+VWk98R67Gv1VVroq
4hi7mu7NO12vPUn0IFejJ+Q9Fjv6eZCr0bsn6Q96Yu9BrkaPDtYaEt7Hg1yN
fuTDbd/xzT3I1eg6J9c8169gV9P7z5yX0PEiu5rmicWGoF673MnV6N75+tsd
l7mTq+l+se7ftMbTnVyNXl70dHe9tTu5umLA1TXZ8v/cvm/153buKnI1eq6B
64Tm41XkavSL3nNHtuyvIlejGzxwftG5k4pcjb6oVjx0yE92Nfp7jTYW7pXs
anTTzRnVCTfZ1ehxQw4438xmV6P32TVTrZ/MrkYf917TKjiOXY0+a7XhueeB
7Gr05MkVX10FSnI1+jLZzrp7dkpyNXrL49t2SYYoydXoeZsM2vzspiRXo8cY
+Q/d10xJrka363RZ162WXY0e8UF0QecRuxrduFOwSeVFdjX6nCNjHXPT2dXo
Y6reWu7fwK6m9/wovXJrKLsa3SXloMc2tYJcjf4iqt2GA64KcjW95+J/G/Ns
FORq9O4/Doqr+yjI1eh114w+63VQkKvRNw6Pn+n9g12NPi/sT1haJbsa3dJh
2+Jmt9nV6Pe3+Y/1PcOuRj/3fM2D0hR2NfqE3x1shEnsavRVyj+Bb0PY1egz
26hDY/77T7ga/UyQq/fAaXJyNbr4bmG7shFycjX6gw9Fm/aYyMnVtM9nCz/P
bS8nV6Mn2EQPsP/Orkb32Dti5OBKdjXtE5clvYxvs6vRJ1eOrTQ+y66m53wY
EWW+n12NPjDMoslhLbsafWFv59mBy9jV6Ef+nks4oGJXo/vbzd9b7SojV6M/
MnXfYjlGRq5GP17hHbC2n4xcjZ5SoO77rbOMXE37zaMg5vEvdjV67ARxzLP7
7Go6p3FznL8ekpKr0afdOVRhFiUlV6P31X0+McxTSq6mfjs38I25lFyNPr2y
9cK5raXkajp3xfPtNMvZ1TQnV6W9y8+RkKvRP+aL1BvWSMjV6M+ujT0bppaQ
q9E77P9QFT1OQq6mOaDXvXafroRcjZ55zvNWyXt2NfrnBpekwUXsatonGtvN
diSLydW0T8xuHum1REyuRr+3JrxDgauYXI1e4mbrvnyAmFyNviDzYLRLczG5
Gt22ZsSWsaXsavQ97hEbJmeJyNXoDVEtlvokicjV6Kd7TnVKVYvI1eiKjre1
fowXkavRnVd1OeurJyJXow9u2Ojx6RO7Gn1rx2tvNt9kV6MHt+g7d9ZBIbka
vbO9ceXASCG5Gt0ib+CMnt5CcjV6v6ITOf0sheRq9BnmRjrTtIXkanQdx/KA
1TXsavThnzwuvb7ErkYfv6G+i9duAbkaXd+subI6RECupnMkaTyVNFNArkbP
XthHw2WwgFyN/tT9nefANgJyNd2nJ5NPGFWyq2ndK3a0N7/IrkavaDE00HO7
N7kaXdn85POdi7zJ1eiX1wbM+OHiTa5G32dx6u6CQd7kavSrLrcEzVt7k6vR
v5pqfDn6il2NPrRs346gi+xq9KTVNa6zdniRq+ketO7ZfdpiL3I1eqfSsI/S
mV7kavSXQc5la4Z4kavR3f4Wlj/W8iJXo9+JMfk28g27mt6Pzh7T7MvsavSV
pfP8nfZ6kqvRX+tcv/kr1JNcjf7BuHLKVS9PcjX6+YjasgxrT3I1etsnnTce
6uJJrqZ50rRKdamBXY1+ozHIo/EWuxr90N8Wc2wPs6vR16yX7DkU50GuRj8m
P9o4UO1Brqbvn9c58OokD3I1ndOfJzuFGnuQq9HTth596vSXXY0+aKBpkdUL
dvW8k1P3Xlf/9zyyiuq5hexqdMchIevMjrKr0XUvmz77sZldjV40SnTpQTi7
Gv1qUsK0cz4qcjV6+HHd0KOuKnI1unqr2uXoKBW5Gn21Z+m1syYqcjX62uH3
395vqyJXo89M3X/q+xd2NfqIJen9BpWxq9GzysynzCliV6PXLIrvknOCXY0u
9/qXpL2DXY3+zOb56aAYdjU9j49sw2t/djX6j5K7hkp3JbkaPWO6r/jDeCW5
Gr29vXxm7AAluRo9xuDrr0FdlORq9K3dPIUvmtjV6BZzzi7aWc2uRk92mmqv
vsuuRm/8Y35/7Dl2Nfr+im16JvvZ1ejKhekGXdawq9G/qKPKOy5hV6MXHJ0k
7SFXkKvR9cLb7RvurCBXow+Qf01xt1aQq9FLJur5xPZSkKvRXQIS3hdqKcjV
6FPThDYdGtnV6Jbme53U5exq9NY35L2vF7Or0TvfO37JJotdje4wbN3AM3vY
1ei54VpC23h2NfqW7yaez4LY1eifN5Qahf3372O4Gv3aX4uswQ5ycjX66NMD
dGst5ORqdON/p+2zDeXkanTz70/sV2vKydXo73ZGdlvwhV2Nnnb74FlpObua
3pt87BDxdXY1usTQarFvNrsaffG10A0Re9nV6AsGNluRmsiuRh+uf9Tp4WJ2
NfqySL93neQycjV6usRAJpwmI1ej7yk5euLUSBm5Gt1m9J9n3frIyNXold8/
vIjrICNXo58LLVzarpFdTXOj0uej8U12NfrCwKjeM1Kl5Gr0J01XOu1YJiVX
o59vrM5tmiElV6Nvmr9hwNIBUnI17ROzIPcOzaTkavSdGUPt856yq2kdB87/
GXdCQq5G/3vxziL/OAm5ms7d7IYcP6mEXI0ecX7upciREnI1um/2s20nO0rI
1bS+v26PbqphV6O/dnhxRFrArka/5Lexvmy7mFyN/mFU2N/FC8XkavSLZ3pX
9XcSk6vRNdu33/2lt5hcja6z9sKgkiZ2Nfrue5nrnz1iV6MHZQTc/XRMRK5G
r7DxfWsaJyJXoyu+65ctlInI1bQPs34df2YjIlejZx8Ik3p3FZGr0YfN6/Tx
Sz27mvZPH1PFoSJ2NXqIsM+ZkH1CcjWdu0FLPkqWC8nVNK8sYjvK3YTkavT6
tGzdcHMhuRr9jbtKI0tTSK5GP36s8UWLKnY1etiVy/sCLrKr0QdJB878uE1A
rqZ58iOqYU2QgFyNrl/UK9x+uoBcTff7Ze+mbgME5Gpyy4ko/xYtBeRq9MtG
r++0KWdXo49fdr9f/3Psajq/LTYHyzZ7k6vpfb4MPpe1wJtcTZ83ufDN2Nmb
XE3759KRIYf6eZOr0f1OJkgdW3iTq9FTn25Zo1HOrkbf0avjuZJz7Go6j4st
qoq3eJGr6XnujdZ+sNCLXI3uNFI+6ut0L3I1+vyrL9QWg7zI1ejzTlZuTWjt
Ra5G/zUt7davSnY1+suu3pqx+exq9HHpg5zNdnuSq9FnPXXYWrvUk1xN8z+9
orbQ3ZNcTedupr7TGQtPcjXNfxejnCsdPcnV6N09dIfU17Or0d18+mQNucGu
Rj9xzd8hId2DXI3eu3OnD39XepCrf428cbJ8jnzivWtNUz9bqMnV6F3S2sdE
9FSTq9FtZv1w6a6hJlejP4+zOJlbz65GVz4flD7/Mbsafd/tadZD8tjV6NoV
/4Q/0tjV6PNS0w3urWNXo/+5s39p9lJ2NbrnrBkLD8pV5Gr0THkrzf1OKnI1
+pXE7uOPWarI1ej+V57qXDFQkavR10RsWlPTSkWuRm99anNG9wZ2NXp1g8lc
t2fsanR1YMS9PZfY1eipJrVlXw6zq9Ev56Rs8tjMrkbvlln++Wo4uxp915Kn
v219leRqdCdB/qkbM5TkavRJB4p0ZaOV5Gr0mek9+rcwVZKr0ROKq2tOaivJ
1ejCJFfvgO/savT5qWFhVq/Y1fT5T2tnad1kV6P/TDn4ojabXY2+ZFBZz5Jk
djX6LG/Xzo/i2dXoZdKuec+D2NXoD16M6/NRpCBX07q8eWnbeaqCXI0+Tqd9
zwnDFeRqdI+EWyeW9VSQq+n3/hnc/FIrBbkaPazIupPuR3Y1+t1X9WWLS9nV
6P9+u/tXXWFXoz+KCDonPsGuRi9aZ3v99Q52NXpE74JdS1eyq9FNfr8drr+A
XY3ukpudVOQtJ1ejD63WPxY1WU6uRh9V1X7z1KFycjV6lk7UpJ495ORqmg/3
leeaNOTkavQjC9N+vm1gV6O/dbfSqCplV9N7fv+95N1VdjV9/8WS0D8n2dU0
f3wLag13s6vRHTPX93eOY1ejSxOGWK4KYlej9+m4tMMtsYxcTftwu+v5Xo4y
cjX63DMbRkZZycjV6Gm2PeLe95KRq9Fr3QozfNvJyNXobhduTCx7z65G72tz
/KnGVXY1usTruf6U3VJyNfqX9j81UxZJydU0P3WOpOk6S8nV6LObbWzc31tK
rqb9b+vc6PyLXY1eOmxhuvYDdjX6op67Or7LkJCr0Vc4ic3LoyXkanRBB8dW
770l5Gpa32v1W3QtJORq9DsND195tpWQq9EvmMbVZlWyq9EHDk3KHHhBTK5G
763tM+rcJjG5Gl38a3OUIkBMrkYvWLp1dV97Mbmavse7WtDCSEyupucv/Nnw
4xu7Gv30eMdpWvfY1eiF56YstMwQkavRvTcqZEtiRORq9Lg9bXs+ForI1TRP
zA+nTrMWkavR7xsf/lHWQUSuprlUGmiU8JZdTc/prdB1ucyuRk8c8bJ88G4h
uRp9+zHHsL4hQnI1+tSDTR9GzhCSq9FH5MwYpRokJFejpwxO8T6sISRX0z7U
t3NrW8GuRtd0SRy48hy7Gj3Xr7i0+2YBuRrdsmTanKvzBeRq9DY1qidJjgJy
NfqbM8I+800F5Gr0Le7LZ875x65GP5vVRhFRyq5G/57j4HEsh12NHmIdNfTb
em9yNfqx1g0fvAK8ydXozf893PJ4qje5Gl3nl3/fgD7e5Gq6Fyo+JRv8Y1ej
30xPbllTyq5G76rIcLt5ml1NHhs1ddP1jV7katq3S44UvJrvRa5GX7iuTXlX
Zy9yNfq1nqvrpf29yNXkgRrl+6stvcjV6PlfLr6yf8muRr+xpPBGRS67mrxX
uztj0w5PcjV6RquFkfIQT3I1+oJi1XTH2Z7kanpvEbt0nId5kqvj86dd/jLv
v3vxyUu91P3sanSXuC7df61mV6PL2lbvkgSzq9HX5d85dFekJlejRz+xnTDd
Xk2uRt+gOCp7OkRNrkZ3m7+0w/xuanI1urJDe6fO/9jV6EcXXde5VMOuRo/8
0yEw/B67Gv2H00jxlHPsanTNaTvKeqayq9HHzIr//CeRXY1eYOy2p34Ruxo9
6rdDRY1IRa5GX3zhxLkGexW5Gv3qw9tDNIaqyNXo++ZWj+2rpyJXo4crrN/O
aq4iV6PL5/wctqaWXU3vofVcvUcP2dXo+9Nz9/a/yK5GX3K8T3FcGrsafVD4
nY2N69jV6KYr3jWbv4xdjT7KMblro0JJrkbfFt71Vuw0Jbkafc+/ALN+I5Tk
anSnupsWD3opydXoggMuVYlaSnI1euCrTuNnfGFX0/s8bTa5dxm7Gl1/X863
ZtfY1ejuSZc96k+yq9HN3yjVr3eyq9GvJB/q824lu5r21cg9G3/NZ1ejT7vu
nKXnrSBXoy/okhtrZ6cgV6PXLP+iHTpEQa5GP9Prq2N+dwW5Gv1f6aUxnVoo
yNXoO6d5vZ5Xz66m91aZPfnZE3Y1+pqX98Wul9jV6HZz0oc9PMKuRq9baZan
3MquRk8dOKtN82h2NfqTSdraR/zZ1ejbz067J/eQk6vR/4T8ndnXVk6uRu+3
uMOmr2ZycjX6kFyfzQ+6ycnV6EbzGzxym8vJ1fR7b619fqqeXY0+fsLAPqef
sqtp3wpSzIsus6tpzlQ//Vt5jF2NXvbqyOb2O9jV6H3W/vo4aSW7Gv3pgr06
sQvY1ei2nsHNnghk5Gp6fvXMHIspMnI1+vIu2la7h8vI1eitLMLCuxjKyNXo
p38u3LhFU0auRp/YPqrG6S27Gt24IGDyynwpuZrOe8up455ulZKr0e3PHnpo
N19KrkbPOT1A64a9lFyNHvBMUDHHUEquRpc0v+fZ5yu7Gj1pYLfgb7fY1TSX
fM5aVx2QkKvRO38Zn/wuTEKupn0+ZugJLXcJuRp9RmW7uXZDJORq9C233O5t
bSUhV6P3GhBX1bKcXY1eGGx4MPG0mFyNfjhpXTezdWJyNfqko7Nsqn3F5Gp6
zuUlHc5NFJOr0dM6bt6epi8mV6MP+9fw9NhndjX6OLHXnTs32dU0/69Zh2sd
FJGr0VfP/VAtjhCRq9FPtH+jdctTRK6m/dk5onb2cBG5Gj0/Rjfha1sRuRo9
vZtWzcnX7Gr0khFZrWLz2NU0B9oEvAneLiRXo7cISEgMDxKSq9E/dpJ+2TtN
SK5Gb7tgfO8X/YTkanTdhyF6Fs2F5Gr010r3pynP2dXorgP6ysxOC8jVtB+0
h2bfWS8gV6Mb1p17tNpfQK5Gz0tqW6iYIiBXo3/KUkbNNhGQq9HP9WrdQfKb
XY1+cMOweTFP2dXoEQ977S045U2uJu/ldjiot9abXE1zYMSIqMQ53uRqmgN2
t4d3s/cmV6O3bqF14YKxN7ma7sFsA8PQ3+xq9ITLNt5uz9jV6MJL6wKnZrOr
0WNDpqnc1nuRq9EXlu2yDg3wIlej9x98qPqCgxe5Gv3O0x2Lu/X1IlfTudix
7U1icy9yNd1TC4ts9MvZ1bpT7z7UDJJPFK1Z67Vc14dcjV58L84l+Q+7Gn1m
bW3enWp2NfrJimFH2t1hV6PXht/RcT/NrkbvNs/qz+FkdjV6q8l31dpx7Gr0
UbvazAhboCZXo6t6Tbr43VNNrkbfvr/ieORENbka/bnFuH46A9XkavQZJtmm
OZ3V5Gr0voY7jyh+savRb4y3zTWoYlfT79L/4Vl1k12Nfr9YK+p0Nrsa/V3L
POute9jV6IsGeC+PiWVXo7dzNnANXcCuRre0t8+J8lKRq9F1Czsc32irIlej
d5h5cnTmIBW5mr5/jkT0oquKXE3rHumko/OHXY3u0HG/0usNuxr9Tvom54y7
7Gr0sd8n3259jl2N7vn0xbvAVHY1+lOviNSa1exq9IN3HH/MXcyupucvEdX/
kijJ1eh+gQ8itzkoydW0PxsuZ020UJKr6e/2mpzwraeSXI1+bMKc5udaKcnV
6IM62RnGN7Cr0V+/qChTlrCr0X+tcp48rZBdTe8zYd1M22PsavTIdlmt7bax
q9EnvDqvmhnNrkbP3pYREODPrka3DY/stdldQa5G/5AxOqJ4goJcjR7a5mmC
1iAFuRo909vFzlNHQa5G7zdl+5HMv+xq9H/Cw4V679jV6Kk9lyYlPWRXo7f/
+7m1dh67Gn1yWFurnYfY1egLuh3VsdrErkZ/JijMKA1nV6PX1ds0rvFjV6OX
rP7eOH22nFyN7qFfebTHeDm5Gt1oX5lB4wA5uRrdRnDLvrSrnFyN7nNm7YDb
f9nVdH6VLYtuvWNXo39zatOr5BG7mvbV/sVWn/PZ1ejnPvZvo3eEXY0e0+bb
Nqet7Gp0x+6naxKi2dXoQcfGfn8cwK5Gd70gumbuJSNX07rsqvHabCcjV9P8
7HbsaOuhMnI1uotfaOGqHjJyNfr6Kb2SO7eWkavRDxddW+5Wxa5G3/Sm7+S9
56XkavRdqnc7Wm6UkqvRze7tDY+eIyVX0/4pefhRz1ZKrkbPEGh/va4nJVfT
fpbdX735I7savbt16umlxexq9BaqfyEh+yTkavSF19R31iyVkKvRrde65uXN
kJCr0cWTrRy0BkrI1XSun8fPm9dcQq6mdc/MH1pXwq5Gv7DTYX3MKTG5Gn1i
zfr1lqvF5Gr0Q/4tLf4qxeRq+r3xmiGVY8XkavTrQ1tLXuqKydXobT9K675/
YFej238P6TWwmF2NbmVwuGlRiohcjR742j362XIRuRrdffWjTA83Ebka/ZRm
xNoPQ0Tkapoz3Q/p7WsjIlej+49Om+n/il1N56Xo+ugZF9jV6Iav5Y9dtgjJ
1ehuOy709l0gJFeTN26bmO5wFJKr0RNdy0pf9xGSq2nfllk5OP1lV6N37D9v
3vVn7Gr6u0+LnRVZAnI1+uOt8a911grI1ejNutaNeuUnIFejP2kxxOmanYBc
jb5vcIL+NSMBuRpdx3/UoZc/2dXoslMLv3d9zK5Gj9Odqyk/6U2uRp960+3F
tdXe5Gp0LUtlsIOvN7kavabkyv3KSd7kavTpkelftxp5k6vRf+iPfKX6xa5G
X/Jiz5ZpT9jV6PdsNHRcTrGrad1r14vnrPUiV++/M7PaMOQ/n9RptAmNZ1ej
n4sJGOAf6EOuRrf/rHXW18uHXI2+6K3XmcCJPuRq9JL79/rHDvAhV6P7v3/d
9lAnH3I1updMQ/HkB7safYDjTvPOr9jV6PIH2kFe19nV6GWTLw85msmuRt+k
313Zfie7Gv1hW7+uy2LY1ejqvtoTP89Vk6vRq54JapfMVpOr0f+0Se3adqya
XI1urjfs4iFTNbkavU1z17eztdXkavRZQvut7b6xq9EPLPAovlvOrka/Ovly
5L5r7Gr0bceuXgw/ya5GL/LYucJ3B7sa3eZRyANxDLsa/d+xtUdk/ipyNfrw
eV06BbqpyNXonoeGNk8apyJXo+/s2Dkqu5+KXI1+ZWn5mncdVeRq9Je1uWZm
P9nV6Gsz7giWVbKr6e9OtDR4dJNdjR64ps3CMTnsavS4W2rBiWR2NXr/FHXJ
0Hh2NfoXY4OG3IXsavT8sl27PYRKcjX6pIbGyt+TleRq9Gu/rQpPmCvJ1egb
p/iOX6CnJFej/z6+2X1MCyW5Gj29sFBLp55djd6n6Ifw52N2NXpOtvX0unx2
Nfr9WcvL32Wwq9FnDr/S6esmdjX62dMdqttHsKvRe/WfLRrupyBXo7c4Gr9E
MUtBrqbzIjwwct9YBbkafcKkHXtq+ynI1eif1V6HbTsryNW0jvfvSQ42savR
9+9ouKD7hl2NPvH13ssb77Gr0ZUNNxYZXGBX0z7s7nXv1EF2NfWKwSXu69nV
6C5fB69rFcquRh8/avSXS//77//+v6vRO16yar16hpxcjR7z5lexbIycXI1+
027OWLt+cnI1+ow8gdyis5xcjR6x+tAo89/savSwEYMKR9Swq+mcHsxpPu0B
uxq9tlevr/MusqvRl8+ySd59iF2Nftz98Z+nm9jV6AtOXdYxjmRX0/7xvVsV
PJddjX6x/pr/E3cZuRo9e8ySY5NtZeRq9DP30jLyB8vI1fQeMo3kU/Vk5Gp0
wcKDj563lJGr6Vz7N2v7q5xdjX43pLra/bSUXI2edipi/M01UnI1urW2i65A
LSVX07m78MC/xTgpuZp+r12C3RUdKbkaPTSmbs/eenY1neucwLDNV9jV6CtX
rHmZultCrqbz2CL75o1gCbmanjN/9oT20yXkavSTxSVjfftKyNXol0+dvPr8
D7uazte+ic/nPGFXoy90bIjofEJMrkYf0dL41IM4MbkafWqRZcgxmZhcTfPT
OuFWio2YXE2fTws7faKLmFyNHmzqZ/20jl2Nvix0v5PeVXY1rfuYld+DkkXk
avS2l8TjapaIyNXoX0dFGy6eKSJXo2tkjNthYCYiV9O+bazILNMQkavp3FWd
8jtbzq5GN+r/L+/oWSG5ms6RrN3p8xuF5Gq6l/sZuFYGCMnV6Jptg1f3mSok
V6OLk2cHRJgIydXo60N/fv7cxK5G32qfahz9hF2NPioz/tuATAG5Gn1YQvXi
2tUCcjV6SFbD3qs+AnI1umrEi8XnbQXkavLeuPIfxQYCcjXds0b9B336zq5G
zxW/aWv5kF1Nfsh23L32uDe5Gv1v1/CKlone5Gr0VYcPP96o9iZXowe9/RU5
xtabXD3c49E3i+X/3eOf7EwP/GZXozfbU3BA9ppdjW7Se1LcwFvsavTLJVNu
/81iV6NbPnBY+nIXuxp9cdXFhDsr2NXoVoXdW1739yFXo+vpXam+O9uHXI0e
lzTYsmqMD7kafcSr0/UtTH3I1eit/13pOrS9D7kafYlmToZvI7savXLuqxNH
X7Cr0b9+2Nf/7xV2NXrf61O6iI6xq9GXZ/ReWLSFXY2udTPKflwEuxp9SMvD
6wt81ORqdJt7VbNnuKrJ1ejN/QLX149Uk6vRP1xdO3WLsZpcjZ51dvlyJy01
uRq9viFgUPvP7Gp0Y61dXqWl7Gr0K7tHts4pZFejX3AKstp9lF2Nvqtoyet1
W9jV6HerFnZfH8GuRndOibuz21dFrkZvYV3W9vQMFbkafXL3zbef26jI1eip
2je7d+ijIlejP7ROrp3WXkWuRjfr1H/q9q/savS6hDDzj+XsatrPbbJS3IrZ
1bS+81+kXM1kV9N7GKI5zG4Xuxp9lJPd9Nsr2dXoM9Xbfynns6vRXxR1tGnj
pSRXo1v7nNA6Y6skV6OXfl4+b5GZklxNz1m2SD1WV0muRv8t3vG58z92Nbpt
1FvdxrfsavTC/qJ7lQ/Y1ejb9d/3Ls9lV9Pzt9zY4U0auxq956oJm3+tZ1fT
81i+ze4Zyq5G90oLW+ioVpCr0UOW1t1Y4aogV6O3czO5fMNGQa5GN/yu6WVk
qiBXoxeNXr0mooOCXE37Vn+dsu4Huxq9z5mfpaoqdjX6dNXxxtrb7Gr0A+lr
M8PPsqvRfSYt72K4n12N/nqEq971Nexq9PF33hVGL2VXowuTTbtNVcrJ1eiJ
65511HeRk6vR9StfZH4fJSdXo1dZtvlT2UdOrkZPWWX2ubSDnFyNPnuiwcaK
n+xq9EWjD5d9fM2upvmTe+Bxh3vsanRRfMlymwvsavTyEp07gWnsavRPC0zu
ZW9gV6NPXVcc3SqcXU3f3+ZBlcKPXU3310iN77dmy8jV6Lc7m+baTZCRq+k+
7f3V8togGbka/dYGG6lnNxm5Gr1iwKnxjc1l5Gq6R46NTRvznF1Nc8Zn6ehD
p6TkavQVWhvGmCdKydXosav+HL4tl5Kr6V6zskiMtZGSq9E1qveVenWWkqvR
e5Sf3TP5HbsaXf3fgjtekpCr6d4Rb4n22yEhV6PvNRx8cN9CCbma9kNaJ9vP
jhJyNfpZnTQPcW8JuRr93KDpNa9+savRH3mqGiMfsqvRB+RPjRx5VEyuRm8/
fmaC5ioxuZrWJehZ1y9iMbkafVihhfH3EWJyNbqdIuuETicxuRp9nOeRQud3
7GqaDyvmiHdfZlejD00fHdF6t4hcjR44d07/xMUicjV6jXS8oL+riFyNbt6+
mV75ABG5Gr1r3Wf58RYicjXNycXeNttfsKvR5/QL3rvrtJBcjd4UFb3l7Hoh
uZo+r5tn0DBXSK5Gd41VjZhgLyRXk1vWHqs61EtIriaftLzXd/AvdjW9z5fN
/hY/Ylej+9stmhd5QkCuRt+x1Guxa6KAXI1e3FTRzUYtIFejT4gYOXvsRAG5
mt5nXaKZd08BuRp9foBGyrpv7Oq8Mg9Nh4j//v2y1/nk14W+5Gr0uF4rCyO8
fcnV6LeXbRqsY+tLrkaPzPpVnzPAl1yNXhYxorWqky+5Gl3fNX+Z0Q92NXp0
gJZjdQW7Gr2uzarFZ6+xq9Fzpyc3236CXY2+aunFuhXb2NXohlVTRoVFsqvR
B/TYVRPl60OuRo95361pg6sPuRq9Oqpr8ImRPuRq9AWiN7NLevmQq9F3h73a
1VHTh1yN/kQ+e/qsj+xq9De94uakPGNXox8JuPLpdwG7Gv3ecdcaVQa7Gr1l
+7nOJRvY1egFITN7CZazq9G1cyeqahRqcjV68voFPaOd1eRq9I97ukzpb6Um
V9PzrxVWlxioydXoAw2W/dreSk2uRpfrbYtVfWBXo7cKK08c+5RdTfshcLGm
SQG7Gv2cOLJZlwx2NXrtR4PgjhvZ1egXzQJU+qHsavQHAfEPhqpU5GraD8sT
82dNV5Gr0S3XxA+OGaEiV6Obem/tkddLRa5GF+tdTWytpSJX0z7c3CdC+Jld
ja40z/ua+5xdjX6jNvnzoKvsavSnS24vPnicXY2eMtI1avB2djWdO4f+XQui
2dXo6jUeQ2X+SnI1+qjTzx+3d1eSq9H/TM1qUzReSa5GP37g6dXVA5TkanTj
rradJV2U5Gr09UXVtWN/s6vRp7w5N3vAG3Y17f/NJ6YZ32NXo9t8P/3E9Dy7
Gt16bN5n6wPsatrPqZkps9eyq9G/Roe+Dl/KrkZ/PF0jN1uhIFejH9hrMfDH
NAW5mubSmLrBDiMV5Gr0im6diw+YKMjV6Bskq5q02yvI1eh64f2LV3xjV6MH
GT82b/2KXU3naOLcYVtusqvRFb0v3R52ml2NXqI41aZkH7ua1uu7TsWa1exq
9DSrPDfXEHY1eusn0XMM5XJyNfrUZhZGP5zl5Gr0d1P3LqoYISdXo/c6vX3u
QxM5uRo983Zdy0ft5eRq9FfrVBNffWdXo7tH3zZuqmRXo2ccbzhocoddjW6V
ufGe2zl2NfqerLCUzQfY1ejDQoL0X61jV6OHzx5pMzqUXU337OQ1zff5sKvp
91ZbLeoyS0auRu+69P3aDeNk5Gr0cXXB7oYDZeRq9JPP467l6MjI1eg7d7yq
FjSTkavRI7yWKvSfsavRrx7Z57b1hJRcTfeX+ZH9g+Ok5Gr0g34aM19IpORq
9LkB3SQHR0jJ1XSOXjrciusgJVfTvdCm+Z4Vb9jV6H0LU+5vz5OQq9Ff7F3t
f22rhFxNz/PMIKDjAgm5Gn2vJPNR4FQJuRo9tSI1ra6XhFyNvvmWQ1XkD3Y1
eqX0x+oh99nV6Pf3a6Q2ZojJ1ejBS/P6PY4Rk6vRDXYG97wrFJOr0ZvSFkVX
WonJ1eiz+rYWdOwgJlfTvZMQnOZew66m92zTyi+ngF1N+237773mO0XkavSR
Lfe4XlokIlejHyrvt3TedBG5mvb5tmc9LPuLyNXomzI+jOrSXESuRv91YP/D
ts/Z1ejdLYfVG+QIydXoS3reXOGwTkiuRp/gmLFrzRwhuZp8ePePVb2dkFxN
+7zh5wyVkZBcja7T8/bHrz/Y1egnmg7opjxkV5NzFh8rUB8XkKunqUv0xTHy
iZMaex5Z8JZdjR7f9szKq3fZ1eiRP/+k9z/DrkZ/vTi429ZkdjV6l2c77neK
ZVejbx72rnTbPF9yNfpSUYmlmbsvuZq+X6+s7MZYX3I1+oRuytIQU19yNbp2
uyeDhrb3JVej6xTtvvflC7sa3XBij9tXnrOr0VccO2aSWsiuRv+y9tTd1UfY
1fQ9l6OeRW9iV6Pf2xAwbmUouxr9xNWifxuVPuRq9LzMF8bHnX3I1eij7H+k
PLb0IVejL9CXrdQy8CFXo3eN8rzuqOFDrkbvv8EoaGs9uxr98ajPkQ2P2NXo
WZPbN7pdZFejvw/cf7foILua/u7iuq72a9nV6FGddC/fDWFXo5/p5vLcR6om
V6M7h16StXVQk6vRV4m3zT4/TE2uRv/W9Wt2iL6aXE3rOPLPqgkt1ORq9Ojj
d6/p1LGr0d3PJIR+e8iupnX/bJ/6OpddjW69wGBcxUF2NfqDk72nv1nLrkaf
edH/4c8l7Gr0vaaa9/XlKnI1emDb1lOnOKnI1egZQxeOiLRUkavRbZtm7fvf
/44NXI1ut+LUqm6tVeRq9OAtm2uCG9jV6MX5TUUVz9jV6CVeb009L7Or0bXi
vVo8P8KuRg+d7iDz38Kups8nZk7QjGRXoz9pnZSS6ackV6O3D78d6ztLSa6m
/bxnzseBY5XkavQh3WZV/OirJFejN+0OcXvUUUmupvnw5cqM3J/savS09wMe
n6xiV6ObhyVVZt5mV9P8OfF0Wf4ZdjW6Ud7HXSUp7Gr0Hx1yHZslsavRR4wx
WGkZwq5GT+n22XmRTEGuRu+dY5Ca76QgV6PnBC6L07NWkKvRRzdU/Q7vpSBX
03sYMKLlRy0FuRr9xRyHXfMb2dXoBdJPV3+Ws6vpPHZrvXLDdXY1ei8NwRPr
bHY1upNm/sU3yexqmvMhrcYcSGBXoyu7/3aZH8yuRr86LPDXZKmcXI3+Jm7I
+AFOcnI1+hLfvz30rOXkanSTA0c26BjLydW0vim/Uw3bycnV6D5uZ1wtv7Gr
6e8679vu/opdja6fuTxi5S12NXrudM0WBWfY1ei/1mmZau5nV6OvXDuuWrSW
XY2e314xJW8Zu5runQhLh8FqdjW6pva8urQZMnI1ndMdxcPMx8rI1egTC/7q
Xe4vI1ej+78sOqDoKiNX0zqOOJ7R6y+7mu67U8WzNz1mV6OnJ092ND4mJVfT
ffcvdnXRSim5Gv1ixOeesSIpuRrdbWFNk8RKSq5G315WOHhmeym5muZhTNUJ
0Wt2Nfqusr2x0bkScjX6GIsZp/I3S8jV6APXOVp1nychV5OLHpdrx9tLyNXo
N3NlE7sYScjVNN/KDG/nfGNX0z2bqcgJusuuRg/as+yXwyExuRr95LfDe0ZF
i8nVtN9aj9tnKxCTq9HVXYJbqizF5Gr0ZtKNxXvbi8nVNLdHPvvYWM2upu/5
siJcmc+uRr/y4/6Cuu0icjX62yu/i5OCRORq+l0NYxOnThORq9FNh13P7tlP
RK4mJyifOGo1E5Gr6b2t3+bUqZRdTfOtdtzZYdlCcjW64sWPTXPXCsnVdM+2
+lZ+0U9Iri6pF5oFxcontvqUrdNF5keuRi8We7+1mupHrkZvmRL9U2nuR65G
zzXOdtyr60euRt9dFlT65je7Gj0zbsyx0a/Z1ehVG+MKd95kV9PzON0yapPF
rkYvrV5eELmTXY2+ZXuzwxox7Gr0U+lFL7bM8SVXo5sutxBYzvQlV9NzHj7Y
p2yUL7kavUYvYvQmY19yNfr3n7r73DV9ydXor94Wupt+ZFejS7+Viv49ZVej
R5w9fPpNPrsa/ah3pKo0nV2Nfjg9xbd0Hbsavd7E89KbJexq9DNtKoP+SX3I
1ei6PtHhpg4+5Gp0s74LK92H+ZCr0ZN0a1M36fmQq9E7/TEpKGvmQ65G99/v
PMbqHbsafU/5Vt1t99nV6G+Th81ofZ5dTZ//Nak+OpVdjX7F5mut1mp2NfrY
V/7Tkxexq9HrLhbrTBCpydXoqxoGTaqfrCZXo7f9cvzJwSFqcjW687H5D/27
qcnV6C+Do23G/2NXo9sa/NYyfMuuRvdt+miveZ9djT7l54IP/86xq9GnbYnV
0NjPrkZ3+DghQSeJXY2+9vGB8OGL2dW0zwsvVAokKnI17efG+HPrp6rI1ehf
fTu0fDhMRa5GP1vjXGDSQ0WuRn/UdcLnsJYqcjX9Xr+qHa/r2dXo+fYWZ72e
sKvRTX70dinJZ1ejD84/LPLJYFejGz/Off3fP1zJ1fT5EKeag2HsajqPNZPU
Xj5KcjWdu/BN0u4zlORq9CMH+j+ttFGSq9HNq9/eOt9HSa5Gr67Ls92rrSRX
o19at27E+u/sajp3z8YfXfOKXY0+q+WJ/dtusqvp9yYVGB7PYVejjxk2q+f9
vexqep6vE/c0S2RXoycP9zswNphdTfNkdcrwVRIFuRo9r/VV+1IHBbka/WeL
jFdjLBXkavQH9r1bHzZUkKvRK/+0zDbVVJCr0eOKe9Uf+cyuRr9x2v7EhDJ2
NfrcWZP/VlxjV6NfT31bknSKXU331PC/k6bsYVejX+3oOrp9PLsa/WPJ/oLy
IHY1utbFwicX//f/G/n/rkZ/vjw4PMNBTq5GV89fnpNiKSdXo49bvz0yzUhO
rqZ7cPn6F2e05ORq9ID5vW8/bmRXoxe4a89q9pJdjb7yeoeAkTfZ1ejHdap6
hp5mV6N7jrJX3ExhV9O6NHyYMGANuxq9W9b2nA1L2dXosos/C9uoZORq2lfa
xf6JrjJyNXrPeWeP6Y+Rkatpfy6ISMzpJyNXo+ssv9VC0kVGrkYvi0837/eb
XY2eej5+Q8ZDdjXNN8HOoVOOSMnV6A1fR7b9HSMlV6N/fna+902BlFxNn9db
vjzLQkquRk/ZfqNLTlspuZruiw7/6u9WsqvRt7b3a6txQUKuRn/cwi1g5iYJ
uRr9mkNHnbP+EnI13Qsmr1uMmiwhV6P/Kegx+r6BhFxNjpr98/yKr+xqmofN
r8S63mFXo/f+lptslS4mV6PPUZpqWEaJydV0XhJGnXXyFpOraT6ctc4NtRCT
q6kLPToXtROTq8mf3x+cHVjNrqb1tazMSstjV9NcLTvbctx/noer0e3eJ2TU
LxSRq2l9k2LTcpxF5Gqatz3Km7b1FZGrfYPLx8Yl/ueiLd3ev3jGrkZfqe//
4VY+uxp9Q6CRyfU0djX6hOxzsffXsKvRc9ZdMn4T7EeuRs9wO/2xtciPXI3e
rJPOD0s7P3I1+v09s0bNG+RHrka/llt96lRnP3I1uofJuDkaP9nV6DbxV0SK
l+xq9OXFVWtvXWNXo0+p/tvM7gS7Gv2fUUj21a3savQxGmmH3SLY1ejtY2pe
N6h9ydXoxo3rVNum+5Kr0X2sPg1ytvYlV6M7Hva2aWfoS65GL/DW2fBUw5dc
jV78yc/yZD27Gv1Y6S6TLY/Y1ejtJn8Qxeayq+k9WCS/WXGAXY3eJulN/pok
djV6j/7/3u0PZlejmz828CkS+ZCr0WcHLrT+OtmHXI3es8bMe9gQH3I1+iKH
pQ+W6PqQq+m93Y1MvfmHXY0+64PfDbM37Gr08QJP5+132NXo+3QD+nU+w65G
1wy9Ktq6l12NfnJqZEP/eHY1euLBUxVXA9XkanQ/6xDzQG81uRo9T6/8Rb9J
anI1et+mprp3g9TkavT6nhWic13V5Gr0Pp6bh235za5Gv2zezy+8ml2NHvRw
t0bQHXY1utmQv60XnWFXo1+pmh4YtY9djT7Zd43tzgR2Nfqn7xdCC4LY1ejB
x5/0+iJUkatp/qx4Zm5hryJX0z73PJ8Rbq4iV6MbNgVteNxdRa5Gn2b1/Y1N
cxW5muZMsc2Rw7XsanSNKLOK/o/Y1egTLS6syLzIrkZfde3xjqnp7GraV5N8
eteuZ1ej6111N9qxnF2NvnDH6rVuKiW5Gj3d+v0iAxcluRpdYSe5+3GkklxN
nz9YkHLfREmuRn8Y0ViX105JrkbfPeLZ8bNf2dXoRyMd6vIq2NXoK8TGqfev
s6vRXwy0efQxi12N7rRzboxBMrsaffvVxGNu8exq9PcD5nvsCGJXo488VhNe
K1KQq2k+HC02dZiqIFfTHPv60vnUcAW5Gn3Eg79fBhgoyNW0T7QbDI+2VpCr
0SWNYTfGfGJXo0dKgn49fc6upt97ctvxqCJ2Nfr6l1k11pnsavS0sKS077vY
1ehPjlbXXY1lV6MfHxVzdt9CdjX6gNV9tONFcnI1+ofTCbWhU+XkapqHyxfN
DLOQk6tpftolT0owlJOr0VtaFeWlasrJ1bRv+6YVFX9hV6PHHP0uaCpnV6MP
N1wUNvoGu5rutbV3zWJz2NV0X5ddnlO+j12NHprZfKRdEruazl3UhM3ZS9jV
6I/WmcdYKGXkavSuTZHNL7rIyNXoN7KruriNlpGr0ZsSNc987ysjV9P+HLT7
Q3pnGbkafbXt1uDrv9jV6HGF0daiB+xq9KvrXU00D0vJ1einrGfZ3I6WkqvR
//YojTjiLSVXo8eutv6SOlxKrkbXOn9yW5aWlFyNPvbalnllr9jVdF9fGxxi
fF5Crqb3du3CqbCNEnI1ev6DWNPPcyXkavTWv+7eirKTkKvRh3g8PTrgP8/D
1ejjOj6/+q6RXU1zW95d/8ptdjX6gn1F6WfSxORq9MCJJouuRIrJ1fR3n4rD
ar3E5Gqae70zrwz8z/NwNXqhtsv0mP88D1ejN2Sruze+Fk38P5whO9o=
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  PlotRange->{{0.002247098500204577, 0.0025222534185969743`}, {
    125.02038940585066`, 140.32900851677115`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.674296566008313*^9, 3.6742965719382772`*^9}, 
   3.685294549174964*^9, 3.685297448653187*^9, 3.685297751372592*^9, 
   3.6853876399349003`*^9, 3.685388673274251*^9, 3.68538963584341*^9, 
   3.685389700777541*^9, 3.6854488676288424`*^9, 3.6854489384350643`*^9, 
   3.685455339171151*^9, 3.685456261518993*^9, 3.6854565988876057`*^9, 
   3.685458032409956*^9, 3.685463872275166*^9, 3.685464096341757*^9, 
   3.685466582874072*^9, 3.685473386982443*^9, 3.6854738058098173`*^9, 
   3.685474695404913*^9, {3.685474782906968*^9, 3.6854748277382803`*^9}, 
   3.68565146267566*^9, 3.685651820909246*^9, 3.685654822123529*^9, 
   3.685654913908134*^9, 3.6857487779080687`*^9, 3.685748928741129*^9, 
   3.685749421826344*^9, 3.685749981027176*^9, 3.685750231692232*^9, 
   3.685750427928762*^9, 3.685751083591956*^9, 3.6857998982720013`*^9, 
   3.6858006870383663`*^9, 3.685800899185275*^9, 3.685801648358197*^9, 
   3.6858020606025763`*^9, 3.685802698814495*^9, 3.685994195534328*^9, 
   3.688818264252301*^9, 3.6888193213087053`*^9, 3.6888194099266376`*^9, 
   3.688841424369672*^9, 3.689430553293054*^9, 3.68943564161555*^9, 
   3.689435810498036*^9, 3.690040510289054*^9, 3.6900407674450693`*^9, 
   3.690040839339384*^9, 3.690040874676289*^9, {3.690041091096355*^9, 
   3.6900411343014107`*^9}, 3.690041254373308*^9, 3.690041721445621*^9, 
   3.690042262222155*^9, 3.690044495607945*^9, 3.690058128065311*^9, {
   3.690058336114023*^9, 3.690058364919258*^9}, 3.690214999633377*^9, 
   3.6902153229726343`*^9, 3.690220700955615*^9, 3.690222029581152*^9, 
   3.690224094899652*^9, 3.6902278102725163`*^9, 3.6902279779832573`*^9, 
   3.690228020492442*^9, 3.69022818234286*^9, 3.69023091750028*^9, 
   3.69023108774791*^9, 3.690231157112916*^9, {3.690232394392158*^9, 
   3.6902324215378447`*^9}, 3.6902343583248587`*^9, 3.690237669895585*^9, 
   3.690670963845007*^9, 3.692630645829447*^9, 3.692630708582099*^9, 
   3.692630916905044*^9, 3.6926309470644207`*^9, 3.69263104031151*^9, 
   3.692631157421186*^9, 3.692631847248376*^9, 3.692645553185601*^9, {
   3.692646091566367*^9, 3.692646120452855*^9}, 3.692646570752138*^9, 
   3.6926473474908047`*^9, 3.692647485033124*^9, 3.692647703913581*^9, 
   3.692647769983697*^9, 3.692650609831469*^9, 3.692650756132298*^9, 
   3.692652538940282*^9, 3.693256810065764*^9, 3.693263415560635*^9, {
   3.694980207848844*^9, 3.6949802248059177`*^9}, {3.694980260418323*^9, 
   3.694980413997347*^9}, 3.6949804862822533`*^9, 3.732993200844184*^9, 
   3.7329944268720617`*^9, 3.7329964024297533`*^9, 3.7329974889152727`*^9, 
   3.732998250823341*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "0.0022929576532699763`", "\[InvisibleSpace]", "\<\",\"\>", 
   "\[InvisibleSpace]", "127.57182592433742`"}],
  SequenceForm[0.0022929576532699763`, ",", 127.57182592433742`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.694980207895671*^9, 3.694980224850876*^9}, {
   3.694980260433094*^9, 3.694980414010005*^9}, 3.694980486297271*^9, 
   3.732993200862678*^9, 3.732994426891265*^9, 3.732996404243222*^9, 
   3.7329974889309683`*^9, 3.732998250839003*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690215125742352*^9, 3.69021512778196*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Residual Iterations Plots", "Section"]], "Title",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{
  3.690215158188794*^9, {3.6902161843997707`*^9, 3.690216188180086*^9}, {
   3.6902203632846737`*^9, 3.6902203778685904`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tplot", " ", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResidPlotListSlips", " ", "=", 
   RowBox[{
    RowBox[{"iterationResids", "[", 
     RowBox[{"[", 
      RowBox[{"Tplot", ",", "All", ",", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", 
       RowBox[{"iterationsNewton", "[", 
        RowBox[{"[", "Tplot", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResidPlotListHardness", " ", "=", 
   RowBox[{
    RowBox[{"iterationResids", "[", 
     RowBox[{"[", 
      RowBox[{"Tplot", ",", "All", ",", "2"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;", 
       RowBox[{"iterationsNewton", "[", 
        RowBox[{"[", "Tplot", "]"}], "]"}]}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", "ResidPlotListSlips", "]"}], ",", 
     RowBox[{"Abs", "[", "ResidPlotListHardness", "]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterationResids", "[", 
   RowBox[{"[", 
    RowBox[{"Tplot", ",", "All", ",", "1"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.690220404490675*^9, 3.6902204306220427`*^9}, {
   3.6902212744561977`*^9, 3.6902213058627234`*^9}, {3.690221432772273*^9, 
   3.690221473027174*^9}, {3.690221512074936*^9, 3.690221515066297*^9}, {
   3.6902215468186274`*^9, 3.690221577200595*^9}, {3.690221626432432*^9, 
   3.690221702174904*^9}, {3.6902225306769753`*^9, 3.690222702060143*^9}, {
   3.690222744335133*^9, 3.690222747054408*^9}, {3.69022279462193*^9, 
   3.690222916171949*^9}, {3.690222977442814*^9, 3.690223031960096*^9}, {
   3.690223100216403*^9, 3.690223120814394*^9}, {3.690223155727147*^9, 
   3.6902231949721203`*^9}, {3.690223255076859*^9, 3.690223265051826*^9}, {
   3.6902233025159388`*^9, 3.6902233027300367`*^9}, {3.690223385778282*^9, 
   3.6902234261415777`*^9}, {3.6902234810318003`*^9, 3.690223505878022*^9}, {
   3.690223555677703*^9, 3.690223656642089*^9}, {3.6902237708243303`*^9, 
   3.6902237749158497`*^9}, {3.690223811791822*^9, 3.690223821671824*^9}, {
   3.690224131800741*^9, 3.690224277165633*^9}, {3.690224320109542*^9, 
   3.690224333538916*^9}, {3.690224390867784*^9, 3.690224425296989*^9}, {
   3.690224471465939*^9, 3.690224490075988*^9}, {3.6902245338250723`*^9, 
   3.690224618598489*^9}, {3.690224659429591*^9, 3.690224739233523*^9}, {
   3.690224993109737*^9, 3.6902250048518963`*^9}, 3.690228916909778*^9, 
   3.6902299414452467`*^9, {3.6902301388327837`*^9, 3.69023025467865*^9}, 
   3.690230314933185*^9, 3.690230449187221*^9, 3.6902305448002462`*^9, 
   3.690230978246913*^9, {3.690231095715063*^9, 3.69023109720212*^9}, 
   3.690231386205677*^9, {3.690237682671701*^9, 3.6902376827657137`*^9}, {
   3.690237735158688*^9, 3.6902377473826323`*^9}, 3.690644458234914*^9, {
   3.690644628482793*^9, 3.690644630962885*^9}, {3.690654242637122*^9, 
   3.6906542498862343`*^9}, {3.690671685938875*^9, 3.690671716649684*^9}, 
   3.690671765024897*^9, {3.690671815768093*^9, 3.690671830767428*^9}, {
   3.6906721213227262`*^9, 3.6906721229041557`*^9}, 3.690727575943838*^9, 
   3.692647489603759*^9, 3.692647790621441*^9, {3.6926506193188066`*^9, 
   3.692650623118741*^9}}],

Cell[BoxData[
 TemplateBox[{
  "ListLogPlot","argx",
   "\"\\!\\(\\*RowBox[{\\\"ListLogPlot\\\"}]\\) called with \\!\\(\\*RowBox[{\
\\\"0\\\"}]\\) arguments; 1 argument is expected.\"",2,870,8,
   24333284809113870154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7329982509872417`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLogPlot","argx",
   "\"\\!\\(\\*RowBox[{\\\"ListLogPlot\\\"}]\\) called with \\!\\(\\*RowBox[{\
\\\"0\\\"}]\\) arguments; 1 argument is expected.\"",2,870,9,
   24333284809113870154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.732998251009038*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListLogPlot","argx",
   "\"\\!\\(\\*RowBox[{\\\"ListLogPlot\\\"}]\\) called with \\!\\(\\*RowBox[{\
\\\"0\\\"}]\\) arguments; 1 argument is expected.\"",2,870,10,
   24333284809113870154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.732998251027515*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListLogPlot\\\", \\\"::\
\\\", \\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,870,11,24333284809113870154,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.73299825104587*^9}],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6906542503737*^9, 3.6906709638949213`*^9, {3.69067168714662*^9, 
   3.690671717096609*^9}, 3.690671765745513*^9, {3.6906718160491753`*^9, 
   3.690671831332205*^9}, 3.690672123290009*^9, 3.690727576695614*^9, 
   3.692630947225123*^9, 3.6926310404028063`*^9, 3.692631847334791*^9, 
   3.6926455533385963`*^9, {3.692646091679317*^9, 3.692646120564402*^9}, 
   3.692646570792864*^9, 3.6926473475808563`*^9, {3.692647485099049*^9, 
   3.692647489882142*^9}, 3.692647704128251*^9, {3.692647770146511*^9, 
   3.692647791242466*^9}, {3.6926506100542393`*^9, 3.692650623532968*^9}, 
   3.6926507562138577`*^9, 3.692652538979591*^9, 3.6932568101585493`*^9, 
   3.6932634155972757`*^9, 3.732993201163724*^9, 3.732994427050345*^9, 
   3.7329974890618353`*^9, 3.7329982510609303`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690223796240796*^9, 3.690223797462119*^9}}],

Cell[CellGroupData[{

Cell["Plotting results for sanity check", "Section",
 CellChangeTimes->{{3.657956030399905*^9, 3.657956037646625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"slipsNewton", ",", "taus"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656188899591897*^9, 3.656188928421681*^9}, {
  3.656189445629318*^9, 3.656189447385401*^9}, {3.656190754479363*^9, 
  3.656190776737076*^9}, {3.6561908394702578`*^9, 3.6561908411442747`*^9}, {
  3.6561915281216717`*^9, 3.656191532542968*^9}, {3.6561915703725843`*^9, 
  3.6561916071670923`*^9}, {3.656210274001526*^9, 3.6562102744562197`*^9}, {
  3.656335820594411*^9, 3.65633583165145*^9}, {3.656336339041086*^9, 
  3.6563363677445517`*^9}, {3.6572917877769938`*^9, 3.657291793064918*^9}, {
  3.657293643902727*^9, 3.6572937136197577`*^9}, {3.657299797646072*^9, 
  3.6572998015974483`*^9}, {3.657300028598057*^9, 3.6573000289775133`*^9}, {
  3.6573024513341312`*^9, 3.6573024521560783`*^9}, {3.6574497811383266`*^9, 
  3.65744978700616*^9}, {3.6574498595494328`*^9, 3.657449867739146*^9}, {
  3.657920586580392*^9, 3.657920598458099*^9}, {3.68547417234839*^9, 
  3.68547417346566*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0., 32.258020808327245`}, {6.723140194214999*^-10, 
      64.66550633573296}, {2.2501977048449567`*^-6, 97.07682892689391}, {
      0.00012547266239606956`, 121.77029592353414`}, {0.00042554194322692895`,
       135.0427323524003}, {0.000779258446241291, 144.85862393567623`}, {
      0.0011477714370455373`, 153.7370255051587}, {0.001523662609478403, 
      162.15783501575606`}, {0.0019055092137673464`, 170.2109972022647}, {
      0.0022929576532699763`, 177.91680343975378`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.0022929576532699763`}, {0, 177.91680343975378`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.655580709228712*^9, 3.6555807375299788`*^9}, {
   3.6555807761995296`*^9, 3.6555808010355186`*^9}, {3.655580856002851*^9, 
   3.6555809301892843`*^9}, {3.6555810190623093`*^9, 3.655581027726595*^9}, 
   3.6555810883824663`*^9, 3.655673484398728*^9, 3.655674266035017*^9, 
   3.6556748886558933`*^9, {3.6556749312857847`*^9, 3.655674950573928*^9}, 
   3.655675074432452*^9, {3.655675111886772*^9, 3.655675130479321*^9}, {
   3.655675172807905*^9, 3.655675206510809*^9}, 3.6556752372009897`*^9, {
   3.655675501369657*^9, 3.655675521013187*^9}, 3.655675574806781*^9, 
   3.655676778859537*^9, 3.655676826519084*^9, {3.6556769239662657`*^9, 
   3.6556769279580307`*^9}, {3.655676979295348*^9, 3.6556770053789673`*^9}, {
   3.655677072367447*^9, 3.6556770752524548`*^9}, 3.655729144360836*^9, 
   3.655829480199933*^9, 3.6558336002783537`*^9, {3.6558384688436604`*^9, 
   3.6558384906865263`*^9}, 3.6558397533707247`*^9, {3.655839978077574*^9, 
   3.65583998274514*^9}, 3.6558400446176977`*^9, 3.6558400770473127`*^9, 
   3.655840181113234*^9, 3.655840272269232*^9, 3.6558405672355957`*^9, 
   3.656177634683962*^9, 3.656184909377599*^9, 3.656185028254727*^9, 
   3.656185074633314*^9, {3.656188105791201*^9, 3.656188174314349*^9}, {
   3.656188880728668*^9, 3.65618892876679*^9}, 3.6561893375266523`*^9, 
   3.656189417286624*^9, 3.6561894481502047`*^9, 3.656190272676622*^9, 
   3.656190514911748*^9, {3.656190746362904*^9, 3.6561907774810123`*^9}, 
   3.656190841719956*^9, 3.656191381619388*^9, 3.656191533334941*^9, {
   3.656191572525268*^9, 3.656191582378434*^9}, 3.6561916124050503`*^9, 
   3.656191758037073*^9, 3.656191837500421*^9, 3.656191868192181*^9, 
   3.656191975326707*^9, 3.6561950672175922`*^9, 3.656195244845541*^9, 
   3.656195289734182*^9, 3.656195886090989*^9, 3.656196377023143*^9, 
   3.6561976593098097`*^9, 3.6562094968474483`*^9, {3.656210113829534*^9, 
   3.6562101378575983`*^9}, 3.656210173855986*^9, 3.656210275142872*^9, 
   3.6562725921815653`*^9, 3.656272721060347*^9, 3.656274436461813*^9, 
   3.656274554173972*^9, 3.656274606435218*^9, 3.656275814995625*^9, 
   3.656277002726387*^9, 3.656277368305633*^9, 3.656277808541358*^9, 
   3.656278680057927*^9, {3.656278758143055*^9, 3.656278777220847*^9}, {
   3.656278813622246*^9, 3.656278855929117*^9}, 3.6562799212918453`*^9, {
   3.6562806598359537`*^9, 3.6562807081978493`*^9}, 3.656280738394011*^9, 
   3.6562807926934423`*^9, 3.656280822988476*^9, {3.6562809065341187`*^9, 
   3.65628095507255*^9}, {3.6562812066837053`*^9, 3.656281238343967*^9}, {
   3.6562813212926693`*^9, 3.656281349595098*^9}, {3.6562813936616163`*^9, 
   3.656281449713724*^9}, 3.656281494919423*^9, {3.6562815432781487`*^9, 
   3.656281559095811*^9}, 3.656281601015164*^9, {3.656281652631983*^9, 
   3.656281674108049*^9}, 3.6563358334527473`*^9, 3.6563359059804564`*^9, 
   3.656335993407977*^9, 3.656336028956216*^9, {3.656336072434658*^9, 
   3.6563361006741543`*^9}, 3.656336153306306*^9, 3.656336204652906*^9, {
   3.656336246045301*^9, 3.656336307266777*^9}, {3.6563363528170424`*^9, 
   3.656336389808683*^9}, 3.6563364601418123`*^9, {3.656336790977895*^9, 
   3.656336819719419*^9}, {3.656336851874061*^9, 3.656336870519087*^9}, 
   3.656337722627675*^9, 3.6563377646797743`*^9, 3.656341256283937*^9, 
   3.656341465332924*^9, {3.656341507155155*^9, 3.656341523843752*^9}, 
   3.656341612769603*^9, 3.656341648185251*^9, 3.656341787787353*^9, 
   3.656878812184505*^9, 3.656879344465219*^9, 3.656879410000832*^9, 
   3.656939748534561*^9, 3.656939899115888*^9, 3.65694134341669*^9, 
   3.656965845824028*^9, 3.656967675262488*^9, 3.656967935031843*^9, 
   3.656967968944395*^9, 3.657047553528576*^9, 3.6570476372938337`*^9, 
   3.6570477418888273`*^9, 3.657048648147703*^9, 3.657281351202818*^9, 
   3.657290436394369*^9, {3.6572917675553703`*^9, 3.657291797238901*^9}, {
   3.657293672213047*^9, 3.657293714091379*^9}, 3.6572998056732264`*^9, 
   3.657299897798718*^9, {3.657300019021429*^9, 3.657300030637225*^9}, 
   3.65730234195496*^9, 3.657302452773547*^9, 3.6573076828391457`*^9, 
   3.657360862184688*^9, 3.657360894856222*^9, 3.657362302398992*^9, 
   3.6573643079951277`*^9, 3.657364408363749*^9, 3.6573670494488487`*^9, 
   3.6573874174386177`*^9, 3.657388421423304*^9, 3.657417523470828*^9, 
   3.65744724964819*^9, 3.657447718776907*^9, {3.657447851962418*^9, 
   3.657447873351091*^9}, 3.65744809634663*^9, 3.657448484536886*^9, 
   3.657448522769005*^9, 3.657449706226841*^9, 3.65744979007078*^9, 
   3.657449837165801*^9, 3.657449868392363*^9, 3.6574499499274483`*^9, 
   3.65745072972311*^9, 3.657508179094348*^9, 3.657898108439657*^9, 
   3.657898791203025*^9, 3.6578993542238283`*^9, 3.6578994196223593`*^9, 
   3.657900884995717*^9, {3.657903109591352*^9, 3.657903139537982*^9}, 
   3.6579034341861897`*^9, 3.6579203116037283`*^9, {3.65792059082712*^9, 
   3.657920599210415*^9}, 3.657930620315062*^9, 3.6579354659034653`*^9, 
   3.657935508434675*^9, 3.657936802652072*^9, 3.657939671268661*^9, 
   3.657957797650454*^9, 3.657977569106101*^9, 3.657977681666088*^9, 
   3.664561700091949*^9, 3.664566223999502*^9, 3.664568874066334*^9, 
   3.66456897693357*^9, 3.664569019998063*^9, 3.6645691507917137`*^9, 
   3.664569220623424*^9, 3.664569451074012*^9, 3.664569492092491*^9, 
   3.664570719929132*^9, 3.66457083078688*^9, 3.66457099690934*^9, 
   3.664571221871667*^9, 3.6645716019017982`*^9, 3.6645717688013983`*^9, 
   3.6645723422275457`*^9, 3.6645724810597343`*^9, 3.66457260364394*^9, 
   3.6645728800995417`*^9, 3.6645738022456512`*^9, 3.664573952619588*^9, 
   3.664574608741549*^9, 3.6645746435382223`*^9, 3.664576360244379*^9, 
   3.664576476198967*^9, 3.664577269162263*^9, 3.664577696304475*^9, 
   3.664583986444624*^9, 3.664584018911367*^9, 3.664588449446278*^9, 
   3.664737811224324*^9, 3.664737934953617*^9, 3.66474625324293*^9, 
   3.6647510655152473`*^9, 3.664751890879497*^9, 3.6647531498676157`*^9, 
   3.664816004384774*^9, 3.6648311283926773`*^9, 3.6648311858010406`*^9, 
   3.664831299737689*^9, 3.664831410154666*^9, 3.664831513784409*^9, 
   3.664832087565649*^9, 3.664832636040485*^9, 3.664833169275085*^9, 
   3.6649224424398937`*^9, 3.664922612220414*^9, 3.665323989043853*^9, 
   3.6742963463837023`*^9, 3.685294569762307*^9, 3.685297448711138*^9, 
   3.6852977515880527`*^9, 3.6853876401391907`*^9, 3.685389700856947*^9, 
   3.685448867673695*^9, 3.6854489384924183`*^9, 3.685455339227998*^9, 
   3.68545626158694*^9, 3.68545659894075*^9, 3.6854580324533787`*^9, 
   3.685463872307961*^9, 3.685464096371852*^9, 3.685466582920041*^9, 
   3.6854734279336157`*^9, 3.6854741740776463`*^9, 3.685475545131344*^9, 
   3.68565146272058*^9, 3.6856518209586277`*^9, 3.6856548221696978`*^9, 
   3.685654913955056*^9, 3.685748778030685*^9, 3.68574893605891*^9, 
   3.685749421899308*^9, 3.6857499812465763`*^9, 3.685750231741849*^9, 
   3.685750427980109*^9, 3.685751083637578*^9, 3.6857998983031607`*^9, 
   3.685800687068591*^9, 3.68580089927971*^9, 3.6858016483972282`*^9, 
   3.685802060637889*^9, 3.6858026988550367`*^9, 3.685994195564232*^9, 
   3.688818264304394*^9, 3.688819321366625*^9, 3.688819409957706*^9, 
   3.6888414244115868`*^9, 3.689430553352804*^9, 3.689435641648979*^9, 
   3.689435810531727*^9, 3.690040767507285*^9, 3.690040874782118*^9, {
   3.690041091142735*^9, 3.6900411144596024`*^9}, 3.690041721511759*^9, 
   3.690044495668242*^9, 3.6900581280997257`*^9, 3.690214999673327*^9, 
   3.690215323032814*^9, 3.69022070103374*^9, 3.6902220296581297`*^9, 
   3.6902240951418867`*^9, 3.6902278105558367`*^9, 3.690227978181559*^9, 
   3.690228020657597*^9, 3.690228182482916*^9, 3.6902309176800747`*^9, 
   3.690231087955431*^9, 3.690231157252398*^9, {3.690232394506844*^9, 
   3.690232421651013*^9}, 3.690234358477436*^9, 3.6902376700598297`*^9, 
   3.690670963958514*^9, 3.692630947332507*^9, 3.6926310404754887`*^9, 
   3.692631847422522*^9, 3.692645553437223*^9, {3.692646091754695*^9, 
   3.692646120650769*^9}, 3.692646570904492*^9, 3.692647347699973*^9, 
   3.692647485224786*^9, 3.692647704262829*^9, 3.692647770239955*^9, 
   3.692650610151143*^9, 3.692650756301733*^9, 3.692652539036425*^9, 
   3.693256810257471*^9, 3.6932634156709146`*^9, 3.732993201273081*^9, 
   3.73299442714028*^9, 3.7329974891419277`*^9, 3.732998251190618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"times", ",", "slipsNewton"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656195301962982*^9, 3.6561953067252913`*^9}, {
  3.656210192351474*^9, 3.6562101929875603`*^9}, {3.656210296408052*^9, 
  3.656210296832315*^9}, {3.65730009198123*^9, 3.657300107884603*^9}, {
  3.657920734858609*^9, 3.6579207420743027`*^9}, {3.664571360864362*^9, 
  3.6645713870614243`*^9}, {3.664576289229199*^9, 3.664576299272843*^9}, {
  3.68547407010351*^9, 3.685474074766423*^9}, {3.685476014658011*^9, 
  3.685476015174326*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0.0005, 0.}, {0.001, 6.723140194214999*^-10}, {
      0.0015, 2.2501977048449567`*^-6}, {0.002, 0.00012547266239606956`}, {
      0.0025, 0.00042554194322692895`}, {0.003, 0.000779258446241291}, {
      0.0035, 0.0011477714370455373`}, {0.004, 0.001523662609478403}, {
      0.0045000000000000005`, 0.0019055092137673464`}, {0.005000000000000001, 
      0.0022929576532699763`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{379.3187499999992, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.005000000000000001}, {0, 0.0022929576532699763`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6561953072676888`*^9, 3.6561958861968813`*^9, 3.6561963771223707`*^9, 
   3.656197659357795*^9, 3.656209496960765*^9, 3.6562098751689463`*^9, 
   3.65621013806243*^9, {3.656210187141242*^9, 3.656210193924862*^9}, 
   3.656210297327878*^9, 3.6562725922513323`*^9, 3.656272721152264*^9, 
   3.656274436529407*^9, 3.656274554245368*^9, 3.6562746066331778`*^9, 
   3.656275833622772*^9, 3.65627700296655*^9, 3.656277379129333*^9, 
   3.656277819212862*^9, 3.656278703951392*^9, 3.6562806599199038`*^9, {
   3.656280690875553*^9, 3.6562807453824387`*^9}, 3.656280799208403*^9, 
   3.656280833874907*^9, 3.656281005144917*^9, 3.656281326236706*^9, 
   3.656281363423687*^9, {3.656281393716042*^9, 3.656281412628614*^9}, 
   3.6562814575360413`*^9, 3.65628150195621*^9, 3.656281565224988*^9, 
   3.656281608569199*^9, {3.656281660423071*^9, 3.656281681190649*^9}, {
   3.656336007953075*^9, 3.656336034641714*^9}, 3.6563360804155684`*^9, 
   3.656336111600806*^9, 3.656336164739333*^9, 3.656336210223514*^9, 
   3.656336252370288*^9, {3.656336294434079*^9, 3.656336316884418*^9}, 
   3.656336550290743*^9, {3.656336809788995*^9, 3.6563368775045357`*^9}, 
   3.656337729232205*^9, 3.656337773434811*^9, 3.6563412632819242`*^9, 
   3.656341470917297*^9, 3.656341794962892*^9, 3.656878812269202*^9, 
   3.6568793445397882`*^9, 3.656879410073704*^9, 3.656939748628291*^9, 
   3.656939899215989*^9, 3.656941343508482*^9, 3.6569658461667547`*^9, 
   3.6569676754817753`*^9, 3.6569679351199512`*^9, 3.656967969032049*^9, 
   3.657047553609338*^9, 3.657047658193461*^9, 3.657047741999353*^9, 
   3.657048648241827*^9, 3.6572813512729883`*^9, 3.65729043649403*^9, 
   3.6573000424015703`*^9, 3.657300108962551*^9, 3.6573023491960773`*^9, 
   3.657302461233609*^9, 3.657307682901991*^9, 3.6573608622472973`*^9, 
   3.6573608949276247`*^9, 3.6573623024612083`*^9, 3.6573643080516987`*^9, 
   3.657364408420807*^9, 3.657367049511231*^9, 3.657387417503574*^9, 
   3.657388421487076*^9, 3.65741752352312*^9, 3.657447249731523*^9, 
   3.6574477188383207`*^9, {3.6574478520293818`*^9, 3.657447873412013*^9}, 
   3.657448096405642*^9, 3.657448484599286*^9, 3.657448522898123*^9, 
   3.657449706297752*^9, 3.657449837230002*^9, 3.657449949990922*^9, 
   3.657450729810836*^9, 3.65750817919523*^9, 3.6578981085070667`*^9, 
   3.6578987912515*^9, 3.657899354278852*^9, 3.657899419668804*^9, 
   3.657900885047265*^9, {3.6579031096545067`*^9, 3.6579031395896482`*^9}, 
   3.657903434252096*^9, 3.6579203116807632`*^9, 3.657920751013701*^9, 
   3.657930620488785*^9, 3.657935465949276*^9, 3.657935508496019*^9, 
   3.6579368027141047`*^9, 3.657939671328001*^9, 3.657957797810789*^9, 
   3.657977569164486*^9, 3.657977681710555*^9, 3.664561700121982*^9, 
   3.664566224048129*^9, 3.6645688740979958`*^9, 3.664568976982032*^9, 
   3.664569020051051*^9, 3.664569150823515*^9, 3.664569220654002*^9, 
   3.664569451106263*^9, 3.6645694921298237`*^9, 3.66457071996033*^9, 
   3.664570830852705*^9, 3.664570996961721*^9, 3.664571221929614*^9, {
   3.66457136324407*^9, 3.6645713877201567`*^9}, 3.664571601932873*^9, 
   3.6645717688417997`*^9, 3.664572342285297*^9, 3.66457248110054*^9, 
   3.664572603704022*^9, 3.664572880159719*^9, 3.664573802308024*^9, 
   3.6645739526763153`*^9, 3.664574608807506*^9, 3.664574643567734*^9, 
   3.6645763001308203`*^9, 3.6645763602914762`*^9, 3.664576476245989*^9, 
   3.664577269202663*^9, 3.6645776963892927`*^9, 3.66458398648671*^9, 
   3.6645840189448957`*^9, 3.664588449479465*^9, 3.664737811279882*^9, 
   3.664737937164132*^9, 3.66474625331425*^9, 3.6647510655617437`*^9, 
   3.66475189092907*^9, 3.6647531499005938`*^9, 3.66481600443687*^9, 
   3.664831128732457*^9, 3.6648311859872503`*^9, 3.664831299978895*^9, 
   3.664831410216626*^9, 3.664831513848116*^9, 3.6648320876080227`*^9, 
   3.6648326361008253`*^9, 3.6648331693092623`*^9, 3.664922442470005*^9, 
   3.664922612250839*^9, 3.665323989084774*^9, 3.674296346412445*^9, 
   3.685294574830844*^9, 3.6852974488513308`*^9, 3.685297751619396*^9, 
   3.685387640184042*^9, 3.6853897008929577`*^9, 3.685448867932364*^9, 
   3.68544893852733*^9, 3.685455339259346*^9, 3.685456261623508*^9, 
   3.685456598971829*^9, 3.685458032497385*^9, 3.685463872341703*^9, 
   3.685464096405323*^9, 3.6854665829678373`*^9, 3.685473436113929*^9, 
   3.6854740752955236`*^9, 3.685475550025868*^9, 3.685476016184987*^9, 
   3.685651462770255*^9, 3.68565182102547*^9, 3.6856548222546787`*^9, 
   3.68565491398388*^9, 3.685748778081716*^9, 3.685748936278139*^9, 
   3.68574942193789*^9, 3.6857499812811937`*^9, 3.685750231789761*^9, 
   3.6857504280290947`*^9, 3.6857510836876907`*^9, 3.68579989833436*^9, 
   3.685800687098791*^9, 3.685800899319519*^9, 3.685801648429685*^9, 
   3.685802060678001*^9, 3.685802698893914*^9, 3.685994195597486*^9, 
   3.688818264333631*^9, 3.688819321412867*^9, 3.6888194099866037`*^9, 
   3.688841424445505*^9, 3.689430553380121*^9, 3.6894356416822147`*^9, 
   3.68943581059135*^9, 3.690040874820653*^9, {3.690041091213831*^9, 
   3.690041114491365*^9}, 3.690041721551244*^9, 3.6900444957029133`*^9, 
   3.690058128129628*^9, 3.69021499970686*^9, 3.690215323079674*^9, 
   3.690220701071474*^9, 3.690222029692457*^9, 3.690224095183281*^9, 
   3.6902279782158546`*^9, 3.690228020690681*^9, 3.690228182518939*^9, 
   3.690230917717986*^9, 3.690231087992866*^9, 3.690231157286992*^9, {
   3.690232394545664*^9, 3.6902324216853647`*^9}, 3.690234358516878*^9, 
   3.690237670102178*^9, 3.6906709639999647`*^9, 3.692630947364174*^9, 
   3.692631847453356*^9, 3.692645553496964*^9, {3.6926460917882853`*^9, 
   3.6926461206825953`*^9}, 3.692646570951572*^9, 3.6926473477297287`*^9, 
   3.692647485258247*^9, 3.6926477042967577`*^9, 3.692647770271837*^9, 
   3.692650610187874*^9, 3.6926507563356256`*^9, 3.6926525390648413`*^9, 
   3.693256810300918*^9, 3.693263415696332*^9, 3.732993201313221*^9, 
   3.7329944271750307`*^9, 3.732997489174672*^9, 3.732998251227219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FpOut", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"cauchy", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FpOut", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"cauchy", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FpOut", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", " ", 
       RowBox[{"cauchy", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3", ",", "3"}], "]"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FpOut", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", " ", 
       RowBox[{"cauchy", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
   "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"NumberForm", "[", 
    RowBox[{
     RowBox[{"MatrixForm", "[", 
      RowBox[{"cauchy", "[", 
       RowBox[{"[", 
        RowBox[{"11", ",", "All", ",", "All"}], "]"}], "]"}], "]"}], ",", 
     "10"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.656340007547523*^9, 3.6563400620346622`*^9}, {
  3.65634014739161*^9, 3.6563402424878197`*^9}, {3.656340285543935*^9, 
  3.6563403039263287`*^9}, {3.656340336543592*^9, 3.656340341442954*^9}, {
  3.65687904131918*^9, 3.6568790455815353`*^9}, {3.6573003474056673`*^9, 
  3.657300435943565*^9}, {3.657920668065053*^9, 3.657920698037821*^9}, {
  3.6932567765609293`*^9, 3.69325678809671*^9}, {3.6932568648294992`*^9, 
  3.693256882974819*^9}, {3.6932633783504047`*^9, 3.693263395067573*^9}, {
  3.693263682845179*^9, 3.693263700250671*^9}, {3.69326373786014*^9, 
  3.693263757897687*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {1., 129.44911356483402`}, {1.000000000336157, 
      259.09230859204064`}, {1.0000011250988525`, 388.7829563550865}, {
      1.0000627363311982`, 510.7376893920737}, {1.0002127709716138`, 
      621.1898597343976}, {1.000389629223121, 728.150170736078}, {
      1.0005738857185231`, 834.1563026593857}, {1.0007618313047395`, 
      939.6918101889374}, {1.000952754606884, 1044.8472570634217`}, {
      1.0011464788266353`, 1149.6430275492005`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {1., 64.96917843161266}, {1.000000000336157, 
      129.90595606854615`}, {1.0000011250988525`, 194.95487344003226`}, {
      1.0000627363311982`, 267.7449777460369}, {1.0002127709716138`, 
      351.87420931484326`}, {1.000389629223121, 439.43772722246064`}, {
      1.0005738857185231`, 527.9422688281688}, {1.0007618313047395`, 
      616.9125228836662}, {1.000952754606884, 706.2585035946692}, {
      1.0011464788266353`, 795.9590155055055}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {1., 45.651090079956596`}, {1.000000000336157, 
      91.2793830658956}, {1.0000011250988525`, 136.88465756652337`}, {
      1.0000627363311982`, 182.44929238640358`}, {1.0002127709716138`, 
      227.95407980262553`}, {1.000389629223121, 273.4112076025791}, {
      1.0005738857185231`, 318.82581813276977`}, {1.0007618313047395`, 
      364.19891576728384`}, {1.000952754606884, 409.5306290515479}, {
      1.0011464788266353`, 454.82092816810047`}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {1., 3.865549479166392}, {1.000000000336157, 
      7.733031208407254}, {1.0000011250988525`, 11.602236442943504`}, {
      1.0000627363311982`, 15.458236198648654`}, {1.0002127709716138`, 
      19.280930676137775`}, {1.000389629223121, 23.07655636452725}, {
      1.0005738857185231`, 26.84845244984731}, {1.0007618313047395`, 
      30.597003121267623`}, {1.000952754606884, 34.32183644220744}, {
      1.0011464788266353`, 38.0224215056822}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9999820862683338, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 1.0011464788266353`}, {0, 1149.6430275492005`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656340305225871*^9, 3.656340342377722*^9, 3.656341273685405*^9, 
   3.656341476983103*^9, 3.656878812472476*^9, 3.656879046855364*^9, 
   3.656879344615563*^9, 3.656879410158461*^9, 3.656939748718296*^9, 
   3.656939899314266*^9, 3.656941343601273*^9, 3.6569658464634333`*^9, 
   3.656967675572236*^9, 3.656967935210265*^9, 3.656967969127692*^9, 
   3.657047553693359*^9, 3.65704767029198*^9, 3.657047742091083*^9, 
   3.657048648325906*^9, 3.6572813513409367`*^9, 3.657290436584968*^9, 
   3.657300461469962*^9, 3.657302364972831*^9, 3.6573024684932756`*^9, 
   3.657307683009617*^9, 3.6573608624136963`*^9, 3.6573608950045023`*^9, 
   3.6573623025328074`*^9, 3.657364308147709*^9, 3.6573644084796667`*^9, 
   3.657367049572695*^9, 3.657387417564251*^9, 3.657388421553996*^9, 
   3.657417523601186*^9, 3.657447249818693*^9, 3.657447718949671*^9, {
   3.657447852091998*^9, 3.6574478734775333`*^9}, 3.657448096475809*^9, 
   3.657448484677123*^9, 3.6574485229849567`*^9, 3.657449706366593*^9, 
   3.6574498373819838`*^9, 3.657449950059887*^9, 3.657450729851818*^9, 
   3.657508179243474*^9, 3.65789810854212*^9, 3.657898791279201*^9, 
   3.657899354306225*^9, 3.657899419695405*^9, 3.657900885081571*^9, {
   3.65790310969003*^9, 3.6579031396222887`*^9}, 3.657903434288845*^9, 
   3.6579203117174892`*^9, 3.657920699141135*^9, 3.657930623795638*^9, 
   3.6579354660052547`*^9, 3.657935508557151*^9, 3.657936802782057*^9, 
   3.6579396713761683`*^9, 3.657957798323793*^9, 3.65797756921425*^9, 
   3.657977681767344*^9, 3.6645617001582737`*^9, 3.664566224097261*^9, 
   3.66456887413715*^9, 3.664568977027185*^9, 3.6645690201081467`*^9, 
   3.664569150863945*^9, 3.664569220693201*^9, 3.664569451143837*^9, 
   3.664569492167308*^9, 3.6645707199934464`*^9, 3.664570830966126*^9, 
   3.664570997016204*^9, 3.664571221988256*^9, 3.664571601972403*^9, 
   3.66457176888875*^9, 3.664572342342575*^9, 3.664572481155383*^9, 
   3.664572603771467*^9, 3.664572880226779*^9, 3.6645738023765383`*^9, 
   3.664573952742927*^9, 3.6645746088764343`*^9, 3.664574643605275*^9, 
   3.66457636038377*^9, 3.66457647634647*^9, 3.6645772692982283`*^9, 
   3.664577696501008*^9, 3.6645839865758047`*^9, 3.664584019033543*^9, 
   3.664588449563218*^9, 3.664737811378956*^9, 3.664737940319654*^9, 
   3.664746253450612*^9, 3.664751065654148*^9, 3.6647518910236187`*^9, 
   3.6647531499851427`*^9, 3.664816004548843*^9, 3.664831129117071*^9, 
   3.664831186355528*^9, 3.6648313003596354`*^9, 3.664831410348793*^9, 
   3.6648315139800577`*^9, 3.664832087708413*^9, 3.664832636233803*^9, 
   3.664833169398891*^9, 3.664922442542891*^9, 3.664922612323967*^9, 
   3.665323989173674*^9, 3.674296346478359*^9, 3.685294579681527*^9, 
   3.685297449038114*^9, 3.6852977517951193`*^9, 3.685387640640563*^9, 
   3.685389701311285*^9, 3.685448868182625*^9, 3.685448938911021*^9, 
   3.685455339678795*^9, 3.685456261992508*^9, 3.68545659926849*^9, 
   3.685458032699456*^9, 3.685463872530325*^9, 3.685464096587021*^9, 
   3.685466583182776*^9, 3.685473442376466*^9, 3.6854738605263987`*^9, 
   3.685475559358214*^9, 3.685651462820744*^9, 3.685651821081243*^9, 
   3.68565482230217*^9, 3.6856549140185947`*^9, 3.6857487781426086`*^9, 
   3.685748936478588*^9, 3.685749421977642*^9, 3.685749981319503*^9, 
   3.685750231842716*^9, 3.685750428076532*^9, 3.685751083736218*^9, 
   3.685799898367519*^9, 3.6858006871319313`*^9, 3.6858008993694973`*^9, 
   3.6858016484725857`*^9, 3.685802060720482*^9, 3.685802698937888*^9, 
   3.6859941957181177`*^9, 3.6888182646151*^9, 3.6888193214569674`*^9, 
   3.6888194100232153`*^9, 3.688841424479033*^9, 3.6894305534110603`*^9, 
   3.689435641712384*^9, 3.689435810658436*^9, 3.690040874854911*^9, {
   3.6900410912821903`*^9, 3.6900411145262613`*^9}, 3.6900417215881567`*^9, 
   3.69004449573531*^9, 3.6900581281990137`*^9, 3.690214999745685*^9, 
   3.6902153231535473`*^9, 3.690220701118734*^9, 3.690222029729841*^9, 
   3.690224095224648*^9, 3.6902279782570467`*^9, 3.69022802072836*^9, 
   3.690228182556883*^9, 3.690230917761326*^9, 3.6902310880311937`*^9, 
   3.6902311573261213`*^9, {3.690232394585329*^9, 3.690232421721525*^9}, 
   3.690234358561256*^9, 3.6902376701483183`*^9, 3.690670964046247*^9, 
   3.692630947403727*^9, 3.692631847482163*^9, 3.69264555353537*^9, {
   3.692646091855784*^9, 3.69264612071447*^9}, 3.6926465709906282`*^9, 
   3.6926473477718143`*^9, 3.692647485289497*^9, 3.692647704334814*^9, 
   3.692647770306074*^9, 3.69265061022334*^9, 3.692650756367449*^9, 
   3.69265253909592*^9, {3.69325678927341*^9, 3.693256810431384*^9}, {
   3.6932568657767344`*^9, 3.693256883429562*^9}, 3.693263381763013*^9, 
   3.693263415732319*^9, {3.693263683354361*^9, 3.693263700812726*^9}, {
   3.6932637464598017`*^9, 3.693263758370373*^9}, 3.732993201357554*^9, 
   3.732994427208479*^9, 3.732997489210658*^9, 3.732998251264217*^9}],

Cell[BoxData[
 TagBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       InterpretationBox["\<\"1149.643028\"\>",
        1149.6430275492005`,
        AutoDelete->True], 
       InterpretationBox["\<\"38.02242151\"\>",
        38.0224215056822,
        AutoDelete->True], 
       InterpretationBox["\<\"-161.0310713\"\>",
        -161.03107129831412`,
        AutoDelete->True]},
      {
       InterpretationBox["\<\"38.02242151\"\>",
        38.022421505682196`,
        AutoDelete->True], 
       InterpretationBox["\<\"795.9590155\"\>",
        795.9590155055055,
        AutoDelete->True], 
       InterpretationBox["\<\"6.031124012\"\>",
        6.031124011611069,
        AutoDelete->True]},
      {
       InterpretationBox["\<\"-161.0310713\"\>",
        -161.03107129831412`,
        AutoDelete->True], 
       InterpretationBox["\<\"6.031124012\"\>",
        6.031124011611069,
        AutoDelete->True], 
       InterpretationBox["\<\"454.8209282\"\>",
        454.82092816810047`,
        AutoDelete->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]],
  NumberForm[#, 10]& ]], "Print",
 CellChangeTimes->{
  3.6932634157397346`*^9, {3.6932636833624897`*^9, 3.693263700824224*^9}, {
   3.693263746469645*^9, 3.693263758379929*^9}, 3.732993201368737*^9, 
   3.7329944272200813`*^9, 3.732997489221497*^9, 3.732998251278645*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6932598270217133`*^9, 3.693259830119198*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking the hardening residual via an analytical solution", "Section",
 CellChangeTimes->{{3.685655464912163*^9, 3.685655487068001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"analyticalHard", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "/", "Rd"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "Rd"}], "*", 
         RowBox[{"Abs", "[", "slipsNewton", "]"}]}], "]"}]}], ")"}]}], "/.", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"H", " ", "\[Rule]", " ", "355"}], ",", " ", 
      RowBox[{"Rd", " ", "\[Rule]", " ", "2.9"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"slipsNewton", ",", "hardNewton"}], "}"}], "]"}], ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"slipsNewton", ",", "analyticalHard"}], "}"}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.685473874794361*^9, 3.68547389728304*^9}, {
   3.685473960644786*^9, 3.685473969507429*^9}, {3.685474003320571*^9, 
   3.685474023896546*^9}, {3.685474291960905*^9, 3.685474306272944*^9}, {
   3.685475227741157*^9, 3.685475333568104*^9}, {3.685475377239127*^9, 
   3.685475407848484*^9}, {3.685475449263133*^9, 3.685475484163206*^9}, 
   3.685475564644588*^9, {3.6906546510246553`*^9, 3.690654669589344*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 90.}, {0., 90.}, {6.723140194214999*^-10, 
      90.00001344627856}, {2.2501977048449567`*^-6, 90.04498636374352}, {
      0.00012547266239606956`, 92.46031466268443}, {0.00042554194322692895`, 
      98.07507296456208}, {0.000779258446241291, 104.34222404769324`}, {
      0.0011477714370455373`, 110.51070111395507`}, {0.001523662609478403, 
      116.4483478724775}, {0.0019055092137673464`, 122.13543109833986`}, {
      0.0022929576532699763`, 127.57182592433742`}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0., 0.}, {6.723140194214999*^-10, 
      2.386714718581069*^-7}, {2.2501977048449567`*^-6, 
      0.0007988175788398166}, {0.00012547266239606956`, 
      0.04453469222395144}, {0.00042554194322692895`, 0.15097421418756835`}, {
      0.000779258446241291, 0.27632440503499256`}, {0.0011477714370455373`, 
      0.40678149092902366`}, {0.001523662609478403, 0.539706967828055}, {
      0.0019055092137673464`, 0.6745901694716235}, {0.0022929576532699763`, 
      0.8112995778996973}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.0022929576532699763`}, {0, 127.57182592433742`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.685475485153417*^9, 3.685475565437084*^9, 3.685651462870447*^9, 
   3.685651821134494*^9, 3.685654822358471*^9, 3.68565491405189*^9, 
   3.6857487781925097`*^9, 3.685748936959572*^9, 3.685749422047018*^9, 
   3.685749981355204*^9, 3.685750231894301*^9, 3.685750428126442*^9, 
   3.685751083792345*^9, 3.685799898400921*^9, 3.6858006871618567`*^9, 
   3.685800899419209*^9, 3.6858016485116262`*^9, 3.6858020607616463`*^9, 
   3.685802698978094*^9, 3.685994195860626*^9, 3.688818264650296*^9, 
   3.688819321497169*^9, 3.688819410056365*^9, 3.6888414245126953`*^9, 
   3.6894305534380293`*^9, 3.689435641746364*^9, 3.6894358107238283`*^9, 
   3.690040874885429*^9, {3.690041091347516*^9, 3.69004111456003*^9}, 
   3.69004172162247*^9, 3.690044495770776*^9, 3.690058128229979*^9, 
   3.690214999780054*^9, 3.690215323218897*^9, 3.690220701172477*^9, 
   3.690222029765526*^9, 3.6902240952655888`*^9, 3.690227978297183*^9, 
   3.6902280207647467`*^9, 3.690228182593783*^9, 3.690230917802413*^9, 
   3.69023108807574*^9, 3.690231157363744*^9, {3.690232394624971*^9, 
   3.690232421754836*^9}, 3.690234358600419*^9, 3.690237670188493*^9, 
   3.690654680237287*^9, 3.690670964086719*^9, 3.692630947438087*^9, 
   3.692645553569332*^9, {3.692646091890533*^9, 3.692646120749308*^9}, 
   3.692646571025758*^9, 3.69264734780332*^9, 3.692647485324995*^9, 
   3.6926477043758087`*^9, 3.6926477703382587`*^9, 3.692650610256863*^9, 
   3.692650756402218*^9, 3.692652539125279*^9, 3.693256810500499*^9, 
   3.693263415799921*^9, 3.732993201474266*^9, 3.7329944273443117`*^9, 
   3.73299748934508*^9, 3.7329982514042673`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"iterPlot", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"iterationResids", "[", 
           RowBox[{"[", "11", "]"}], "]"}], ",", 
          RowBox[{"iterationsNewton", "[", 
           RowBox[{"[", "11", "]"}], "]"}]}], "]"}], ")"}], 
       "\[IndentingNewLine]", "iterLog10Plot"}], " ", "=", " ", 
      "iterPlot"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"iterLog10Plot", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{"Log10", "[", 
        RowBox[{"iterPlot", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"iterationsNewton", "[", 
         RowBox[{"[", "11", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"iterPlot", ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.664848258418078*^9, 3.6648482683497877`*^9}, {
  3.664848444628262*^9, 3.6648485627828217`*^9}, {3.66484876351584*^9, 
  3.6648487816898403`*^9}, {3.664848903833053*^9, 3.664848910887115*^9}, {
  3.6648491852899*^9, 3.664849188926577*^9}, {3.664850142317389*^9, 
  3.664850157771532*^9}, {3.664851295231248*^9, 3.6648512989859858`*^9}, {
  3.6648916749815207`*^9, 3.6648916921484823`*^9}, {3.685474886471105*^9, 
  3.685474936322165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"initialResidualsNewton", "\[IndentingNewLine]", \
"residualsNewton"}], "Input",
 CellChangeTimes->{{3.6854761643873463`*^9, 3.6854761677881203`*^9}, {
  3.6854763724800873`*^9, 3.685476378360032*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.121729984959845`*^-16"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.723250731251783`*^-10"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.340701525145637`*^-6"}], ",", 
     "1.8194757935810924`*^-12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0007222571377270869`"}], ",", 
     "0.000017585093862293455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.002875517880077448`"}], ",", "0.048222827272423885`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00034690752789966965`"}], ",", "0.26882963592937603`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00005678115467130343`"}], ",", "0.3527146545851094`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.000015005976061891314`"}], ",", "0.3614293480133126`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.887968479283302`*^-6"}], ",", "0.3547492284701734`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.48409369810349`*^-6"}], ",", "0.3450693631668953`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.685476169350375*^9, 3.685476380621648*^9, 3.685651462921875*^9, 
   3.685651821175335*^9, 3.685654822405015*^9, 3.685654914083549*^9, 
   3.685748778249415*^9, 3.685748937023615*^9, 3.685749422087181*^9, 
   3.685749981398675*^9, 3.685750231919497*^9, 3.685750428181438*^9, 
   3.685751083855434*^9, 3.685799898419557*^9, 3.6858006871787024`*^9, 
   3.685800899465672*^9, 3.685801648526935*^9, 3.685802060792445*^9, 
   3.6858026989997797`*^9, 3.685994195888008*^9, 3.688818264673811*^9, 
   3.688819321536706*^9, 3.688819410088933*^9, 3.688841424545903*^9, 
   3.689430553456263*^9, 3.689435641779213*^9, 3.689435810760652*^9, 
   3.690040874919141*^9, {3.69004109141293*^9, 3.690041114602108*^9}, 
   3.6900417216575613`*^9, 3.690044495802025*^9, 3.690058128263754*^9, 
   3.6902149998140583`*^9, 3.6902153232664127`*^9, 3.6902207012190237`*^9, 
   3.690222029792297*^9, 3.6902240953129396`*^9, 3.690227978373185*^9, 
   3.6902280208043203`*^9, 3.690228182623934*^9, 3.6902309178410683`*^9, 
   3.690231088119556*^9, 3.690231157415444*^9, {3.690232394662806*^9, 
   3.690232421782399*^9}, 3.690234358676262*^9, 3.6902376702421503`*^9, 
   3.6906709641194353`*^9, 3.6926309474743013`*^9, 3.692645553613505*^9, {
   3.692646091919385*^9, 3.692646120782186*^9}, 3.692646571059579*^9, 
   3.6926473478482733`*^9, 3.692647485358082*^9, 3.692647704417153*^9, 
   3.6926477703866987`*^9, 3.6926506102981787`*^9, 3.6926507564367027`*^9, 
   3.692652539146035*^9, 3.693256810539366*^9, 3.693263415832232*^9, 
   3.732993201513934*^9, 3.732994427384503*^9, 3.732997489383833*^9, 
   3.732998251449348*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.121729984959845`*^-16"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5045381366573882`*^-21"}], ",", 
     RowBox[{"-", "5.4025726492316906`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.710505431213761`*^-19", ",", "5.599687380453133`*^-15"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.391018798566293`*^-18"}], ",", 
     RowBox[{"-", "2.220446049250313`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.567378155713065`*^-17"}], ",", 
     RowBox[{"-", "5.329070518200751`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5298092653770468`*^-16"}], ",", 
     RowBox[{"-", "5.329070518200751`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.9024092157436954`*^-16"}], ",", 
     RowBox[{"-", "5.329070518200751`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.63659059063426`*^-16"}], ",", 
     "1.7763568394002505`*^-15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1329912702473521`*^-17", ",", 
     RowBox[{"-", "5.329070518200751`*^-15"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.693145607721384`*^-16"}], ",", 
     RowBox[{"-", "1.7763568394002505`*^-15"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.685476169350375*^9, 3.685476380621648*^9, 3.685651462921875*^9, 
   3.685651821175335*^9, 3.685654822405015*^9, 3.685654914083549*^9, 
   3.685748778249415*^9, 3.685748937023615*^9, 3.685749422087181*^9, 
   3.685749981398675*^9, 3.685750231919497*^9, 3.685750428181438*^9, 
   3.685751083855434*^9, 3.685799898419557*^9, 3.6858006871787024`*^9, 
   3.685800899465672*^9, 3.685801648526935*^9, 3.685802060792445*^9, 
   3.6858026989997797`*^9, 3.685994195888008*^9, 3.688818264673811*^9, 
   3.688819321536706*^9, 3.688819410088933*^9, 3.688841424545903*^9, 
   3.689430553456263*^9, 3.689435641779213*^9, 3.689435810760652*^9, 
   3.690040874919141*^9, {3.69004109141293*^9, 3.690041114602108*^9}, 
   3.6900417216575613`*^9, 3.690044495802025*^9, 3.690058128263754*^9, 
   3.6902149998140583`*^9, 3.6902153232664127`*^9, 3.6902207012190237`*^9, 
   3.690222029792297*^9, 3.6902240953129396`*^9, 3.690227978373185*^9, 
   3.6902280208043203`*^9, 3.690228182623934*^9, 3.6902309178410683`*^9, 
   3.690231088119556*^9, 3.690231157415444*^9, {3.690232394662806*^9, 
   3.690232421782399*^9}, 3.690234358676262*^9, 3.6902376702421503`*^9, 
   3.6906709641194353`*^9, 3.6926309474743013`*^9, 3.692645553613505*^9, {
   3.692646091919385*^9, 3.692646120782186*^9}, 3.692646571059579*^9, 
   3.6926473478482733`*^9, 3.692647485358082*^9, 3.692647704417153*^9, 
   3.6926477703866987`*^9, 3.6926506102981787`*^9, 3.6926507564367027`*^9, 
   3.692652539146035*^9, 3.693256810539366*^9, 3.693263415832232*^9, 
   3.732993201513934*^9, 3.732994427384503*^9, 3.732997489383833*^9, 
   3.732998251460075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"iterationsNewton", "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "slipsNewton", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "hardNewton", "]"}]}], "Input",
 CellChangeTimes->{{3.685651505399189*^9, 3.685651507236672*^9}, {
  3.685651537529127*^9, 3.6856515432686577`*^9}, {3.694980079645809*^9, 
  3.694980109620453*^9}, {3.694980483014468*^9, 3.694980484149735*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "3", ",", "4", ",", "7", ",", "8", ",", "6", ",", "5", 
   ",", "4", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.685651507954001*^9, 3.6856515442962112`*^9, 3.685651821227272*^9, 
   3.685654822455872*^9, 3.685654914110673*^9, 3.68574877862996*^9, 
   3.685748937075375*^9, 3.685749422135151*^9, 3.685749981437517*^9, 
   3.6857502319451523`*^9, 3.685750428230126*^9, 3.6857510839046383`*^9, 
   3.685799898453796*^9, 3.685800687209635*^9, 3.685800899517569*^9, 
   3.685801648554454*^9, 3.6858020608168383`*^9, 3.685802699019444*^9, 
   3.685994195913645*^9, 3.6888182647101297`*^9, 3.688819321582403*^9, 
   3.6888194101104107`*^9, 3.688841424576975*^9, 3.689430553516222*^9, 
   3.689435641807625*^9, 3.68943581082281*^9, 3.690040874986781*^9, {
   3.690041091481436*^9, 3.6900411146755247`*^9}, 3.6900417217304277`*^9, 
   3.690044495838223*^9, 3.690058128299849*^9, 3.690214999872682*^9, 
   3.6902153233363457`*^9, 3.690220701278089*^9, 3.690222029830381*^9, 
   3.690224095383412*^9, 3.690227978456636*^9, 3.690228020875773*^9, 
   3.690228182666308*^9, 3.690230917901204*^9, 3.69023108818847*^9, 
   3.690231157487226*^9, {3.690232394719347*^9, 3.6902324218475733`*^9}, 
   3.690234358759862*^9, 3.6902376703105927`*^9, 3.6906709641566133`*^9, 
   3.692630947561706*^9, 3.6926455536962337`*^9, {3.692646091955048*^9, 
   3.692646120848187*^9}, 3.692646571134089*^9, 3.692647347929887*^9, 
   3.692647485396439*^9, 3.692647704505941*^9, 3.692647770468547*^9, 
   3.6926506103595457`*^9, 3.692650756471689*^9, 3.6926525391789207`*^9, 
   3.6932568106147327`*^9, 3.693263415854817*^9, 3.694980486368305*^9, 
   3.732993201598365*^9, 3.732994427476852*^9, 3.732997489485652*^9, 
   3.73299825156634*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "6.723140194214999`*^-10", ",", 
   "2.2501977048449567`*^-6", ",", "0.00012547266239606956`", ",", 
   "0.00042554194322692895`", ",", "0.000779258446241291`", ",", 
   "0.0011477714370455373`", ",", "0.001523662609478403`", ",", 
   "0.0019055092137673464`", ",", "0.0022929576532699763`"}], "}"}]], "Print",\

 CellChangeTimes->{3.6949804863778353`*^9, 3.732993201609198*^9, 
  3.7329944274893627`*^9, 3.732997489494803*^9, 3.732998251576763*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "90", ",", "90.`", ",", "90.00001344627856`", ",", "90.04498636374352`", 
   ",", "92.46031466268443`", ",", "98.07507296456208`", ",", 
   "104.34222404769324`", ",", "110.51070111395507`", ",", 
   "116.4483478724775`", ",", "122.13543109833986`", ",", 
   "127.57182592433742`"}], "}"}]], "Print",
 CellChangeTimes->{3.6949804863778353`*^9, 3.732993201609198*^9, 
  3.7329944274893627`*^9, 3.732997489494803*^9, 3.7329982515833817`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plotting the condition number per iteration for each time step\
\>", "Section",
 CellChangeTimes->{{3.685655356144158*^9, 3.6856553738823433`*^9}, 
   3.6856554119200163`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "plot", " ", "shows", " ", "a", " ", "stable", " ", "scaled",
      " ", "condition", " ", "number"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "a", " ", "linearly", " ", "decreasing", " ", "un"}],
      "-", 
     RowBox[{"scaled", " ", "condition", " ", 
      RowBox[{"number", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cNPlots", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cNPlots", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Log10", "[", 
         RowBox[{"conditionNumber", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", "Red", "}"}]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"numberSteps", "-", "1"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cNScaledPlots", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"Null", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"numberSteps", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cNScaledPlots", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Log10", "[", 
         RowBox[{"scaledconditionNumber", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"numberSteps", "-", "1"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68565184930303*^9, 3.685651927080868*^9}, {
   3.6856519609894133`*^9, 3.6856520586263742`*^9}, {3.685652125514662*^9, 
   3.685652225445148*^9}, {3.68565239977954*^9, 3.685652427475566*^9}, 
   3.685654925407008*^9, {3.685655073724573*^9, 3.685655139624262*^9}, {
   3.685655173233917*^9, 3.6856551851407833`*^9}, {3.685655238795972*^9, 
   3.685655242272337*^9}, {3.688849537534771*^9, 3.688849612997541*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cNPlots", ",", "cNScaledPlots"}], "}"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], 
  "]"}], "\[IndentingNewLine]", "\[AliasDelimiter]"}], "Input",
 CellChangeTimes->{{3.685652254676836*^9, 3.685652356202235*^9}, {
   3.685655191523*^9, 3.685655199379725*^9}, {3.685655254425476*^9, 
   3.685655259958804*^9}, {3.689433812198585*^9, 3.6894338222685204`*^9}, {
   3.689435652207625*^9, 3.689435673277731*^9}, {3.689435818972241*^9, 
   3.689435833572727*^9}, 3.6894358700800543`*^9, 3.689437096013782*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 5.842653088936169*^-6}, {2., 
       0.}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.}, {2., 0.}, {3., 
       0.}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.7235391521279461}, {2., 0.36235374085502564`}, {
       3., 0.}, {4., -4.821637332766436*^-17}, {
       5., -4.821637332766436*^-17}, {
       6., -4.821637332766436*^-17}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 1.2633862994658058`}, {2., 0.8817976783280846}, {
       3., 0.5713507565525741}, {4., 0.39410183152982275`}, {5., 
       0.34976548001533664`}, {6., 0.3476578418777065}, {7., 
       0.3476534808792193}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.6290299467316153}, {2., 0.4464614730402627}, {3.,
        0.3986279878601464}, {4., 0.3960688968386548}, {5., 
       0.39606217032105034`}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.4414667948151934}, {2., 0.40222937036380146`}, {
       3., 0.40058169886999134`}, {4., 
       0.40057888568538613`}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.40688549438388205`}, {2., 
       0.39946285751141253`}, {3., 
       0.3994141089760197}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.40030688216093063`}, {2., 0.3984377887013859}, {
       3., 
       0.3984344938405188}}]}, {}}, {}, {}, {{}, {}}}, {{}, {}, {}, {}, {{}, \
{}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 5.842653088936169*^-6}, {2., 
       0.}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.}, {2., 0.}, {3., 
       0.}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.7235391521279461}, {2., 0.36235374085502564`}, {
       3., 0.}, {4., -4.821637332766436*^-17}, {
       5., -4.821637332766436*^-17}, {
       6., -4.821637332766436*^-17}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 1.2633862994658058`}, {2., 0.8817976783280846}, {
       3., 0.5713507565525741}, {4., 0.39410183152982275`}, {5., 
       0.34976548001533664`}, {6., 0.3476578418777065}, {7., 
       0.3476534808792193}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.6290299467316153}, {2., 0.4464614730402627}, {3.,
        0.3986279878601464}, {4., 0.3960688968386548}, {5., 
       0.39606217032105034`}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.4414667948151934}, {2., 0.40222937036380146`}, {
       3., 0.40058169886999134`}, {4., 
       0.40057888568538613`}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.40688549438388205`}, {2., 
       0.39946285751141253`}, {3., 
       0.3994141089760197}}]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1., 0.40030688216093063`}, {2., 0.3984377887013859}, {
       3., 0.3984344938405188}}]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.68565231799921*^9, 3.685652357548024*^9, 3.6856524368624067`*^9, 
   3.6856548226894913`*^9, 3.685654914339862*^9, 3.6856550883860064`*^9, 
   3.6856552000168467`*^9, {3.6856552444317513`*^9, 3.685655260381318*^9}, 
   3.685748779238813*^9, 3.685748945352003*^9, 3.685749422221344*^9, 
   3.685749981519919*^9, 3.68575023223483*^9, 3.685750428502132*^9, 
   3.6857510841742992`*^9, 3.685799898734406*^9, 3.6858006874944572`*^9, 
   3.6858008998439817`*^9, 3.6858016488310823`*^9, 3.6858020611007957`*^9, 
   3.6858026993066*^9, 3.6859941960304337`*^9, 3.688818264828697*^9, 
   3.6888193218782988`*^9, 3.6888194103734617`*^9, 3.6888414248665037`*^9, 
   3.688849477696623*^9, 3.689430553807941*^9, 3.6894338160419703`*^9, {
   3.689435642095058*^9, 3.689435655192786*^9}, {3.6894358112126093`*^9, 
   3.689435822435258*^9}, 3.689437098522337*^9, 3.690040875275038*^9, {
   3.690041091776903*^9, 3.6900411149689827`*^9}, 3.6900417220366383`*^9, 
   3.690044496145294*^9, 3.690058128608891*^9, 3.690215000624161*^9, 
   3.690215323899433*^9, 3.690220701826902*^9, 3.690222030361734*^9, 
   3.690224095987101*^9, 3.6902279790238323`*^9, 3.6902280214780273`*^9, 
   3.690228183251698*^9, 3.690230918496675*^9, 3.690231088790777*^9, 
   3.690231158091332*^9, {3.69023239516383*^9, 3.690232422292387*^9}, 
   3.6902343592349358`*^9, 3.6902376707531776`*^9, 3.690670964576899*^9, 
   3.692630947992766*^9, 3.692645554133069*^9, {3.692646092387347*^9, 
   3.692646121267565*^9}, 3.692646571572258*^9, 3.6926473485854692`*^9, 
   3.692647485827273*^9, 3.692647704940423*^9, 3.692647770888156*^9, 
   3.6926506108245907`*^9, 3.692650756902664*^9, 3.692652539606182*^9, 
   3.693256811134913*^9, 3.693263416256061*^9, 3.732993202158021*^9, 
   3.7329944279966784`*^9, 3.732997490026828*^9, 3.732998252057934*^9}],

Cell[BoxData["\[AliasDelimiter]"], "Output",
 CellChangeTimes->{
  3.68565231799921*^9, 3.685652357548024*^9, 3.6856524368624067`*^9, 
   3.6856548226894913`*^9, 3.685654914339862*^9, 3.6856550883860064`*^9, 
   3.6856552000168467`*^9, {3.6856552444317513`*^9, 3.685655260381318*^9}, 
   3.685748779238813*^9, 3.685748945352003*^9, 3.685749422221344*^9, 
   3.685749981519919*^9, 3.68575023223483*^9, 3.685750428502132*^9, 
   3.6857510841742992`*^9, 3.685799898734406*^9, 3.6858006874944572`*^9, 
   3.6858008998439817`*^9, 3.6858016488310823`*^9, 3.6858020611007957`*^9, 
   3.6858026993066*^9, 3.6859941960304337`*^9, 3.688818264828697*^9, 
   3.6888193218782988`*^9, 3.6888194103734617`*^9, 3.6888414248665037`*^9, 
   3.688849477696623*^9, 3.689430553807941*^9, 3.6894338160419703`*^9, {
   3.689435642095058*^9, 3.689435655192786*^9}, {3.6894358112126093`*^9, 
   3.689435822435258*^9}, 3.689437098522337*^9, 3.690040875275038*^9, {
   3.690041091776903*^9, 3.6900411149689827`*^9}, 3.6900417220366383`*^9, 
   3.690044496145294*^9, 3.690058128608891*^9, 3.690215000624161*^9, 
   3.690215323899433*^9, 3.690220701826902*^9, 3.690222030361734*^9, 
   3.690224095987101*^9, 3.6902279790238323`*^9, 3.6902280214780273`*^9, 
   3.690228183251698*^9, 3.690230918496675*^9, 3.690231088790777*^9, 
   3.690231158091332*^9, {3.69023239516383*^9, 3.690232422292387*^9}, 
   3.6902343592349358`*^9, 3.6902376707531776`*^9, 3.690670964576899*^9, 
   3.692630947992766*^9, 3.692645554133069*^9, {3.692646092387347*^9, 
   3.692646121267565*^9}, 3.692646571572258*^9, 3.6926473485854692`*^9, 
   3.692647485827273*^9, 3.692647704940423*^9, 3.692647770888156*^9, 
   3.6926506108245907`*^9, 3.692650756902664*^9, 3.692652539606182*^9, 
   3.693256811134913*^9, 3.693263416256061*^9, 3.732993202158021*^9, 
   3.7329944279966784`*^9, 3.732997490026828*^9, 3.73299825206638*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 1551},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 299, 5, 183, "Title"],
Cell[882, 29, 10934, 190, 2073, "Text"],
Cell[CellGroupData[{
Cell[11841, 223, 126, 1, 80, "Section"],
Cell[11970, 226, 165, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[12160, 233, 5572, 155, 326, "Input"],
Cell[17735, 390, 6370, 99, 94, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24154, 495, 153, 3, 80, "Section"],
Cell[CellGroupData[{
Cell[24332, 502, 544, 9, 66, "Input"],
Cell[24879, 513, 8639, 150, 148, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33567, 669, 156, 3, 80, "Section"],
Cell[33726, 674, 1841, 45, 118, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35604, 724, 105, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[35734, 729, 1828, 38, 144, "Input"],
Cell[37565, 769, 8020, 123, 94, "Output"],
Cell[45588, 894, 981, 13, 29, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46618, 913, 167, 2, 80, "Section"],
Cell[46788, 917, 459, 9, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47284, 931, 224, 3, 80, "Section"],
Cell[47511, 936, 110, 1, 37, "Text"],
Cell[47624, 939, 1321, 29, 92, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48982, 973, 341, 4, 80, "Section"],
Cell[49326, 979, 675, 16, 39, "Input"],
Cell[50004, 997, 1928, 45, 144, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51969, 1047, 178, 2, 80, "Section"],
Cell[52150, 1051, 3225, 76, 274, "Input"],
Cell[55378, 1129, 2811, 73, 222, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58226, 1207, 186, 2, 80, "Section"],
Cell[58415, 1211, 2453, 56, 170, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60905, 1272, 227, 4, 80, "Section"],
Cell[61135, 1278, 605, 11, 109, "Text"],
Cell[61743, 1291, 8938, 152, 300, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70718, 1448, 193, 2, 80, "Section"],
Cell[70914, 1452, 743, 11, 109, "Text"],
Cell[71660, 1465, 1359, 30, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73056, 1500, 277, 3, 80, "Section"],
Cell[73336, 1505, 4681, 93, 326, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78054, 1603, 110, 1, 80, "Section"],
Cell[78167, 1606, 3681, 83, 170, "Input"],
Cell[81851, 1691, 3564, 68, 118, "Input"],
Cell[85418, 1761, 140, 3, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85595, 1769, 159, 3, 80, "Section"],
Cell[85757, 1774, 334, 8, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86128, 1787, 198, 2, 80, "Section"],
Cell[CellGroupData[{
Cell[86351, 1793, 72518, 1553, 5292, "Input"],
Cell[CellGroupData[{
Cell[158894, 3350, 325, 8, 34, "Print"],
Cell[159222, 3360, 190, 3, 29, "Print"],
Cell[159415, 3365, 327, 8, 34, "Print"],
Cell[159745, 3375, 789, 20, 51, "Print"],
Cell[160537, 3397, 368, 9, 34, "Print"],
Cell[160908, 3408, 844, 21, 51, "Print"],
Cell[161755, 3431, 367, 9, 34, "Print"],
Cell[162125, 3442, 188, 3, 29, "Print"],
Cell[162316, 3447, 347, 8, 34, "Print"],
Cell[162666, 3457, 840, 21, 51, "Print"],
Cell[163509, 3480, 348, 8, 34, "Print"],
Cell[163860, 3490, 843, 21, 51, "Print"],
Cell[164706, 3513, 346, 8, 34, "Print"],
Cell[165055, 3523, 840, 21, 51, "Print"],
Cell[165898, 3546, 325, 7, 34, "Print"],
Cell[166226, 3555, 190, 3, 29, "Print"],
Cell[166419, 3560, 345, 8, 29, "Print"],
Cell[166767, 3570, 840, 21, 47, "Print"],
Cell[167610, 3593, 342, 8, 29, "Print"],
Cell[167955, 3603, 842, 21, 47, "Print"],
Cell[168800, 3626, 342, 8, 29, "Print"],
Cell[169145, 3636, 843, 21, 47, "Print"],
Cell[169991, 3659, 341, 8, 34, "Print"],
Cell[170335, 3669, 841, 21, 47, "Print"],
Cell[171179, 3692, 347, 8, 34, "Print"],
Cell[171529, 3702, 845, 21, 47, "Print"],
Cell[172377, 3725, 345, 8, 34, "Print"],
Cell[172725, 3735, 843, 21, 47, "Print"],
Cell[173571, 3758, 367, 9, 34, "Print"],
Cell[173941, 3769, 190, 3, 29, "Print"],
Cell[174134, 3774, 341, 8, 29, "Print"],
Cell[174478, 3784, 840, 21, 47, "Print"],
Cell[175321, 3807, 343, 8, 29, "Print"],
Cell[175667, 3817, 842, 21, 47, "Print"],
Cell[176512, 3840, 343, 8, 29, "Print"],
Cell[176858, 3850, 844, 21, 47, "Print"],
Cell[177705, 3873, 345, 8, 29, "Print"],
Cell[178053, 3883, 842, 21, 47, "Print"],
Cell[178898, 3906, 345, 8, 34, "Print"],
Cell[179246, 3916, 844, 21, 47, "Print"],
Cell[180093, 3939, 347, 8, 34, "Print"],
Cell[180443, 3949, 842, 21, 47, "Print"],
Cell[181288, 3972, 347, 8, 34, "Print"],
Cell[181638, 3982, 842, 21, 47, "Print"],
Cell[182483, 4005, 365, 9, 34, "Print"],
Cell[182851, 4016, 190, 3, 29, "Print"],
Cell[183044, 4021, 342, 8, 29, "Print"],
Cell[183389, 4031, 840, 21, 47, "Print"],
Cell[184232, 4054, 346, 8, 29, "Print"],
Cell[184581, 4064, 842, 21, 47, "Print"],
Cell[185426, 4087, 344, 8, 34, "Print"],
Cell[185773, 4097, 843, 21, 47, "Print"],
Cell[186619, 4120, 343, 8, 34, "Print"],
Cell[186965, 4130, 842, 21, 47, "Print"],
Cell[187810, 4153, 345, 8, 34, "Print"],
Cell[188158, 4163, 841, 21, 47, "Print"],
Cell[189002, 4186, 365, 9, 34, "Print"],
Cell[189370, 4197, 188, 3, 29, "Print"],
Cell[189561, 4202, 341, 8, 29, "Print"],
Cell[189905, 4212, 841, 21, 47, "Print"],
Cell[190749, 4235, 364, 9, 34, "Print"],
Cell[191116, 4246, 841, 21, 47, "Print"],
Cell[191960, 4269, 344, 8, 34, "Print"],
Cell[192307, 4279, 841, 21, 47, "Print"],
Cell[193151, 4302, 347, 8, 34, "Print"],
Cell[193501, 4312, 840, 21, 47, "Print"],
Cell[194344, 4335, 366, 9, 34, "Print"],
Cell[194713, 4346, 190, 3, 29, "Print"],
Cell[194906, 4351, 342, 8, 29, "Print"],
Cell[195251, 4361, 845, 21, 47, "Print"],
Cell[196099, 4384, 365, 9, 34, "Print"],
Cell[196467, 4395, 840, 21, 47, "Print"],
Cell[197310, 4418, 347, 8, 34, "Print"],
Cell[197660, 4428, 841, 21, 47, "Print"],
Cell[198504, 4451, 344, 8, 34, "Print"],
Cell[198851, 4461, 190, 3, 29, "Print"],
Cell[199044, 4466, 340, 8, 34, "Print"],
Cell[199387, 4476, 842, 21, 47, "Print"],
Cell[200232, 4499, 363, 9, 34, "Print"],
Cell[200598, 4510, 841, 21, 47, "Print"],
Cell[201442, 4533, 366, 9, 34, "Print"],
Cell[201811, 4544, 843, 21, 47, "Print"],
Cell[202657, 4567, 346, 8, 34, "Print"],
Cell[203006, 4577, 188, 3, 29, "Print"],
Cell[203197, 4582, 339, 8, 34, "Print"],
Cell[203539, 4592, 843, 21, 47, "Print"],
Cell[204385, 4615, 345, 8, 34, "Print"],
Cell[204733, 4625, 845, 21, 47, "Print"],
Cell[205581, 4648, 364, 9, 34, "Print"],
Cell[205948, 4659, 843, 21, 47, "Print"],
Cell[206794, 4682, 366, 9, 34, "Print"],
Cell[207163, 4693, 190, 3, 29, "Print"]
}, Open  ]],
Cell[207368, 4699, 216, 4, 39, "Output"]
}, Open  ]],
Cell[207599, 4706, 145, 2, 39, "Input"],
Cell[207747, 4710, 96, 1, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207880, 4716, 123, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[208028, 4721, 5384, 131, 508, "Input"],
Cell[213415, 4854, 205157, 3364, 363, "Output"],
Cell[418575, 8220, 510, 10, 29, "Print"]
}, Open  ]],
Cell[419100, 8233, 91, 1, 39, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[419240, 8240, 252, 4, 102, "Title"],
Cell[CellGroupData[{
Cell[419517, 8248, 3403, 66, 144, "Input"],
Cell[422923, 8316, 312, 7, 29, "Message"],
Cell[423238, 8325, 310, 7, 29, "Message"],
Cell[423551, 8334, 311, 7, 29, "Message"],
Cell[423865, 8343, 344, 7, 29, "Message"],
Cell[424212, 8352, 1017, 19, 39, "Output"]
}, Open  ]],
Cell[425244, 8374, 92, 1, 39, "Input"],
Cell[CellGroupData[{
Cell[425361, 8379, 118, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[425504, 8384, 1073, 17, 39, "Input"],
Cell[426580, 8403, 10122, 154, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436739, 8562, 622, 11, 39, "Input"],
Cell[437364, 8575, 7736, 123, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445137, 8703, 2368, 61, 144, "Input"],
Cell[447508, 8766, 8441, 135, 296, "Output"],
Cell[455952, 8903, 1801, 51, 67, "Print"]
}, Open  ]],
Cell[457768, 8957, 94, 1, 39, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457899, 8963, 143, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[458067, 8968, 1300, 33, 66, "Input"],
Cell[459370, 9003, 4066, 73, 300, "Output"]
}, Open  ]],
Cell[463451, 9079, 1659, 41, 144, "Input"],
Cell[CellGroupData[{
Cell[465135, 9124, 215, 3, 66, "Input"],
Cell[465353, 9129, 2951, 66, 98, "Output"],
Cell[468307, 9197, 3076, 65, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471420, 9267, 393, 5, 92, "Input"],
Cell[471816, 9274, 1789, 28, 39, "Output"],
Cell[CellGroupData[{
Cell[473630, 9306, 515, 10, 34, "Print"],
Cell[474148, 9318, 481, 9, 29, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474690, 9334, 185, 4, 80, "Section"],
Cell[474878, 9340, 2563, 67, 170, "Input"],
Cell[CellGroupData[{
Cell[477466, 9411, 603, 11, 66, "Input"],
Cell[478072, 9424, 7098, 120, 303, "Output"],
Cell[485173, 9546, 1869, 26, 39, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

